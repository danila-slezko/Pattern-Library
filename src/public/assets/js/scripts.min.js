/** @format */

function Util() {}
function CustomEvent(e, t) {
  t = t || { bubbles: !1, cancelable: !1, detail: void 0 };
  var n = document.createEvent("CustomEvent");
  return n.initCustomEvent(e, t.bubbles, t.cancelable, t.detail), n;
}
function initAlertEvent(t) {
  t.addEventListener("click", function (e) {
    e.preventDefault(), Util.removeClass(t.closest(".js-alert"), "alert--is-visible");
  });
}
function initGoogleMap() {
  var e = document.getElementsByClassName("js-google-maps");
  if (0 < e.length) for (var t = 0; t < e.length; t++) initContactMap(e[t]);
}
function initContactMap(e) {
  var t = e.getAttribute("data-coordinates").split(","),
    n = new google.maps.Map(e, { zoom: 10, center: { lat: Number(t[0]), lng: Number(t[1]) } });
  new google.maps.Marker({ position: { lat: Number(t[0]), lng: Number(t[1]) }, map: n });
}
(Util.hasClass = function (e, t) {
  return e.classList ? e.classList.contains(t) : !!e.className.match(new RegExp("(\\s|^)" + t + "(\\s|$)"));
}),
  (Util.addClass = function (e, t) {
    var n = t.split(" ");
    e.classList ? e.classList.add(n[0]) : Util.hasClass(e, n[0]) || (e.className += " " + n[0]), 1 < n.length && Util.addClass(e, n.slice(1).join(" "));
  }),
  (Util.removeClass = function (e, t) {
    var n,
      s = t.split(" ");
    e.classList ? e.classList.remove(s[0]) : Util.hasClass(e, s[0]) && ((n = new RegExp("(\\s|^)" + s[0] + "(\\s|$)")), (e.className = e.className.replace(n, " "))), 1 < s.length && Util.removeClass(e, s.slice(1).join(" "));
  }),
  (Util.toggleClass = function (e, t, n) {
    n ? Util.addClass(e, t) : Util.removeClass(e, t);
  }),
  (Util.setAttributes = function (e, t) {
    for (var n in t) e.setAttribute(n, t[n]);
  }),
  (Util.getChildrenByClassName = function (e, t) {
    e.children;
    for (var n = [], s = 0; s < e.children.length; s++) Util.hasClass(e.children[s], t) && n.push(e.children[s]);
    return n;
  }),
  (Util.is = function (e, t) {
    if (t.nodeType) return e === t;
    for (var n = "string" == typeof t ? document.querySelectorAll(t) : t, s = n.length; s--; ) if (n[s] === e) return !0;
    return !1;
  }),
  (Util.setHeight = function (s, e, i, a, l) {
    var o = e - s,
      r = null,
      d = function (e) {
        var t = e - (r = r || e),
          n = parseInt((t / a) * o + s);
        (i.style.height = n + "px"), t < a ? window.requestAnimationFrame(d) : l();
      };
    (i.style.height = s + "px"), window.requestAnimationFrame(d);
  }),
  (Util.scrollTo = function (s, i, a, e) {
    var l = e || window,
      o = l.scrollTop || document.documentElement.scrollTop,
      r = null;
    e || (o = window.scrollY || document.documentElement.scrollTop);
    var d = function (e) {
      var t = e - (r = r || e);
      i < t && (t = i);
      var n = Math.easeInOutQuad(t, o, s - o, i);
      l.scrollTo(0, n), t < i ? window.requestAnimationFrame(d) : a && a();
    };
    window.requestAnimationFrame(d);
  }),
  (Util.moveFocus = function (e) {
    (e = e || document.getElementsByTagName("body")[0]).focus(), document.activeElement !== e && (e.setAttribute("tabindex", "-1"), e.focus());
  }),
  (Util.getIndexInArray = function (e, t) {
    return Array.prototype.indexOf.call(e, t);
  }),
  (Util.cssSupports = function (e, t) {
    return "CSS" in window
      ? CSS.supports(e, t)
      : e.replace(/-([a-z])/g, function (e) {
          return e[1].toUpperCase();
        }) in document.body.style;
  }),
  (Util.extend = function () {
    var n = {},
      s = !1,
      e = 0,
      t = arguments.length;
    "[object Boolean]" === Object.prototype.toString.call(arguments[0]) && ((s = arguments[0]), e++);
    for (; e < t; e++) {
      !(function (e) {
        for (var t in e) Object.prototype.hasOwnProperty.call(e, t) && (s && "[object Object]" === Object.prototype.toString.call(e[t]) ? (n[t] = extend(!0, n[t], e[t])) : (n[t] = e[t]));
      })(arguments[e]);
    }
    return n;
  }),
  (Util.osHasReducedMotion = function () {
    if (!window.matchMedia) return !1;
    var e = window.matchMedia("(prefers-reduced-motion: reduce)");
    return !!e && e.matches;
  }),
  Element.prototype.matches || (Element.prototype.matches = Element.prototype.msMatchesSelector || Element.prototype.webkitMatchesSelector),
  Element.prototype.closest ||
    (Element.prototype.closest = function (e) {
      var t = this;
      if (!document.documentElement.contains(t)) return null;
      do {
        if (t.matches(e)) return t;
        t = t.parentElement || t.parentNode;
      } while (null !== t && 1 === t.nodeType);
      return null;
    }),
  "function" != typeof window.CustomEvent && ((CustomEvent.prototype = window.Event.prototype), (window.CustomEvent = CustomEvent)),
  (Math.easeInOutQuad = function (e, t, n, s) {
    return (e /= s / 2) < 1 ? (n / 2) * e * e + t : (-n / 2) * (--e * (e - 2) - 1) + t;
  }),
  (Math.easeInQuart = function (e, t, n, s) {
    return n * (e /= s) * e * e * e + t;
  }),
  (Math.easeOutQuart = function (e, t, n, s) {
    return (e /= s), -n * (--e * e * e * e - 1) + t;
  }),
  (Math.easeInOutQuart = function (e, t, n, s) {
    return (e /= s / 2) < 1 ? (n / 2) * e * e * e * e + t : (-n / 2) * ((e -= 2) * e * e * e - 2) + t;
  }),
  (Math.easeOutElastic = function (e, t, n, s) {
    var i = 1.70158,
      a = 0.7 * s,
      l = n;
    return 0 == e ? t : 1 == (e /= s) ? t + n : ((a = a || 0.3 * s), (i = l < Math.abs(n) ? ((l = n), a / 4) : (a / (2 * Math.PI)) * Math.asin(n / l)), l * Math.pow(2, -10 * e) * Math.sin(((e * s - i) * (2 * Math.PI)) / a) + n + t);
  }),
  (function () {
    var s = document.getElementsByClassName("js-tab-focus");
    function t() {
      0 < s.length && (i(!1), window.addEventListener("keydown", n)), window.removeEventListener("mousedown", t);
    }
    function n(e) {
      9 === e.keyCode && (i(!0), window.removeEventListener("keydown", n), window.addEventListener("mousedown", t));
    }
    function i(e) {
      for (var t = e ? "" : "none", n = 0; n < s.length; n++) s[n].style.setProperty("outline", t);
    }
    window.addEventListener("mousedown", t);
  })(),
  (function () {
    function e(e) {
      (this.element = e),
        (this.mianContent = document.getElementsByClassName("js-td-drawer-main")),
        (this.content = document.getElementsByClassName("js-td-drawer__body")),
        (this.triggers = document.querySelectorAll('[aria-controls="' + this.element.getAttribute("id") + '"]')),
        (this.firstFocusable = null),
        (this.lastFocusable = null),
        (this.selectedTrigger = null),
        (this.showClass = "td-drawer--is-visible"),
        (this.showMainClass = "td-drawer-main--drawer-is-visible"),
        (function (t) {
          if (t.triggers)
            for (var e = 0; e < t.triggers.length; e++)
              t.triggers[e].addEventListener("click", function (e) {
                e.preventDefault(),
                  Util.hasClass(t.element, t.showClass)
                    ? s(t)
                    : ((t.selectedTrigger = e.target),
                      (function (n) {
                        0 < n.content.length && (n.content[0].scrollTop = 0);
                        0 < n.mianContent.length && Util.addClass(n.mianContent[0], n.showMainClass);
                        Util.addClass(n.element, n.showClass),
                          (function (e) {
                            var t = e.element.querySelectorAll('[href], input:not([disabled]), select:not([disabled]), textarea:not([disabled]), button:not([disabled]), iframe, object, embed, [tabindex]:not([tabindex="-1"]), [contenteditable], audio[controls], video[controls], summary');
                            (function (e, t) {
                              for (var n = 0; n < t.length; n++) if (t[n].offsetWidth || t[n].offsetHeight || t[n].getClientRects().length) return (e.firstFocusable = t[n]);
                            })(e, t),
                              (function (e, t) {
                                for (var n = t.length - 1; 0 <= n; n--) if (t[n].offsetWidth || t[n].offsetHeight || t[n].getClientRects().length) return (e.lastFocusable = t[n]);
                              })(e, t);
                          })(n),
                          Util.moveFocus(n.element),
                          n.element.addEventListener("transitionend", function e(t) {
                            Util.moveFocus(n.element), n.element.removeEventListener("transitionend", e);
                          }),
                          a(n, "drawerIsOpen");
                      })(t),
                      n(t));
              });
          Util.hasClass(t.element, t.showClass) && n(t);
        })(this);
    }
    function s(e) {
      var t;
      0 < e.mianContent.length && Util.removeClass(e.mianContent[0], e.showMainClass), Util.removeClass(e.element, e.showClass), (e.firstFocusable = null), (e.lastFocusable = null), e.selectedTrigger && e.selectedTrigger.focus(), (t = e).element.removeEventListener("keydown", i.bind(t)), t.element.removeEventListener("click", i.bind(t)), a(e, "drawerIsClose");
    }
    function n(e) {
      e.element.addEventListener("keydown", i.bind(e)), e.element.addEventListener("click", i.bind(e));
    }
    function i(e) {
      switch (e.type) {
        case "click":
          !(function (e, t) {
            if (!t.target.closest(".js-td-drawer__close") && !Util.hasClass(t.target, "js-td-drawer")) return;
            t.preventDefault(), s(e);
          })(this, e);
        case "keydown":
          (t = this),
            ((n = e).keyCode && 27 == n.keyCode) || (n.key && "Escape" == n.key)
              ? s(t)
              : ((n.keyCode && 9 == n.keyCode) || (n.key && "Tab" == n.key)) &&
                (function (e, t) {
                  e.firstFocusable == document.activeElement && t.shiftKey && (t.preventDefault(), e.lastFocusable.focus());
                  e.lastFocusable != document.activeElement || t.shiftKey || (t.preventDefault(), e.firstFocusable.focus());
                })(t, n);
      }
      var t, n;
    }
    function a(e, t) {
      var n = new CustomEvent(t, { detail: e.selectedTrigger });
      e.element.dispatchEvent(n);
    }
    var t = document.getElementsByClassName("js-td-drawer");
    if (0 < t.length) for (var l = 0; l < t.length; l++) new e(t[l]);
  })(),
  (function () {
    function e(e) {
      (this.element = e), (this.items = Util.getChildrenByClassName(this.element, "js-accordion__item")), (this.version = this.element.getAttribute("data-version") ? "-" + this.element.getAttribute("data-version") : ""), (this.showClass = "accordion" + this.version + "__item--is-open"), (this.animateHeight = "on" == this.element.getAttribute("data-animation")), (this.multiItems = !("off" == this.element.getAttribute("data-multi-items"))), this.initAccordion();
    }
    (e.prototype.initAccordion = function () {
      for (var e = 0; e < this.items.length; e++) {
        var t = this.items[e].getElementsByTagName("button")[0],
          n = this.items[e].getElementsByClassName("js-accordion__panel")[0],
          s = Util.hasClass(this.items[e], this.showClass) ? "true" : "false";
        Util.setAttributes(t, { "aria-expanded": s, "aria-controls": "accordion-content-" + e, id: "accordion-header-" + e }), Util.addClass(t, "js-accordion__trigger"), Util.setAttributes(n, { "aria-labelledby": "accordion-header-" + e, id: "accordion-content-" + e });
      }
      this.initAccordionEvents();
    }),
      (e.prototype.initAccordionEvents = function () {
        var n = this;
        this.element.addEventListener("click", function (e) {
          var t = e.target.closest(".js-accordion__trigger");
          t && 0 <= Util.getIndexInArray(n.items, t.parentElement) && n.triggerAccordion(t);
        });
      }),
      (e.prototype.triggerAccordion = function (e) {
        var t = "true" === e.getAttribute("aria-expanded");
        this.animateAccordion(e, t);
      }),
      (e.prototype.animateAccordion = function (e, t) {
        var n = e.closest(".js-accordion__item"),
          s = n.getElementsByClassName("js-accordion__panel")[0],
          i = t ? "false" : "true";
        t || Util.addClass(n, this.showClass), e.setAttribute("aria-expanded", i), this.resetContentVisibility(n, s, t), this.multiItems || t || this.closeSiblings(n);
      }),
      (e.prototype.resetContentVisibility = function (e, t, n) {
        Util.toggleClass(e, this.showClass, !n), t.removeAttribute("style"), n && !this.multiItems && this.moveContent();
      }),
      (e.prototype.closeSiblings = function (e) {
        for (var t = Util.getIndexInArray(this.items, e), n = 0; n < this.items.length; n++) if (Util.hasClass(this.items[n], this.showClass) && n != t) return this.animateAccordion(this.items[n].getElementsByClassName("js-accordion__trigger")[0], !0), !1;
      }),
      (e.prototype.moveContent = function () {
        var e,
          t,
          n = this.element.getElementsByClassName(this.showClass);
        0 == n.length || (((e = n[0].getBoundingClientRect()).top < 0 || e.top > window.innerHeight) && ((t = window.scrollY || document.documentElement.scrollTop), window.scrollTo(0, e.top + t)));
      }),
      (window.Accordion = e);
    var t = document.getElementsByClassName("js-accordion");
    if (0 < t.length) for (var n = 0; n < t.length; n++) new e(t[n]);
  })(),
  (function () {
    function e(e) {
      (this.element = e),
        (this.list = this.element.getElementsByClassName("js-adapt-nav__list")[0]),
        (this.items = this.element.getElementsByClassName("js-adapt-nav__item")),
        (this.moreBtn = this.element.getElementsByClassName("js-adapt-nav__item--more")[0]),
        (this.dropdown = this.moreBtn.getElementsByTagName("ul")[0]),
        (this.dropdownItems = this.dropdown.getElementsByTagName("a")),
        (this.dropdownClass = "adapt-nav__dropdown--is-visible"),
        (this.resizing = !1),
        (this.outrunIndex = this.items.length),
        (function (t) {
          (t.resizing = !0),
            o(t, "", !0),
            n.bind(t)(),
            window.addEventListener("resize", function (e) {
              t.resizing || ((t.resizing = !0), window.requestAnimationFrame(n.bind(t)));
            }),
            document.fonts &&
              document.fonts.ready.then(function () {
                t.resizing || ((t.resizing = !0), window.requestAnimationFrame(n.bind(t)));
              });
          Util.setAttributes(t.moreBtn, { "aria-expanded": "false", "aria-haspopup": "true", "aria-controls": t.dropdown.getAttribute("id") }),
            t.moreBtn.addEventListener("click", function (e) {
              t.dropdown.contains(e.target) || (e.preventDefault(), s(t, !Util.hasClass(t.dropdown, t.dropdownClass), !0));
            }),
            t.dropdown.addEventListener("keydown", function (e) {
              (e.keyCode && 40 == e.keyCode) || (e.key && "arrowdown" == e.key.toLowerCase()) ? i(t, e, "next") : ((e.keyCode && 38 == e.keyCode) || (e.key && "arrowup" == e.key.toLowerCase())) && i(t, e, "prev");
            }),
            window.addEventListener("keyup", function (e) {
              (e.keyCode && 9 == e.keyCode) || (e.key && "tab" == e.key.toLowerCase()) ? t.moreBtn.contains(document.activeElement) || s(t, !1, !1) : ((e.keyCode && 27 == e.keyCode) || (e.key && "escape" == e.key.toLowerCase())) && s(t, !1, !1);
            }),
            window.addEventListener("click", function (e) {
              t.moreBtn.contains(e.target) || s(t, !1);
            });
        })(this);
    }
    function n() {
      for (var e, t, n, s = ((t = this.list), (n = window.getComputedStyle(t)), parseFloat(t.getBoundingClientRect().width) - parseFloat(n.getPropertyValue("padding-right"))) - ((e = this.moreBtn), parseFloat(window.getComputedStyle(e).getPropertyValue("width"))), i = !1, a = o(this, (a = ""), !1), l = 0; l < this.outrunIndex; l++) {
        Util.hasClass(this.items[l], "is-hidden") && (Util.addClass(this.items[l], "adapt-nav__item--hidden"), Util.removeClass(this.items[l], "is-hidden")),
          s <= this.items[l].offsetWidth + this.items[l].offsetLeft + parseFloat(window.getComputedStyle(this.items[l]).getPropertyValue("margin-right")) || i ? ((a += r(this.items[l].cloneNode(!0))), Util.addClass(this.items[l], "is-hidden"), (i = !0)) : Util.removeClass(this.items[l], "is-hidden"),
          Util.removeClass(this.items[l], "adapt-nav__item--hidden");
      }
      Util.toggleClass(this.moreBtn, "adapt-nav__item--hidden", "" == a), (this.dropdown.innerHTML = a), Util.addClass(this.element, "adapt-nav--is-visible"), (this.outrunIndex = this.items.length), (this.resizing = !1);
    }
    function o(e, t, n) {
      if (e.items[0].offsetLeft < 0 || (n && 1 < e.outrunIndex)) {
        e.outrunIndex = e.outrunIndex - 1;
        var s = e.items[e.outrunIndex].cloneNode(!0);
        return Util.addClass(e.items[e.outrunIndex], "is-hidden"), o(e, (t = r(s) + t), n);
      }
      return n && (e.outrunIndex = e.items.length), t;
    }
    function s(t, e, n) {
      var s, i;
      Util.toggleClass(t.dropdown, t.dropdownClass, e),
        e
          ? (t.moreBtn.setAttribute("aria-expanded", "true"),
            Util.moveFocus(t.dropdownItems[0]),
            t.dropdown.addEventListener(
              "transitionend",
              function (e) {
                Util.moveFocus(t.dropdownItems[0]);
              },
              { once: !0 }
            ),
            (i = (s = t).dropdown.getBoundingClientRect().left) < 0 && (s.dropdown.style.right = i - 4 + "px"))
          : (t.moreBtn.setAttribute("aria-expanded", "false"), n && Util.moveFocus(t.moreBtn.getElementsByTagName("button")[0]), (t.dropdown.style.right = ""));
    }
    function i(e, t, n) {
      t.preventDefault();
      var s = Util.getIndexInArray(e.dropdownItems, t.target),
        i = "next" == n ? s + 1 : s - 1;
      i < 0 && (i = e.dropdownItems.length - 1), i > e.dropdownItems.length - 1 && (i = 0), Util.moveFocus(e.dropdownItems[i]);
    }
    function r(e) {
      Util.addClass(e, "adapt-nav__dropdown-item"), Util.removeClass(e, "js-adapt-nav__item is-hidden adapt-nav__item--hidden adapt-nav__item");
      var t = e.getElementsByClassName("adapt-nav__link");
      return 0 < t.length && (Util.addClass(t[0], "adapt-nav__dropdown-link js-tab-focus"), (t[0].style.outline = "none"), Util.removeClass(t[0], "adapt-nav__link")), e.outerHTML;
    }
    var t,
      a = document.getElementsByClassName("js-adapt-nav"),
      l = Util.cssSupports("align-items", "stretch");
    if (0 < a.length) for (var d = 0; d < a.length; d++) (t = d), l ? new e(a[t]) : Util.addClass(a[t], "adapt-nav--is-visible");
  })(),
  (function () {
    var e = document.getElementsByClassName("js-alert-card");
    if (0 < e.length)
      for (var n = 0; n < e.length; n++)
        !(function () {
          var t;
          (t = e[n]).addEventListener("click", function (e) {
            e.target.closest(".js-alert-card__close-btn") && Util.addClass(t, "is-hidden");
          });
        })();
  })(),
  (function () {
    var e = document.getElementsByClassName("js-alert__close-btn");
    if (0 < e.length) for (var t = 0; t < e.length; t++) initAlertEvent(e[t]);
  })(),
  (function () {
    var e = document.getElementsByClassName("js-anim-menu-btn");
    if (0 < e.length) {
      for (var t = 0; t < e.length; t++)
        !(function () {
          var n;
          (n = e[t]).addEventListener("click", function (e) {
            e.preventDefault();
            var t = !Util.hasClass(n, "anim-menu-btn--state-b");
            Util.toggleClass(n, "anim-menu-btn--state-b", t);
            e = new CustomEvent("anim-menu-btn-clicked", { detail: t });
            n.dispatchEvent(e);
          });
        })();
    }
  })(),
  (function () {
    function e(e) {
      var t;
      (this.element = e),
        (this.src = this.element.getAttribute("data-story-img-src")),
        (this.align = this.element.getAttribute("data-story-img-align") ? this.element.getAttribute("data-story-img-align") : "right"),
        (this.offset = this.element.getAttribute("data-story-img-offset-x") ? this.element.getAttribute("data-story-img-offset-x") : "0px"),
        (this.width = this.element.getAttribute("data-story-img-width") ? this.element.getAttribute("data-story-img-width") : "30%"),
        (this.customClasses = this.element.getAttribute("data-story-img-class") ? this.element.getAttribute("data-story-img-class") : "display@lg"),
        (this.previewClass = "story-v3__preview-img js-story-v3__preview-img " + this.customClasses),
        (this.previewVisibleClass = "story-v3__preview-img--is-visible"),
        (this.preview = !1),
        (this.eventBind = !1),
        (this.mousePosition = !1),
        (this.previewMoving = !1),
        (function (e) {
          (e.preview = document.createElement("img")), e.element.appendChild(e.preview), Util.addClass(e.preview, e.previewClass), Util.setAttributes(e.preview, { "aria-hidden": !0, src: e.src });
        })((t = this)),
        (t.eventBind = function (e) {
          switch (e.type) {
            case "mouseenter":
              !(function (e, t) {
                e.preview.setAttribute(
                  "style",
                  (function (e) {
                    var t = e.element.getBoundingClientRect(),
                      n = "";
                    n = "right" == e.align ? "right:" + s(t.width, e.offset) + "px;" : "left:" + s(t.width, e.offset) + "px;";
                    return "width: " + s(t.width, e.width) + "px;" + n;
                  })(e)
                ),
                  Util.addClass(e.preview, e.previewVisibleClass),
                  e.element.addEventListener("mouseleave", e.eventBind),
                  e.element.addEventListener("mousemove", e.eventBind),
                  (e.mousePosition = [t.clientX, t.clientY]);
              })(this, e);
              break;
            case "mouseleave":
              !(function (e) {
                Util.removeClass(e.preview, e.previewVisibleClass), (e.preview.style.transform = ""), e.element.removeEventListener("mouseleave", e.eventBind), e.element.removeEventListener("mousemove", e.eventBind);
              })(this);
              break;
            case "mousemove":
              !(function (i, a) {
                if (i.previewMoving) return;
                (i.previewMoving = !0),
                  window.requestAnimationFrame(function () {
                    var e, t, n, s;
                    (e = i), (n = (t = a).clientX - e.mousePosition[0]), (s = t.clientY - e.mousePosition[1]), (n = l(n)), (s = l(s)), (e.preview.style.transform = "translateY(calc(-50% + " + s + "px)) translateX(" + n + "px)"), (i.previewMoving = !1);
                  });
              })(this, e);
          }
        }.bind(t)),
        t.element.addEventListener("mouseenter", t.eventBind);
    }
    function s(e, t) {
      return -1 < t.indexOf("%") ? (e * parseInt(t)) / 100 : parseInt(t);
    }
    function l(e) {
      return parseInt(e / 30);
    }
    window.Story3 = e;
    var t = document.getElementsByClassName("js-story-v3");
    if (0 < t.length) for (var n = 0; n < t.length; n++) new e(t[n]);
  })(),
  (function () {
    var t,
      n,
      s,
      i,
      a,
      l = document.getElementsByClassName("js-back-to-top")[0];
    function o() {
      var e = n.scrollTop || document.documentElement.scrollTop;
      t || (e = window.scrollY || document.documentElement.scrollTop), Util.toggleClass(l, "back-to-top--is-visible", i <= e), (a = !1);
    }
    l &&
      ((t = l.getAttribute("data-element")),
      (n = t ? document.querySelector(t) : window),
      (s = parseInt(l.getAttribute("data-duration")) || 300),
      (i = parseInt(l.getAttribute("data-offset")) || 0),
      (a = !1),
      l.addEventListener("click", function (e) {
        e.preventDefault(), window.requestAnimationFrame ? (t ? Util.scrollTo(0, s, !1, n) : Util.scrollTo(0, s)) : n.scrollTo(0, 0), Util.moveFocus(document.getElementById(l.getAttribute("href").replace("#", "")));
      }),
      o(),
      0 < i &&
        n.addEventListener("scroll", function (e) {
          a ||
            ((a = !0),
            window.requestAnimationFrame
              ? window.requestAnimationFrame(o)
              : setTimeout(function () {
                  o();
                }, 250));
        }));
  })(),
  (function () {
    function e(e) {
      var t;
      (this.element = e),
        (this.hover = !1),
        (t = this).element.addEventListener("mouseenter", function (e) {
          (t.hover = !0), n(t.element, "from");
        }),
        t.element.addEventListener("mouseleave", function (e) {
          (t.hover = !1), n(t.element, "to");
        }),
        t.element.addEventListener("transitionend", function (e) {
          c(t.element);
        });
    }
    function n(e, t) {
      var n,
        s,
        i,
        a,
        l,
        o,
        r = "from" == t ? "-out" : "",
        d = "from" == t ? "" : "-out";
      Util.removeClass(e, "btn-slide-fx-hover" + r),
        c(e),
        Util.addClass(e, "btn--slide-fx-" + t + "-" + ((n = e), (s = event), (i = Math.abs(n.getBoundingClientRect().left - s.clientX)), (a = Math.abs(n.getBoundingClientRect().right - s.clientX)), (l = Math.abs(n.getBoundingClientRect().top - s.clientY)), (o = Math.abs(n.getBoundingClientRect().bottom - s.clientY)), (i < a ? i : a) < (l < o ? l : o) ? (i < a ? "left" : "right") : l < o ? "top" : "bottom")),
        setTimeout(function () {
          Util.addClass(e, "btn-slide-fx-animate");
        }, 5),
        setTimeout(function () {
          Util.addClass(e, "btn-slide-fx-hover" + d);
        }, 10);
    }
    function c(e) {
      Util.removeClass(e, "btn--slide-fx-from-left btn--slide-fx-from-right btn--slide-fx-from-bottom btn--slide-fx-from-top btn--slide-fx-to-left btn--slide-fx-to-right btn--slide-fx-to-bottom btn--slide-fx-to-top btn-slide-fx-animate");
    }
    var t = document.getElementsByClassName("js-btn--slide-fx");
    if (0 < t.length) for (var s = 0; s < t.length; s++) new e(t[s]);
  })(),
  (function () {
    function e(e) {
      (this.element = e),
        (this.sections = document.getElementsByClassName("js-cha-section")),
        (this.header = this.element.getElementsByClassName("js-cha-header")[0]),
        (this.headerTrigger = this.element.getElementsByClassName("js-cha-header__trigger")),
        (this.modal = document.getElementsByClassName("js-cha-modal")),
        (this.focusMenu = !1),
        (this.firstFocusable = null),
        (this.lastFocusable = null),
        (function (n) {
          for (var e = 0; e < n.sections.length; e++)
            !(function (e, t) {
              var n = 0 == t ? e.element : e.element.cloneNode(!0);
              Util.removeClass(n, "js-cha-header-clip");
              var s = e.sections[t].getAttribute("data-header-class");
              n.setAttribute("aria-hidden", "true"), s && Util.addClass(n.getElementsByClassName("js-cha-header")[0], s);
              0 != t &&
                ((function (e) {
                  for (var t = e.querySelectorAll("[href], button, input"), n = 0; n < t.length; n++) t[n].setAttribute("tabindex", "-1");
                })(n),
                e.sections[t].insertBefore(n, e.sections[t].firstChild));
            })(n, e);
          0 < n.headerTrigger.length &&
            (function (i) {
              for (var e = document.getElementsByClassName("js-cha-header__trigger"), t = 0; t < e.length; t++)
                e[t].addEventListener("click", function (e) {
                  e.preventDefault();
                  var t,
                    n,
                    s = !Util.hasClass(i.modal[0], "is-visible");
                  Util.toggleClass(i.modal[0], "is-visible", s),
                    i.headerTrigger[0].setAttribute("aria-expanded", s),
                    s
                      ? ((n = (t = i).modal[0].querySelectorAll('[href], input:not([disabled]), select:not([disabled]), textarea:not([disabled]), button:not([disabled]), iframe, object, embed, [tabindex]:not([tabindex="-1"]), [contenteditable], audio[controls], video[controls], summary')),
                        (function (e, t) {
                          for (var n = 0; n < t.length; n++) if (t[n].offsetWidth || t[n].offsetHeight || t[n].getClientRects().length) return (e.firstFocusable = t[n]);
                        })(t, n),
                        (function (e, t) {
                          for (var n = t.length - 1; 0 <= n; n--) if (t[n].offsetWidth || t[n].offsetHeight || t[n].getClientRects().length) return (e.lastFocusable = t[n]);
                        })(t, n),
                        i.firstFocusable.focus())
                      : i.focusMenu && (window.scrollY < i.focusMenu.offsetTop && i.focusMenu.focus(), (i.focusMenu = !1));
                });
              i.modal[0].addEventListener("click", function (e) {
                e.target.closest(".js-cha-modal__close") && s(i);
              }),
                window.addEventListener("keydown", function (e) {
                  var t;
                  ((e.keyCode && 27 == e.keyCode) || (e.key && "escape" == e.key.toLowerCase())) && "true" == i.headerTrigger[0].getAttribute("aria-expanded") && ((t = i.headerTrigger[0]).offsetWidth || t.offsetHeight || t.getClientRects().length) && s(i),
                    ((e.keyCode && 9 == e.keyCode) || (e.key && "tab" == e.key.toLowerCase())) &&
                      (function (e, t) {
                        e.firstFocusable == document.activeElement && t.shiftKey && (t.preventDefault(), e.lastFocusable.focus());
                        e.lastFocusable != document.activeElement || t.shiftKey || (t.preventDefault(), e.firstFocusable.focus());
                      })(i, e);
                });
            })(n);
          n.header.addEventListener("focusin", function (e) {
            var t;
            (t = n), window.scrollY > t.sections[0].offsetHeight - t.header.offsetHeight && window.scrollTo(0, 0);
          });
        })(this);
    }
    function s(e) {
      (e.focusMenu = e.headerTrigger[0]), e.headerTrigger[0].click();
    }
    var t = document.getElementsByClassName("js-cha-header-clip"),
      n = Util.cssSupports("clip-path", "polygon(0% 0%, 100% 0%, 100% 100%, 0% 100%)") || Util.cssSupports("-webkit-clip-path", "polygon(0% 0%, 100% 0%, 100% 100%, 0% 100%)");
    if (0 < t.length && n) for (var i = 0; i < t.length; i++) new e(t[i]);
  })(),
  (function () {
    function e(e) {
      (this.element = e), (this.input = this.element.getElementsByClassName("js-character-count__input")[0]), (this.characterLimit = Number(this.input.getAttribute("maxlength")) || 200), (this.counter = this.element.getElementsByClassName("js-character-count__counter")[0]), this.initCount();
    }
    (e.prototype.initCount = function () {
      var t = this;
      (this.counter.textContent = this.getCount()),
        this.input.addEventListener("input", function (e) {
          t.counter.textContent = t.getCount();
        });
    }),
      (e.prototype.getCount = function () {
        return this.characterLimit - this.input.value.length;
      });
    var t = document.getElementsByClassName("js-character-count");
    if (0 < t.length) for (var n = 0; n < t.length; n++) new e(t[n]);
  })(),
  (function () {
    function e(e) {
      (this.element = e),
        (this.btns = this.element.getElementsByClassName("js-choice-accordion__btn")),
        (this.inputs = (function (e) {
          for (var t = [], n = e.element.getElementsByClassName("js-choice-accordion__fallback"), s = 0; s < n.length; s++) t.push(n[s].getElementsByTagName("input")[0]);
          return t;
        })(this)),
        (this.contents = (function (e) {
          for (var t = [], n = 0; n < e.btns.length; n++) {
            var s = Util.getChildrenByClassName(e.btns[n].parentNode, "js-choice-accordion__panel");
            0 < s.length ? t.push(s[0]) : t.push(!1);
          }
          return t;
        })(this)),
        (this.isRadio = "radio" == this.inputs[0].type),
        (this.animateHeight = "on" == this.element.getAttribute("data-animation")),
        (function (e) {
          for (var t = 0; t < e.inputs.length; t++) {
            if (!e.contents[t]) return;
            var n = e.inputs[t].checked,
              s = e.inputs[t].getAttribute("id");
            (s = s || "choice-accordion-header-" + t), Util.setAttributes(e.inputs[t], { "aria-expanded": n, "aria-controls": "choice-accordion-content-" + t, id: s }), Util.setAttributes(e.contents[t], { "aria-labelledby": s, id: "choice-accordion-content-" + t }), Util.toggleClass(e.contents[t], "is-hidden", !n);
          }
        })(this),
        n(this, !1),
        (function (s) {
          s.element.addEventListener("click", function (e) {
            var t, n;
            -1 < Util.getIndexInArray(s.inputs, e.target) || ((t = e.target.closest(".js-choice-accordion__btn")) && ((n = Util.getIndexInArray(s.btns, t)), (s.isRadio && s.inputs[n].checked) || ((s.inputs[n].checked = !s.inputs[n].checked), s.inputs[n].dispatchEvent(new CustomEvent("change"))), s.inputs[n].focus()));
          });
          for (var e = 0; e < s.btns.length; e++)
            !(function (t) {
              s.inputs[t].addEventListener("change", function (e) {
                s.isRadio ? n(s, !0) : i(s, t, !0);
              }),
                s.inputs[t].addEventListener("focus", function (e) {
                  a(s, t, !0);
                }),
                s.inputs[t].addEventListener("blur", function (e) {
                  a(s, t, !1);
                });
            })(e);
        })(this);
    }
    function n(e, t) {
      for (var n = 0; n < e.btns.length; n++) i(e, n, t);
    }
    function i(e, t, n) {
      Util.toggleClass(e.btns[t], "choice-accordion__btn--checked", e.inputs[t].checked),
        n &&
          (function (e, t, n) {
            var s = e.inputs[t],
              i = e.contents[t];
            n && i && Util.removeClass(i, "is-hidden");
            {
              var a, l;
              s.setAttribute("aria-expanded", n), e.animateHeight && i && ((a = n ? 0 : i.offsetHeight), (l = n ? i.offsetHeight : 0));
            }
            window.requestAnimationFrame && e.animateHeight && !r && i
              ? Util.setHeight(a, l, i, 200, function () {
                  o(i, n);
                })
              : o(i, n);
          })(e, t, e.inputs[t].checked);
    }
    function a(e, t, n) {
      Util.toggleClass(e.btns[t], "choice-accordion__btn--focus", n);
    }
    function o(e, t) {
      e && (Util.toggleClass(e, "is-hidden", !t), e.removeAttribute("style"));
    }
    var t = document.getElementsByClassName("js-choice-accordion"),
      r = Util.osHasReducedMotion();
    if (0 < t.length) for (var s = 0; s < t.length; s++) new e(t[s]);
  })(),
  (function () {
    function e(e) {
      (this.element = e),
        (this.btns = this.element.getElementsByClassName("js-choice-btn")),
        (this.inputs = (function (e) {
          for (var t = [], n = 0; n < e.btns.length; n++) t.push(e.btns[n].getElementsByTagName("input")[0]);
          return t;
        })(this)),
        (this.isRadio = "radio" == this.inputs[0].type.toString()),
        n(this),
        (function (s) {
          s.element.addEventListener("click", function (e) {
            var t, n;
            -1 < Util.getIndexInArray(s.inputs, e.target) || ((t = e.target.closest(".js-choice-btn")) && ((n = Util.getIndexInArray(s.btns, t)), (s.isRadio && s.inputs[n].checked) || ((s.inputs[n].checked = !s.inputs[n].checked), s.inputs[n].dispatchEvent(new CustomEvent("change"))), s.inputs[n].focus()));
          });
          for (var e = 0; e < s.btns.length; e++)
            !(function (t) {
              s.inputs[t].addEventListener("change", function (e) {
                s.isRadio ? n(s) : i(s, t);
              }),
                s.inputs[t].addEventListener("focus", function (e) {
                  a(s, t, !0);
                }),
                s.inputs[t].addEventListener("blur", function (e) {
                  a(s, t, !1);
                });
            })(e);
        })(this);
    }
    function n(e) {
      for (var t = 0; t < e.btns.length; t++) i(e, t);
    }
    function i(e, t) {
      Util.toggleClass(e.btns[t], "choice-btn--checked", e.inputs[t].checked);
    }
    function a(e, t, n) {
      Util.toggleClass(e.btns[t], "choice-btn--focus", n);
    }
    var t = document.getElementsByClassName("js-choice-btns");
    if (0 < t.length) for (var s = 0; s < t.length; s++) new e(t[s]);
  })(),
  (function () {
    function e(e) {
      var s;
      (this.element = e),
        (this.imgs = this.element.getElementsByClassName("js-choice-img")),
        (this.isRadio = "radio" == this.imgs[0].getAttribute("role")),
        (function (e) {
          for (var t = 0; t < e.imgs.length; t++) {
            "true" != e.imgs[t].getAttribute("aria-checked") && e.isRadio ? e.imgs[t].removeAttribute("tabindex") : e.imgs[t].setAttribute("tabindex", "0");
          }
        })(this),
        (s = this).element.addEventListener("click", function (e) {
          var t,
            n = e.target.closest(".js-choice-img");
          n && ((t = Util.getIndexInArray(s.imgs, n)), (s.isRadio ? a : i)(s, n, t));
        }),
        s.element.addEventListener("keydown", function (e) {
          var t = e.target.closest(".js-choice-img");
          if (t)
            if ((e.keyCode && 32 == e.keyCode) || (e.key && " " == e.key.toLowerCase())) {
              if (s.isRadio) return;
              e.preventDefault();
              var n = Util.getIndexInArray(s.imgs, t);
              i(0, t);
            } else if ((e.keyCode && (40 == e.keyCode || 39 == e.keyCode)) || (e.key && ("arrowdown" == e.key.toLowerCase() || "arrowright" == e.key.toLowerCase()))) {
              if (!s.isRadio) return;
              e.preventDefault(), l(s, 1);
            } else if ((e.keyCode && (38 == e.keyCode || 37 == e.keyCode)) || (e.key && ("arrowup" == e.key.toLowerCase() || "arrowleft" == e.key.toLowerCase()))) {
              if (!s.isRadio) return;
              e.preventDefault(), l(s, -1);
            }
        });
    }
    function i(e, t) {
      var n = "false" == t.getAttribute("aria-checked") ? "true" : "false";
      t.setAttribute("aria-checked", n), t.focus();
    }
    function a(e, t, n) {
      var s = "false" == t.getAttribute("aria-checked") ? "true" : "false";
      if ("true" == s) {
        t.setAttribute("aria-checked", s), t.setAttribute("tabindex", "0");
        for (var i = 0; i < e.imgs.length; i++) i != n && (e.imgs[i].setAttribute("aria-checked", "false"), e.imgs[i].removeAttribute("tabindex"));
      }
      t.focus();
    }
    function l(e, t) {
      var n,
        s = e.element.querySelector('[aria-checked="true"]');
      s && ((n = Util.getIndexInArray(e.imgs, s)), (n += t) < 0 && (n = e.imgs.length - 1), n >= e.imgs.length && (n = 0), a(e, e.imgs[n], n));
    }
    var t = document.getElementsByClassName("js-choice-imgs");
    if (0 < t.length) for (var n = 0; n < t.length; n++) new e(t[n]);
  })(),
  (function () {
    function e(e) {
      var n;
      (this.element = e),
        (this.labels = this.element.getElementsByClassName("js-choice-tag")),
        (this.inputs = (function (e) {
          for (var t = [], n = 0; n < e.labels.length; n++) t.push(e.labels[n].getElementsByTagName("input")[0]);
          return t;
        })(this)),
        (this.isRadio = "radio" == this.inputs[0].type.toString()),
        (this.checkedClass = "choice-tag--checked"),
        (function (e) {
          for (var t = 0; t < e.inputs.length; t++) Util.toggleClass(e.labels[t], e.checkedClass, e.inputs[t].checked);
        })(this),
        (n = this).element.addEventListener("change", function (e) {
          var t = Util.getIndexInArray(n.inputs, e.target);
          t < 0 ||
            (Util.toggleClass(n.labels[t], n.checkedClass, e.target.checked),
            n.isRadio &&
              e.target.checked &&
              (function (e, t) {
                for (var n = 0; n < e.labels.length; n++) n != t && Util.removeClass(e.labels[n], e.checkedClass);
              })(n, t));
        });
    }
    var t = document.getElementsByClassName("js-choice-tags");
    if (0 < t.length) for (var n = 0; n < t.length; n++) new e(t[n]);
  })(),
  (function () {
    function e(e) {
      var t, n;
      (this.element = e),
        (this.fill = this.element.getElementsByClassName("c-progress-bar__fill")[0]),
        (this.fillLength = ((t = this), parseFloat(2 * Math.PI * t.fill.getAttribute("r")).toFixed(2))),
        (this.label = this.element.getElementsByClassName("js-c-progress-bar__value")),
        (this.value = parseFloat(this.element.getAttribute("data-progress"))),
        (n = this),
        m && n.element.removeAttribute("data-animation"),
        (this.animate = this.element.hasAttribute("data-animation") && "on" == this.element.getAttribute("data-animation")),
        (this.animationDuration = this.element.hasAttribute("data-duration") ? this.element.getAttribute("data-duration") : 1e3),
        (this.canAnimate = "IntersectionObserver" in window && "IntersectionObserverEntry" in window && "intersectionRatio" in window.IntersectionObserverEntry.prototype),
        (this.ariaLabel = this.element.getElementsByClassName("js-c-progress-bar__aria-value")),
        (this.changeColor = Util.hasClass(this.element, "c-progress-bar--color-update") && Util.cssSupports("color", "var(--color-value)")),
        this.changeColor &&
          (this.colorThresholds = (function (e) {
            var t = [],
              n = 1;
            for (; !isNaN(parseInt(getComputedStyle(e.element).getPropertyValue("--c-progress-bar-color-" + n))); ) t.push(parseInt(getComputedStyle(e.element).getPropertyValue("--c-progress-bar-color-" + n))), (n += 1);
            return t;
          })(this)),
        (function (a) {
          (function (e) {
            var t = e.fill.getAttribute("cx");
            e.fill.setAttribute("transform", "rotate(-90 " + t + " " + t + ")"), e.fill.setAttribute("stroke-dashoffset", e.fillLength), e.fill.setAttribute("stroke-dasharray", e.fillLength);
          })(a),
            a.changeColor && s(a, a.value);
          a.animate && a.canAnimate
            ? (function (e) {
                u(e, 0),
                  new IntersectionObserver(
                    function (e, t) {
                      var n = this;
                      0 < e[0].intersectionRatio.toFixed(1) &&
                        !this.animationTriggered &&
                        l(this, 0, this.value, this.animationDuration, function () {
                          o(n, "progressCompleted", n.value + "%");
                        });
                    }.bind(e),
                    { threshold: [0, 0.1] }
                  ).observe(e.element);
              })(a)
            : u(a, a.value);
          setTimeout(function () {
            Util.addClass(a.element, "c-progress-bar--init");
          }, 30),
            a.element.addEventListener("updateProgress", function (e) {
              a.animationId && window.cancelAnimationFrame(a.animationId);
              var t,
                n = e.detail.value,
                s = e.detail.duration ? e.detail.duration : a.animationDuration,
                i = ((t = a), 100 - Math.round((parseFloat(t.fill.getAttribute("stroke-dashoffset")) / t.fillLength) * 100));
              l(a, i, n, s, function () {
                o(a, "progressCompleted", a.value + "%"), 0 < a.ariaLabel.length && (a.ariaLabel[0].textContent = n + "%");
              });
            });
        })(this),
        (this.animationId = !1);
    }
    function u(e, t) {
      var n = (((100 - t) * e.fillLength) / 100).toFixed(2);
      e.fill.setAttribute("stroke-dashoffset", n), 0 < e.label.length && (e.label[0].textContent = t), e.changeColor && s(e, t);
    }
    function l(s, i, a, l, o) {
      var r = a - i,
        d = null,
        c = function (e) {
          var t = e - (d = d || e),
            n = parseInt((t / l) * r + i);
          0 < r && a < n && (n = a), r < 0 && n < a && (n = a), l <= t && (n = a), u(s, n), t < l ? (s.animationId = window.requestAnimationFrame(c)) : ((s.animationId = !1), o());
        };
      window.requestAnimationFrame && !m ? (s.animationId = window.requestAnimationFrame(c)) : (u(s, a), o());
    }
    function s(e, t) {
      for (var n, s, i = "c-progress-bar--fill-color-" + e.colorThresholds.length, a = e.colorThresholds.length; 0 < a; a--) !isNaN(e.colorThresholds[a - 1]) && t <= e.colorThresholds[a - 1] && (i = "c-progress-bar--fill-color-" + a);
      (s = (n = e).element.className.split(" ").filter(function (e) {
        return 0 !== e.lastIndexOf("c-progress-bar--fill-color-", 0);
      })),
        (n.element.className = s.join(" ").trim()),
        Util.addClass(e.element, i);
    }
    function o(e, t, n) {
      e.element.dispatchEvent(new CustomEvent(t, { detail: n }));
    }
    (e.prototype.setProgressBarValue = function (e) {
      u(this, e);
    }),
      (window.CProgressBar = e);
    var t = document.getElementsByClassName("js-c-progress-bar"),
      m = Util.osHasReducedMotion();
    if (0 < t.length) for (var n = 0; n < t.length; n++) new e(t[n]);
  })(),
  (function () {
    function e(e) {
      var s;
      (this.element = e),
        (this.header = this.element.getElementsByTagName("thead")[0]),
        (this.body = this.element.getElementsByTagName("tbody")[0]),
        (this.headerRows = this.header.getElementsByTagName("th")),
        (this.tableRows = this.body.getElementsByTagName("tr")),
        (this.collapsedLayoutClass = "cl-table--collapsed"),
        (this.mainColCellClass = "cl-table__th-inner"),
        (function (e) {
          for (var t = [], n = 0; n < e.tableRows.length; n++) for (var s = e.tableRows[n].getElementsByClassName("cl-table__cell"), i = 1; i < s.length; i++) 0 == n && (t[i] = ""), (t[i] = t[i] + '<li class="cl-table__item"><span class="cl-table__label">' + s[0].innerHTML + ":</span><span>" + s[i].innerHTML + "</span></li>");
          for (i = 1; i < e.headerRows.length; i++) {
            var a = '<input type="text" class="cl-table__input" aria-hidden="true"><span class="cl-table__th-inner">' + e.headerRows[i].innerHTML + '<i class="cl-table__th-icon" aria-hidden="true"></i></span><ul class="cl-table__list" aria-hidden="true">' + t[i] + "</ul>";
            (e.headerRows[i].innerHTML = a), Util.addClass(e.headerRows[i], "js-" + e.mainColCellClass);
          }
        })((s = this)),
        (function (e) {
          for (var t = e.header.getElementsByTagName("tr"), n = 0; n < t.length; n++) t[n].setAttribute("role", "row");
          for (var s = e.header.getElementsByTagName("th"), n = 0; n < s.length; n++) s[n].setAttribute("role", "cell");
        })(s),
        s.element.addEventListener("update-col-table", function (e) {
          var t, n;
          (t = s), (n = getComputedStyle(t.element, ":before").getPropertyValue("content").replace(/\'|"/g, "")), Util.toggleClass(t.element, t.collapsedLayoutClass, "expanded" != n);
        }),
        s.element.addEventListener("click", function (e) {
          t(s, e);
        }),
        s.element.addEventListener("keydown", function (e) {
          ((e.keyCode && 13 == e.keyCode) || (e.key && "enter" == e.key.toLowerCase())) && t(s, e);
        });
    }
    function t(e, t) {
      var n = t.target.closest(".js-" + e.mainColCellClass);
      n && !t.target.closest(".cl-table__list") && Util.toggleClass(n, "cl-table__cell--show-list", !Util.hasClass(n, "cl-table__cell--show-list"));
    }
    var n = document.getElementsByClassName("js-cl-table");
    if (0 < n.length) {
      for (var s, i, a = 0, l = [], o = 0; o < n.length; o++) {
        var r = getComputedStyle(n[o], ":before").getPropertyValue("content");
        r && "" != r && "none" != r && (l.push(new e(n[o])), (a += 1));
      }
      function d() {
        for (var e = 0; e < l.length; e++) l[e].element.dispatchEvent(i);
      }
      0 < a &&
        ((s = !1),
        (i = new CustomEvent("update-col-table")),
        window.addEventListener("resize", function (e) {
          clearTimeout(s), (s = setTimeout(d, 300));
        }),
        window.requestAnimationFrame ? window.requestAnimationFrame(d) : d());
    }
  })(),
  (function () {
    function e(e) {
      (this.element = e),
        (this.select = !1),
        (function (e) {
          var t = e.element.getElementsByClassName("js-color-swatches__select");
          if (0 == t.length) return;
          e.select = t[0];
          for (var n = "", s = 0; s < e.select.options.length; s++) {
            var i = s == e.select.selectedIndex ? "true" : "false",
              a = s == e.select.selectedIndex ? " color-swatches__item--selected" : "",
              l = (function (e) {
                var t = e.getAttribute("data-custom-attr");
                if (!t) return "";
                for (var n = " ", s = t.split(","), i = 0; i < s.length; i++) {
                  var a = s[i].split(":");
                  n = n + a[0].trim() + '="' + a[1].trim() + '" ';
                }
                return n;
              })(e.select.options[s]);
            n = n + '<li class="color-swatches__item js-color-swatches__item' + a + '" role="radio" aria-checked="' + i + '" data-value="' + e.select.options[s].value + '"><span class="js-color-swatches__option js-tab-focus" tabindex="0"' + l + '><span class="sr-only js-color-swatch__label">' + e.select.options[s].text + '</span><span aria-hidden="true" style="' + e.select.options[s].getAttribute("data-style") + '" class="color-swatches__swatch"></span></span></li>';
          }
          var o = document.createElement("ul");
          Util.setAttributes(o, { class: "color-swatches__list js-color-swatches__list", role: "radiogroup" }), (o.innerHTML = n), e.element.insertBefore(o, e.select), Util.addClass(e.select, "is-hidden");
        })(this),
        (this.list = this.element.getElementsByClassName("js-color-swatches__list")[0]),
        (this.swatches = this.list.getElementsByClassName("js-color-swatches__option")),
        (this.labels = this.list.getElementsByClassName("js-color-swatch__label")),
        (this.selectedLabel = this.element.getElementsByClassName("js-color-swatches__color")),
        (this.focusOutId = !1),
        (function (t) {
          t.list.addEventListener("focusin", function (e) {
            t.focusOutId && clearTimeout(t.focusOutId), i(t, document.activeElement);
          }),
            t.list.addEventListener("focusout", function (e) {
              t.focusOutId = setTimeout(function () {
                s(t);
              }, 200);
            });
          for (var e = 0; e < t.swatches.length; e++)
            !(function (t, n) {
              t.swatches[n].addEventListener("mouseenter", function (e) {
                i(t, t.swatches[n]);
              }),
                t.swatches[n].addEventListener("mouseleave", function (e) {
                  s(t);
                });
            })(t, e);
          t.select &&
            (t.list.addEventListener("click", function (e) {
              n(t, e.target);
            }),
            t.list.addEventListener("keydown", function (e) {
              ((e.keyCode && 32 == e.keyCode) || (e.key && " " == e.key) || (e.keyCode && 13 == e.keyCode) || (e.key && "enter" == e.key.toLowerCase())) && n(t, e.target);
            }));
        })(this);
    }
    function n(e, t) {
      var n,
        s = t.closest(".js-color-swatches__item");
      s &&
        ((n = e.list.querySelector(".color-swatches__item--selected")) && (Util.removeClass(n, "color-swatches__item--selected"), n.setAttribute("aria-checked", "false")),
        Util.addClass(s, "color-swatches__item--selected"),
        s.setAttribute("aria-checked", "true"),
        (function (e, t) {
          for (var n = 0; n < e.options.length; n++)
            if (e.options[n].value == t) {
              (e.selectedIndex = n), e.dispatchEvent(new CustomEvent("change"));
              break;
            }
        })(e.select, s.getAttribute("data-value")));
    }
    function s(e) {
      var t = e.list.getElementsByClassName("color-swatches__item--selected");
      0 < t.length && i(e, t[0]);
    }
    function i(e, t) {
      var n = t.getElementsByClassName("js-color-swatch__label");
      0 != n.length && (e.selectedLabel[0].textContent = n[0].textContent);
    }
    var t = document.getElementsByClassName("js-color-swatches");
    if (0 < t.length) for (var a = 0; a < t.length; a++) new e(t[a]);
  })(),
  (function () {
    function e(e) {
      (this.element = e),
        (this.labels = this.element.getAttribute("data-labels") ? this.element.getAttribute("data-labels").split(",") : []),
        this.intervalId,
        this.createCountDown(),
        (this.days = this.element.getElementsByClassName("js-countdown__value--0")[0]),
        (this.hours = this.element.getElementsByClassName("js-countdown__value--1")[0]),
        (this.mins = this.element.getElementsByClassName("js-countdown__value--2")[0]),
        (this.secs = this.element.getElementsByClassName("js-countdown__value--3")[0]),
        (this.endTime = this.getEndTime()),
        this.initCountDown();
    }
    (e.prototype.createCountDown = function () {
      var e = document.createElement("div");
      Util.setAttributes(e, { "aria-hidden": "true", class: "countdown__timer" });
      for (var t = 0; t < 4; t++) {
        var n = document.createElement("span"),
          s = document.createElement("span"),
          i = document.createElement("span");
        n.setAttribute("class", "countdown__item"), s.setAttribute("class", "countdown__value countdown__value--" + t + " js-countdown__value--" + t), n.appendChild(s), this.labels && 0 < this.labels.length && ((i.textContent = this.labels[t].trim()), i.setAttribute("class", "countdown__label"), n.appendChild(i)), e.appendChild(n);
      }
      this.element.insertBefore(e, this.element.firstChild);
    }),
      (e.prototype.getEndTime = function () {
        return this.element.getAttribute("data-timer") ? 1e3 * Number(this.element.getAttribute("data-timer")) + new Date().getTime() : this.element.getAttribute("data-countdown") ? Number(new Date(this.element.getAttribute("data-countdown")).getTime()) : void 0;
      }),
      (e.prototype.initCountDown = function () {
        var e = this;
        (this.intervalId = setInterval(function () {
          e.updateCountDown(!1);
        }, 1e3)),
          this.updateCountDown(!0);
      }),
      (e.prototype.updateCountDown = function (e) {
        var t = parseInt((this.endTime - new Date().getTime()) / 1e3),
          n = 0,
          s = 0,
          i = 0,
          a = 0;
        isNaN(t) || t < 0 ? (clearInterval(this.intervalId), this.emitEndEvent()) : ((n = parseInt(t / 86400)), (t %= 86400), (s = parseInt(t / 3600)), (t %= 3600), (i = parseInt(t / 60)), (t %= 60), (a = parseInt(t))),
          e && 0 == n && (this.days.parentElement.style.display = "none"),
          e && 0 == n && 0 == s && (this.hours.parentElement.style.display = "none"),
          e && 0 == n && 0 == s && 0 == i && (this.mins.parentElement.style.display = "none"),
          (this.days.textContent = n),
          (this.hours.textContent = this.getTimeFormat(s)),
          (this.mins.textContent = this.getTimeFormat(i)),
          (this.secs.textContent = this.getTimeFormat(a));
      }),
      (e.prototype.getTimeFormat = function (e) {
        return ("0" + e).slice(-2);
      }),
      (e.prototype.emitEndEvent = function (e) {
        var t = new CustomEvent("countDownFinished");
        this.element.dispatchEvent(t);
      });
    var t = document.getElementsByClassName("js-countdown");
    if (0 < t.length) for (var n = 0; n < t.length; n++) new e(t[n]);
  })(),
  (function () {
    var t = function (e) {
      (this.options = Util.extend(t.defaults, e)),
        (this.element = this.options.element),
        (this.initialValue = parseFloat(this.options.initial)),
        (this.finalValue = parseFloat(this.element.textContent)),
        this.intervalId,
        (this.animationTriggered = !1),
        (this.canAnimate = "IntersectionObserver" in window && "IntersectionObserverEntry" in window && "intersectionRatio" in window.IntersectionObserverEntry.prototype),
        (function (e) {
          if (!e.canAnimate) return n(e);
          (function (e) {
            e.element.setAttribute("aria-hidden", "true");
            var t = document.createElement("span");
            (t.textContent = e.finalValue), Util.addClass(t, "sr-only"), e.element.parentNode.insertBefore(t, e.element.nextSibling);
          })(e),
            new IntersectionObserver(
              function (e, t) {
                0 < e[0].intersectionRatio.toFixed(1) && !this.animationTriggered && s(this);
              }.bind(e),
              { threshold: [0, 0.1] }
            ).observe(e.element),
            e.element.addEventListener("countUpReset", function () {
              e.reset();
            }),
            e.element.addEventListener("countUpRestart", function () {
              e.restart();
            });
        })(this);
    };
    function n(e) {
      Util.addClass(e.element.closest(".countup"), "countup--is-visible");
    }
    function s(d) {
      (d.element.textContent = d.initialValue), n(d), window.cancelAnimationFrame(d.intervalId);
      var c = null;
      d.intervalId = window.requestAnimationFrame(function e(t) {
        var n = t - (c = c || t);
        n > d.options.duration && (n = d.options.duration);
        var s,
          i,
          a,
          l,
          o,
          r = ((s = n), (i = d.initialValue), (a = d.finalValue - d.initialValue), (l = d.options.duration), -a * (s /= l) * (s - 2) + i);
        (d.element.textContent = (function (e, t) {
          return (e = t.options.decimal ? parseFloat(e.toFixed(t.options.decimal)) : parseInt(e)), t.options.separator && (e = e.toLocaleString("en")), e;
        })(r, d)),
          n < d.options.duration ? (d.intervalId = window.requestAnimationFrame(e)) : ((o = d).element.dispatchEvent(new CustomEvent("countUpComplete")), (o.animationTriggered = !0));
      });
    }
    (t.prototype.reset = function () {
      this.canAnimate && (window.cancelAnimationFrame(this.intervalId), (this.element.textContent = this.initialValue));
    }),
      (t.prototype.restart = function () {
        s(this);
      }),
      (t.defaults = { element: "", separator: !1, duration: 3e3, decimal: !1, initial: 0 }),
      (window.CountUp = t);
    var e,
      i,
      a,
      l,
      o,
      r = document.getElementsByClassName("js-countup");
    if (0 < r.length)
      for (var d = 0; d < r.length; d++)
        (o = l = a = i = void 0),
          (i = !!r[(e = d)].getAttribute("data-countup-sep") && r[e].getAttribute("data-countup-sep")),
          (a = r[e].getAttribute("data-countup-duration") ? r[e].getAttribute("data-countup-duration") : t.defaults.duration),
          (l = !!r[e].getAttribute("data-countup-decimal") && r[e].getAttribute("data-countup-decimal")),
          (o = r[e].getAttribute("data-countup-start") ? r[e].getAttribute("data-countup-start") : 0),
          new t({ element: r[e], separator: i, duration: a, decimal: l, initial: o });
  })(),
  (function () {
    function e(e) {
      var s;
      (this.element = e),
        (this.header = this.element.getElementsByClassName("js-cross-table__header")[0]),
        (this.body = this.element.getElementsByClassName("js-cross-table__body")[0]),
        (this.headerItems = this.header.getElementsByClassName("cross-table__cell")),
        (this.rows = this.body.getElementsByClassName("cross-table__row")),
        (this.rowSections = this.element.getElementsByClassName("js-cross-table__row--w-full")),
        (this.singleLayoutClass = "cross-table--cards"),
        (function (e) {
          e.element.setAttribute("role", "table"), e.header.setAttribute("role", "rowgroup"), e.body.setAttribute("role", "rowgroup");
          for (var t = e.element.getElementsByTagName("tr"), n = 0; n < t.length; n++) t[n].setAttribute("role", "row");
          for (var s = e.element.getElementsByTagName("th"), n = 0; n < s.length; n++) s[n].setAttribute("role", "rowheader");
          for (var i = e.element.getElementsByTagName("td"), n = 0; n < i.length; n++) i[n].setAttribute("role", "cell");
        })((s = this)),
        (function (e) {
          for (var t = [], n = 0; n < e.headerItems.length; n++) {
            var s = e.headerItems[n].getElementsByClassName("js-cross-table__label"),
              i = 0 < s.length ? s[0].innerHTML : e.headerItems[n].innerHTML;
            t.push(i);
          }
          for (n = 0; n < e.rows.length; n++) if (!Util.hasClass(e.rows[n], "js-cross-table__row--w-full")) for (var a = e.rows[n].children, l = 1; l < t.length; l++) a[l] && (a[l].innerHTML = '<span aria-hidden="true" class="cross-table__label">' + t[l] + ":</span> <span>" + a[l].innerHTML + "</span>");
        })(s),
        s.element.addEventListener("update-cross-table", function (e) {
          var t, n;
          (t = s),
            (n = getComputedStyle(t.element, ":before").getPropertyValue("content").replace(/\'|"/g, "")),
            Util.toggleClass(t.element, t.singleLayoutClass, "expanded" != n),
            (function (e, t) {
              if (0 == e.rowSections.length) return;
              if ("expanded" == t) {
                e.body.removeAttribute("style");
                for (var n = 0; n < e.rowSections.length; n++) e.rowSections[n].removeAttribute("style");
              } else {
                e.body.setAttribute("style", "padding-top:" + e.rowSections[0].offsetHeight + "px");
                for (n = 0; n < e.rowSections.length; n++) e.rowSections[n].setAttribute("style", "left:" + e.rowSections[n].nextElementSibling.offsetLeft + "px");
              }
            })(t, n);
        });
    }
    var t = document.getElementsByClassName("js-cross-table");
    if (0 < t.length) {
      for (var n, s, i = 0, a = [], l = 0; l < t.length; l++) {
        var o = getComputedStyle(t[l], ":before").getPropertyValue("content");
        o && "" != o && "none" != o && (a.push(new e(t[l])), (i += 1));
      }
      function r() {
        for (var e = 0; e < a.length; e++) a[e].element.dispatchEvent(s);
      }
      0 < i &&
        ((n = !1),
        (s = new CustomEvent("update-cross-table")),
        window.addEventListener("resize", function (e) {
          clearTimeout(n), (n = setTimeout(r, 300));
        }),
        window.requestAnimationFrame ? window.requestAnimationFrame(r) : r());
    }
  })(),
  (function () {
    function e(e) {
      (this.element = e),
        (this.select = this.element.getElementsByTagName("select")[0]),
        (this.optGroups = this.select.getElementsByTagName("optgroup")),
        (this.options = this.select.getElementsByTagName("option")),
        (this.selectedOption = (function (e) {
          var t = "";
          t = "selectedIndex" in e.select ? e.options[e.select.selectedIndex].text : e.select.querySelector("option[selected]").text;
          return t;
        })(this)),
        (this.selectId = this.select.getAttribute("id")),
        (this.trigger = !1),
        (this.dropdown = !1),
        (this.customOptions = !1),
        (this.arrowIcon = this.element.getElementsByTagName("svg")),
        (this.label = document.querySelector('[for="' + this.selectId + '"]')),
        (this.optionIndex = 0),
        (function (e) {
          e.element.insertAdjacentHTML(
            "beforeend",
            (function (e) {
              var t = e.element.getAttribute("data-trigger-class") ? " " + e.element.getAttribute("data-trigger-class") : "",
                n = e.options[e.select.selectedIndex].innerHTML + ", " + e.label.textContent,
                s = '<button type="button" class="js-select__button select__button' + t + '" aria-label="' + n + '" aria-expanded="false" aria-controls="' + e.selectId + '-dropdown"><span aria-hidden="true" class="js-select__label select__label">' + e.selectedOption + "</span>";
              {
                var i;
                0 < e.arrowIcon.length && e.arrowIcon[0].outerHTML && ((i = e.arrowIcon[0].cloneNode(!0)), Util.removeClass(i, "select__icon"), (s += i.outerHTML));
              }
              return s + "</button>";
            })(e) +
              (function (e) {
                var t = '<div class="js-select__dropdown select__dropdown" aria-describedby="' + e.selectId + '-description" id="' + e.selectId + '-dropdown">';
                if (
                  ((t += (function (e) {
                    return e.label ? '<p class="sr-only" id="' + e.selectId + '-description">' + e.label.textContent + "</p>" : "";
                  })(e)),
                  0 < e.optGroups.length)
                )
                  for (var n = 0; n < e.optGroups.length; n++) {
                    var s = e.optGroups[n].getElementsByTagName("option"),
                      i = '<li><span class="select__item select__item--optgroup">' + e.optGroups[n].getAttribute("label") + "</span></li>";
                    t = t + '<ul class="select__list" role="listbox">' + i + l(e, s) + "</ul>";
                  }
                else t = t + '<ul class="select__list" role="listbox">' + l(e, e.options) + "</ul>";
                return t;
              })(e)
          ),
            (e.dropdown = e.element.getElementsByClassName("js-select__dropdown")[0]),
            (e.trigger = e.element.getElementsByClassName("js-select__button")[0]),
            (e.customOptions = e.dropdown.getElementsByClassName("js-select__item")),
            Util.addClass(e.select, "is-hidden"),
            0 < e.arrowIcon.length && (e.arrowIcon[0].style.display = "none");
          a(e);
        })(this),
        (function (t) {
          (function (n) {
            n.dropdown.addEventListener("click", function (e) {
              var t = e.target.closest(".js-select__item");
              t &&
                (function (e, t) {
                  {
                    var n;
                    t.hasAttribute("aria-selected") && "true" == t.getAttribute("aria-selected")
                      ? e.trigger.setAttribute("aria-expanded", "false")
                      : ((n = e.dropdown.querySelector('[aria-selected="true"]')) && n.setAttribute("aria-selected", "false"),
                        t.setAttribute("aria-selected", "true"),
                        (e.trigger.getElementsByClassName("js-select__label")[0].textContent = t.textContent),
                        e.trigger.setAttribute("aria-expanded", "false"),
                        (function (e, t) {
                          (e.select.selectedIndex = t), e.select.dispatchEvent(new CustomEvent("change", { bubbles: !0 }));
                        })(e, t.getAttribute("data-index")),
                        s(e));
                  }
                  e.trigger.focus();
                })(n, t);
            });
          })(t),
            t.trigger.addEventListener("click", function () {
              i(t, !1);
            }),
            t.label &&
              t.label.addEventListener("click", function () {
                Util.moveFocus(t.trigger);
              });
          t.dropdown.addEventListener("keydown", function (e) {
            (e.keyCode && 38 == e.keyCode) || (e.key && "arrowup" == e.key.toLowerCase()) ? n(t, "prev", e) : ((e.keyCode && 40 == e.keyCode) || (e.key && "arrowdown" == e.key.toLowerCase())) && n(t, "next", e);
          }),
            t.element.addEventListener("select-updated", function (e) {
              !(function (e) {
                var t = e.dropdown.querySelector('[aria-selected="true"]');
                t && t.setAttribute("aria-selected", "false");
                var n = e.dropdown.querySelector('.js-select__item[data-index="' + e.select.selectedIndex + '"]');
                n.setAttribute("aria-selected", "true"), (e.trigger.getElementsByClassName("js-select__label")[0].textContent = n.textContent), e.trigger.setAttribute("aria-expanded", "false"), s(e);
              })(t);
            });
        })(this);
    }
    function i(t, e) {
      var n,
        s,
        i = e || ("true" == t.trigger.getAttribute("aria-expanded") ? "false" : "true");
      t.trigger.setAttribute("aria-expanded", i),
        "true" == i &&
          ((n = (s = t).dropdown.querySelector('[aria-selected="true"]') || s.dropdown.getElementsByClassName("js-select__item")[0]),
          Util.moveFocus(n),
          t.dropdown.addEventListener("transitionend", function e() {
            Util.moveFocus(n), t.dropdown.removeEventListener("transitionend", e);
          }),
          a(t));
    }
    function a(e) {
      Util.removeClass(e.dropdown, "select__dropdown--right select__dropdown--up");
      var t = e.trigger.getBoundingClientRect();
      Util.toggleClass(e.dropdown, "select__dropdown--right", document.documentElement.clientWidth - 5 < t.left + e.dropdown.offsetWidth);
      var n = window.innerHeight - t.bottom - 5 < t.top;
      Util.toggleClass(e.dropdown, "select__dropdown--up", n);
      var s = n ? t.top - 20 : window.innerHeight - t.bottom - 20;
      e.dropdown.setAttribute("style", "max-height: " + s + "px; width: " + t.width + "px;");
    }
    function n(e, t, n) {
      n.preventDefault();
      var s = Util.getIndexInArray(e.customOptions, document.activeElement);
      (s = "next" == t ? s + 1 : s - 1) < 0 && (s = e.customOptions.length - 1), s >= e.customOptions.length && (s = 0), Util.moveFocus(e.customOptions[s]);
    }
    function s(e) {
      e.trigger.setAttribute("aria-label", e.options[e.select.selectedIndex].innerHTML + ", " + e.label.textContent);
    }
    function l(e, t) {
      for (var n = "", s = 0; s < t.length; s++) {
        var i = t[s].hasAttribute("selected") ? ' aria-selected="true"' : ' aria-selected="false"',
          n = n + '<li><button type="button" class="reset js-select__item select__item select__item--option" role="option" data-value="' + t[s].value + '" ' + i + ' data-index="' + e.optionIndex + '">' + t[s].text + "</button></li>";
        e.optionIndex = e.optionIndex + 1;
      }
      return n;
    }
    var t = document.getElementsByClassName("js-select");
    if (0 < t.length) {
      for (var o = [], r = 0; r < t.length; r++) o.push(new e(t[r]));
      window.addEventListener("keyup", function (e) {
        ((e.keyCode && 27 == e.keyCode) || (e.key && "escape" == e.key.toLowerCase())) &&
          o.forEach(function (e) {
            var t;
            (t = e), document.activeElement.closest(".js-select") && t.trigger.focus(), i(e, "false");
          });
      }),
        window.addEventListener("click", function (s) {
          o.forEach(function (e) {
            var t, n;
            (t = e), (n = s.target), t.element.contains(n) || i(t, "false");
          });
        });
    }
  })(),
  (function () {
    var n = function (e) {
      var t;
      (this.options = Util.extend(n.defaults, e)),
        (this.element = this.options.element),
        (this.input = this.element.getElementsByClassName("js-date-input__text")[0]),
        (this.trigger = this.element.getElementsByClassName("js-date-input__trigger")[0]),
        (this.triggerLabel = this.trigger.getAttribute("aria-label")),
        (this.datePicker = this.element.getElementsByClassName("js-date-picker")[0]),
        (this.body = this.datePicker.getElementsByClassName("js-date-picker__dates")[0]),
        (this.navigation = this.datePicker.getElementsByClassName("js-date-picker__month-nav")[0]),
        (this.heading = this.datePicker.getElementsByClassName("js-date-picker__month-label")[0]),
        (this.pickerVisible = !1),
        (this.dateIndexes = [(t = this.options.dateFormat.toLowerCase().replace(/-/g, "")).indexOf("d"), t.indexOf("m"), t.indexOf("y")]),
        i(this),
        (this.dateSelected = !1),
        (this.selectedDay = !1),
        (this.selectedMonth = !1),
        (this.selectedYear = !1),
        (this.firstFocusable = !1),
        (this.lastFocusable = !1),
        (this.dateValueEl = this.element.getElementsByClassName("js-date-input__value")),
        0 < this.dateValueEl.length && (this.dateValueLabelInit = this.dateValueEl[0].textContent),
        (function (e) {
          b(e), 0 < e.dateValueEl.length && (i(e), y(e));
          var t = document.createElement("div");
          t.setAttribute("aria-live", "polite"), Util.addClass(t, "sr-only js-date-input__sr-live"), e.element.appendChild(t), (e.srLiveReagion = e.element.getElementsByClassName("js-date-input__sr-live")[0]);
        })(this),
        (function (s) {
          s.input.addEventListener("focus", function (e) {
            h(s, !0);
          }),
            s.trigger &&
              s.trigger.addEventListener("click", function (e) {
                e.preventDefault(), (s.pickerVisible = !1), h(s), s.trigger.setAttribute("aria-expanded", "true");
              });
          s.body.addEventListener("click", function (e) {
            e.preventDefault();
            var t,
              n = e.target.closest("button");
            n && ((s.dateSelected = !0), (s.selectedDay = n.innerText), (s.selectedMonth = s.currentMonth), (s.selectedYear = s.currentYear), ((t = s).input.value = p(t)), s.input.focus(), b(s), y(s));
          }),
            s.navigation.addEventListener("click", function (e) {
              e.preventDefault();
              var t = e.target.closest(".js-date-picker__month-nav-btn");
              t && (Util.hasClass(t, "js-date-picker__month-nav-btn--prev") ? o : l)(s, !0);
            }),
            window.addEventListener("keydown", function (e) {
              ((e.keyCode && 27 == e.keyCode) || (e.key && "escape" == e.key.toLowerCase())) && (document.activeElement.closest(".js-date-picker") ? s.input.focus() : r(s));
            }),
            window.addEventListener("click", function (e) {
              e.target.closest(".js-date-picker") || e.target.closest(".js-date-input") || !s.pickerVisible || r(s);
            }),
            s.body.addEventListener("keydown", function (e) {
              var t = s.currentDay;
              (e.keyCode && 40 == e.keyCode) || (e.key && "arrowdown" == e.key.toLowerCase())
                ? f((t += 7), s)
                : (e.keyCode && 39 == e.keyCode) || (e.key && "arrowright" == e.key.toLowerCase())
                ? f((t += 1), s)
                : (e.keyCode && 37 == e.keyCode) || (e.key && "arrowleft" == e.key.toLowerCase())
                ? f(--t, s)
                : (e.keyCode && 38 == e.keyCode) || (e.key && "arrowup" == e.key.toLowerCase())
                ? f((t -= 7), s)
                : (e.keyCode && 35 == e.keyCode) || (e.key && "end" == e.key.toLowerCase())
                ? (e.preventDefault(), f((t = t + 6 - g(s.currentYear, s.currentMonth, t)), s))
                : (e.keyCode && 36 == e.keyCode) || (e.key && "home" == e.key.toLowerCase())
                ? (e.preventDefault(), f((t -= g(s.currentYear, s.currentMonth, t)), s))
                : (e.keyCode && 34 == e.keyCode) || (e.key && "pagedown" == e.key.toLowerCase())
                ? (e.preventDefault(), l(s))
                : ((e.keyCode && 33 == e.keyCode) || (e.key && "pageup" == e.key.toLowerCase())) && (e.preventDefault(), o(s));
            }),
            s.datePicker.addEventListener("keydown", function (e) {
              ((e.keyCode && 9 == e.keyCode) || (e.key && "Tab" == e.key)) &&
                (function (e, t) {
                  t.firstFocusable == document.activeElement && e.shiftKey && (e.preventDefault(), t.lastFocusable.focus());
                  t.lastFocusable != document.activeElement || e.shiftKey || (e.preventDefault(), t.firstFocusable.focus());
                })(e, s);
            }),
            s.input.addEventListener("keydown", function (e) {
              (e.keyCode && 13 == e.keyCode) || (e.key && "enter" == e.key.toLowerCase()) ? (i(s), b(s), y(s), r(s)) : ((e.keyCode && 40 == e.keyCode) || (e.key && "arrowdown" == e.key.toLowerCase() && s.pickerVisible)) && s.body.querySelector('button[tabindex="0"]').focus();
            });
        })(this),
        C(this);
    };
    function d(e) {
      return e ? ((t = parseInt(e.split("-")[2])), isNaN(t) ? d(!1) : t) : new Date().getDate();
      var t;
    }
    function c(e) {
      return e ? ((t = parseInt(e.split("-")[1]) - 1), isNaN(t) ? c(!1) : t) : new Date().getMonth();
      var t;
    }
    function u(e) {
      return e ? ((t = parseInt(e.split("-")[0])), isNaN(t) ? u(!1) : t) : new Date().getFullYear();
      var t;
    }
    function l(e, t) {
      (e.currentYear = 11 === e.currentMonth ? e.currentYear + 1 : e.currentYear), (e.currentMonth = (e.currentMonth + 1) % 12), (e.currentDay = s(e)), a(e, t), (e.srLiveReagion.textContent = e.options.months[e.currentMonth] + " " + e.currentYear);
    }
    function o(e, t) {
      (e.currentYear = 0 === e.currentMonth ? e.currentYear - 1 : e.currentYear), (e.currentMonth = 0 === e.currentMonth ? 11 : e.currentMonth - 1), (e.currentDay = s(e)), a(e, t), (e.srLiveReagion.textContent = e.options.months[e.currentMonth] + " " + e.currentYear);
    }
    function s(e) {
      return e.currentDay > m(e.currentYear, e.currentMonth) ? 1 : e.currentDay;
    }
    function m(e, t) {
      return 32 - new Date(e, t, 32).getDate();
    }
    function i(e) {
      var t,
        n,
        s,
        i = !1,
        a = e.input.value;
      (e.dateSelected = !1), "" != a && ((t = (s = (n = e).input.value.split(n.options.dateSeparator))[n.dateIndexes[2]] + "-" + s[n.dateIndexes[1]] + "-" + s[n.dateIndexes[0]]), (e.dateSelected = !0), (i = t)), (e.currentDay = d(i)), (e.currentMonth = c(i)), (e.currentYear = u(i)), (e.selectedDay = !!e.dateSelected && e.currentDay), (e.selectedMonth = !!e.dateSelected && e.currentMonth), (e.selectedYear = !!e.dateSelected && e.currentYear);
    }
    function a(e, t) {
      var n = g(e.currentYear, e.currentMonth, "01");
      (e.body.innerHTML = ""), (e.heading.innerHTML = e.options.months[e.currentMonth] + " " + e.currentYear);
      for (var s = 1, i = "", a = 0; a < 6; a++)
        for (var l = 0; l < 7; l++)
          if (0 === a && l < n) i += "<li></li>";
          else {
            if (s > m(e.currentYear, e.currentMonth)) break;
            var o = "",
              r = "-1";
            s === e.currentDay && (r = "0"), e.dateSelected || c() != e.currentMonth || u() != e.currentYear || s != d() || (o += " date-picker__date--today"), e.dateSelected && s === e.selectedDay && e.currentYear === e.selectedYear && e.currentMonth === e.selectedMonth && (o += "  date-picker__date--selected"), (i = i + '<li><button class="date-picker__date' + o + '" tabindex="' + r + '">' + s + "</button></li>"), s++;
          }
      (e.body.innerHTML = i), e.pickerVisible || Util.addClass(e.datePicker, "date-picker--is-visible"), (e.pickerVisible = !0), t || e.body.querySelector('button[tabindex="0"]').focus(), w(e), C(e);
    }
    function r(e) {
      Util.removeClass(e.datePicker, "date-picker--is-visible"), (e.pickerVisible = !1), (e.firstFocusable = !1), (e.lastFocusable = !1), e.trigger && e.trigger.setAttribute("aria-expanded", "false");
    }
    function h(e, t) {
      e.pickerVisible ? r(e) : (i(e), a(e, t));
    }
    function g(e, t, n) {
      var s = new Date(e, t, n).getDay() - 1;
      return s < 0 && (s = 6), s;
    }
    function p(e) {
      var t = [];
      return (t[e.dateIndexes[0]] = v(e.selectedDay)), (t[e.dateIndexes[1]] = v(e.selectedMonth + 1)), (t[e.dateIndexes[2]] = e.selectedYear), t[0] + e.options.dateSeparator + t[1] + e.options.dateSeparator + t[2];
    }
    function v(e) {
      return e < 10 ? "0" + e : e;
    }
    function f(e, t) {
      var n = m(t.currentYear, t.currentMonth);
      if (n < e) (t.currentDay = e - n), l(t, !1);
      else if (e < 1) {
        var s = 0 == t.currentMonth ? 11 : t.currentMonth - 1;
        (t.currentDay = m(t.currentYear, s) + e), o(t, !1);
      } else {
        (t.currentDay = e), t.body.querySelector('button[tabindex="0"]').setAttribute("tabindex", "-1");
        for (var i = t.body.getElementsByTagName("button"), a = 0; a < i.length; a++)
          if (i[a].textContent == t.currentDay) {
            i[a].setAttribute("tabindex", "0"), i[a].focus();
            break;
          }
        w(t);
      }
    }
    function b(e) {
      e.trigger && (e.selectedYear && e.selectedMonth && e.selectedDay ? e.trigger.setAttribute("aria-label", e.triggerLabel + ", selected date is " + new Date(e.selectedYear, e.selectedMonth, e.selectedDay).toDateString()) : e.trigger.setAttribute("aria-label", e.triggerLabel));
    }
    function y(e) {
      e.dateValueEl.length < 1 || (e.selectedYear && e.selectedMonth && e.selectedDay ? (e.dateValueEl[0].textContent = p(e)) : (e.dateValueEl[0].textContent = e.dateValueLabelInit));
    }
    function w(e) {
      var t = e.datePicker.querySelectorAll('[href], input:not([disabled]), select:not([disabled]), textarea:not([disabled]), button:not([disabled]), iframe, object, embed, [tabindex]:not([tabindex="-1"]), [contenteditable], audio[controls], video[controls], summary');
      !(function (e, t) {
        for (var n = 0; n < e.length; n++) if ((e[n].offsetWidth || e[n].offsetHeight || e[n].getClientRects().length) && "-1" != e[n].getAttribute("tabindex")) return (t.firstFocusable = e[n]);
      })(t, e),
        (function (e, t) {
          for (var n = e.length - 1; 0 <= n; n--) if ((e[n].offsetWidth || e[n].offsetHeight || e[n].getClientRects().length) && "-1" != e[n].getAttribute("tabindex")) return (t.lastFocusable = e[n]);
        })(t, e);
    }
    function C(e) {
      (e.datePicker.style.left = "0px"), (e.datePicker.style.right = "auto"), e.datePicker.getBoundingClientRect().right > window.innerWidth && ((e.datePicker.style.left = "auto"), (e.datePicker.style.right = "0px"));
    }
    (n.prototype.showCalendar = function () {
      a(this);
    }),
      (n.prototype.showNextMonth = function () {
        l(this, !0);
      }),
      (n.prototype.showPrevMonth = function () {
        o(this, !0);
      }),
      (n.defaults = { element: "", months: ["January", "February", "March", "April", "May", "June", "July", "August", "September", "October", "November", "December"], dateFormat: "d-m-y", dateSeparator: "/" }),
      (window.DatePicker = n);
    var e,
      t,
      _ = document.getElementsByClassName("js-date-input"),
      E = Util.cssSupports("align-items", "stretch");
    if (0 < _.length)
      for (var x = 0; x < _.length; x++)
        (e = x),
          (t = void 0),
          E
            ? ((t = { element: _[e] }),
              _[e].getAttribute("data-date-format") && (t.dateFormat = _[e].getAttribute("data-date-format")),
              _[e].getAttribute("data-date-separator") && (t.dateSeparator = _[e].getAttribute("data-date-separator")),
              _[e].getAttribute("data-months") &&
                (t.months = _[e]
                  .getAttribute("data-months")
                  .split(",")
                  .map(function (e) {
                    return e.trim();
                  })),
              new n(t))
            : Util.addClass(_[e], "date-input--hide-calendar");
  })(),
  (function () {
    function e(e, t) {
      (this.element = e), (this.summary = this.element.getElementsByClassName("js-details__summary")[0]), (this.details = this.element.getElementsByClassName("js-details__content")[0]), (this.htmlElSupported = "open" in this.element), this.initDetails(t), this.initDetailsEvents();
    }
    (e.prototype.initDetails = function (e) {
      Util.setAttributes(this.summary, { "aria-expanded": "false", "aria-controls": "details--" + e, role: "button" }), Util.setAttributes(this.details, { "aria-hidden": "true", id: "details--" + e });
    }),
      (e.prototype.initDetailsEvents = function () {
        var s = this;
        this.htmlElSupported
          ? this.element.addEventListener("toggle", function (e) {
              var t = s.element.open ? ["true", "false"] : ["false", "true"];
              s.updateAriaValues(t);
            })
          : this.summary.addEventListener("click", function (e) {
              e.preventDefault();
              var t,
                n = s.element.getAttribute("open");
              n ? s.element.removeAttribute("open") : s.element.setAttribute("open", "true"), (t = n ? ["false", "true"] : ["true", "false"]), s.updateAriaValues(t);
            });
      }),
      (e.prototype.updateAriaValues = function (e) {
        this.summary.setAttribute("aria-expanded", e[0]), this.details.setAttribute("aria-hidden", e[1]);
      });
    var t = document.getElementsByClassName("js-details");
    if (0 < t.length) for (var n = 0; n < t.length; n++) new e(t[n], n);
  })(),
  (window.menuAim = function (e) {
    !(function (e) {
      function t(e) {
        v.push({ x: e.pageX, y: e.pageY }), 3 < v.length && v.shift();
      }
      function n() {
        a && clearTimeout(a), b.enter(this), o(this);
      }
      function s() {
        b.exit(this);
      }
      function i() {
        l(this);
      }
      var p = null,
        v = [],
        f = null,
        a = null,
        b = Util.extend({ menu: "", rows: !1, submenuSelector: "*", submenuDirection: "right", tolerance: 75, enter: function () {}, exit: function () {}, activate: function () {}, deactivate: function () {}, exitMenu: function () {} }, e),
        y = b.menu,
        l = function (e) {
          e != p && (p && b.deactivate(p), b.activate(e), (p = e));
        },
        o = function (e) {
          var t = r();
          t
            ? (a = setTimeout(function () {
                o(e);
              }, t))
            : l(e);
        },
        r = function () {
          if (!p || !Util.is(p, b.submenuSelector)) return 0;
          var e,
            t = { top: (e = y.getBoundingClientRect()).top + window.pageYOffset, left: e.left + window.pageXOffset },
            n = { x: t.left, y: t.top - b.tolerance },
            s = { x: t.left + y.offsetWidth, y: n.y },
            i = { x: t.left, y: t.top + y.offsetHeight + b.tolerance },
            a = { x: t.left + y.offsetWidth, y: i.y },
            l = v[v.length - 1],
            o = v[0];
          if (!l) return 0;
          if ((o = o || l).x < t.left || o.x > a.x || o.y < t.top || o.y > a.y) return 0;
          if (f && l.x == f.x && l.y == f.y) return 0;
          function r(e, t) {
            return (t.y - e.y) / (t.x - e.x);
          }
          var d = s,
            c = a;
          "left" == b.submenuDirection ? ((d = i), (c = n)) : "below" == b.submenuDirection ? ((d = a), (c = i)) : "above" == b.submenuDirection && ((d = n), (c = s));
          var u = r(l, d),
            m = r(l, c),
            h = r(o, d),
            g = r(o, c);
          return u < h && g < m ? ((f = l), 300) : ((f = null), 0);
        };
      y.addEventListener("mouseleave", function () {
        a && clearTimeout(a), b.exitMenu(this) && (p && b.deactivate(p), (p = null));
      });
      var d = b.rows ? b.rows : y.children;
      if (0 < d.length)
        for (var c = 0; c < d.length; c++)
          !(function (e) {
            d[e].addEventListener("mouseenter", n), d[e].addEventListener("mouseleave", s), d[e].addEventListener("click", i);
          })(c);
      document.addEventListener("mousemove", function (e) {
        window.requestAnimationFrame
          ? window.requestAnimationFrame(function () {
              t(e);
            })
          : t(e);
      });
    })(e);
  }),
  (function () {
    function e(e) {
      (this.element = e),
        (this.triggers = document.querySelectorAll('[aria-controls="' + this.element.getAttribute("id") + '"]')),
        (this.firstFocusable = null),
        (this.lastFocusable = null),
        (this.selectedTrigger = null),
        (this.showClass = "dialog--is-visible"),
        (function (t) {
          if (t.triggers)
            for (var e = 0; e < t.triggers.length; e++)
              t.triggers[e].addEventListener("click", function (e) {
                e.preventDefault(), (t.selectedTrigger = e.target), n(t), i(t);
              });
          t.element.addEventListener("openDialog", function (e) {
            e.detail && (self.selectedTrigger = e.detail), n(t), i(t);
          });
        })(this);
    }
    function n(n) {
      var e, t;
      Util.addClass(n.element, n.showClass),
        (t = (e = n).element.querySelectorAll('[href], input:not([disabled]), select:not([disabled]), textarea:not([disabled]), button:not([disabled]), iframe, object, embed, [tabindex]:not([tabindex="-1"]), [contenteditable], audio[controls], video[controls], summary')),
        (function (e, t) {
          for (var n = 0; n < t.length; n++) if (t[n].offsetWidth || t[n].offsetHeight || t[n].getClientRects().length) return (e.firstFocusable = t[n]);
        })(e, t),
        (function (e, t) {
          for (var n = t.length - 1; 0 <= n; n--) if (t[n].offsetWidth || t[n].offsetHeight || t[n].getClientRects().length) return (e.lastFocusable = t[n]);
        })(e, t),
        n.firstFocusable.focus(),
        n.element.addEventListener("transitionend", function e(t) {
          n.firstFocusable.focus(), n.element.removeEventListener("transitionend", e);
        }),
        l(n, "dialogIsOpen");
    }
    function s(e) {
      var t;
      Util.removeClass(e.element, e.showClass), (e.firstFocusable = null), (e.lastFocusable = null), e.selectedTrigger && e.selectedTrigger.focus(), (t = e).element.removeEventListener("keydown", a.bind(t)), t.element.removeEventListener("click", a.bind(t)), l(e, "dialogIsClose");
    }
    function i(e) {
      e.element.addEventListener("keydown", a.bind(e)), e.element.addEventListener("click", a.bind(e));
    }
    function a(e) {
      switch (e.type) {
        case "click":
          !(function (e, t) {
            if (!t.target.closest(".js-dialog__close")) return;
            t.preventDefault(), s(e);
          })(this, e);
        case "keydown":
          (t = this),
            ((n = e).keyCode && 27 == n.keyCode) || (n.key && "Escape" == n.key)
              ? s(t)
              : ((n.keyCode && 9 == n.keyCode) || (n.key && "Tab" == n.key)) &&
                (function (e, t) {
                  e.firstFocusable == document.activeElement && t.shiftKey && (t.preventDefault(), e.lastFocusable.focus());
                  e.lastFocusable != document.activeElement || t.shiftKey || (t.preventDefault(), e.firstFocusable.focus());
                })(t, n);
      }
      var t, n;
    }
    function l(e, t) {
      var n = new CustomEvent(t, { detail: e.selectedTrigger });
      e.element.dispatchEvent(n);
    }
    var t = document.getElementsByClassName("js-dialog");
    if (0 < t.length) for (var o = 0; o < t.length; o++) new e(t[o]);
  })(),
  (function () {
    function e(e) {
      (this.element = e), (this.content = document.getElementsByClassName("js-drawer__body")[0]), (this.triggers = document.querySelectorAll('[aria-controls="' + this.element.getAttribute("id") + '"]')), (this.firstFocusable = null), (this.lastFocusable = null), (this.selectedTrigger = null), (this.isModal = Util.hasClass(this.element, "js-drawer--modal")), (this.showClass = "drawer--is-visible"), this.initDrawer();
    }
    (e.prototype.initDrawer = function () {
      var t = this;
      if (this.triggers)
        for (var e = 0; e < this.triggers.length; e++)
          this.triggers[e].addEventListener("click", function (e) {
            e.preventDefault(), Util.hasClass(t.element, t.showClass) ? t.closeDrawer(e.target) : ((t.selectedTrigger = e.target), t.showDrawer(), t.initDrawerEvents());
          });
      Util.hasClass(this.element, this.showClass) && this.initDrawerEvents();
    }),
      (e.prototype.showDrawer = function () {
        var n = this;
        (this.content.scrollTop = 0),
          Util.addClass(this.element, this.showClass),
          this.getFocusableElements(),
          Util.moveFocus(this.element),
          this.element.addEventListener("transitionend", function e(t) {
            Util.moveFocus(n.element), n.element.removeEventListener("transitionend", e);
          }),
          this.emitDrawerEvents("drawerIsOpen", this.selectedTrigger);
      }),
      (e.prototype.closeDrawer = function (e) {
        Util.removeClass(this.element, this.showClass), (this.firstFocusable = null), (this.lastFocusable = null), this.selectedTrigger && this.selectedTrigger.focus(), this.cancelDrawerEvents(), this.emitDrawerEvents("drawerIsClose", e);
      }),
      (e.prototype.initDrawerEvents = function () {
        this.element.addEventListener("keydown", this), this.element.addEventListener("click", this);
      }),
      (e.prototype.cancelDrawerEvents = function () {
        this.element.removeEventListener("keydown", this), this.element.removeEventListener("click", this);
      }),
      (e.prototype.handleEvent = function (e) {
        switch (e.type) {
          case "click":
            this.initClick(e);
          case "keydown":
            this.initKeyDown(e);
        }
      }),
      (e.prototype.initKeyDown = function (e) {
        (e.keyCode && 27 == e.keyCode) || (e.key && "Escape" == e.key) ? this.closeDrawer(!1) : this.isModal && ((e.keyCode && 9 == e.keyCode) || (e.key && "Tab" == e.key)) && this.trapFocus(e);
      }),
      (e.prototype.initClick = function (e) {
        (e.target.closest(".js-drawer__close") || Util.hasClass(e.target, "js-drawer")) && (e.preventDefault(), this.closeDrawer(e.target));
      }),
      (e.prototype.trapFocus = function (e) {
        this.firstFocusable == document.activeElement && e.shiftKey && (e.preventDefault(), this.lastFocusable.focus()), this.lastFocusable != document.activeElement || e.shiftKey || (e.preventDefault(), this.firstFocusable.focus());
      }),
      (e.prototype.getFocusableElements = function () {
        var e = this.element.querySelectorAll('[href], input:not([disabled]), select:not([disabled]), textarea:not([disabled]), button:not([disabled]), iframe, object, embed, [tabindex]:not([tabindex="-1"]), [contenteditable], audio[controls], video[controls], summary');
        this.getFirstVisible(e), this.getLastVisible(e);
      }),
      (e.prototype.getFirstVisible = function (e) {
        for (var t = 0; t < e.length; t++) if (e[t].offsetWidth || e[t].offsetHeight || e[t].getClientRects().length) return (this.firstFocusable = e[t]), !0;
      }),
      (e.prototype.getLastVisible = function (e) {
        for (var t = e.length - 1; 0 <= t; t--) if (e[t].offsetWidth || e[t].offsetHeight || e[t].getClientRects().length) return (this.lastFocusable = e[t]), !0;
      }),
      (e.prototype.emitDrawerEvents = function (e, t) {
        var n = new CustomEvent(e, { detail: t });
        this.element.dispatchEvent(n);
      });
    var t = document.getElementsByClassName("js-drawer");
    if (0 < t.length) for (var n = 0; n < t.length; n++) new e(t[n]);
  })(),
  (function () {
    var e = document.getElementsByClassName("js-expandable-search");
    if (0 < e.length)
      for (var t = 0; t < e.length; t++)
        e[t].getElementsByClassName("js-expandable-search__input")[0].addEventListener("input", function (e) {
          Util.toggleClass(e.target, "expandable-search__input--has-content", 0 < e.target.value.length);
        });
  })(),
  (function () {
    function e(e) {
      (this.element = e),
        (this.rows = this.element.getElementsByClassName("js-ex-table__body")[0].getElementsByTagName("tr")),
        (this.layout = ""),
        s(this),
        (function (i) {
          for (var e = i.element.getElementsByClassName("js-ex-table__btn"), t = 0; t < e.length; t++) {
            var n = !!e[t].closest(".ex-table__row--show-more-content");
            e[t].setAttribute("aria-expanded", n);
          }
          i.element.addEventListener("update-table", function (e) {
            var t;
            s((t = i)), Util.toggleClass(t.element, r, "collapsed" != t.layout), Util.addClass(t.element, "ex-table--loaded"), a(i);
          }),
            i.element.addEventListener("click", function (e) {
              var t,
                n,
                s = e.target.closest(".js-ex-table__btn");
              s && ((t = s.parentNode.parentNode), (n = !Util.hasClass(t, "ex-table__row--show-more-content")), Util.toggleClass(t, "ex-table__row--show-more-content", n), s.setAttribute("aria-expanded", n), n || l(i, t, n), a(i));
            });
        })(this);
    }
    function s(e) {
      e.layout = getComputedStyle(e.element, ":before").getPropertyValue("content").replace(/\'|"/g, "");
    }
    function a(e) {
      for (var t = 0; t < e.rows.length; t++) Util.hasClass(e.rows[t], "ex-table__row--show-more-content") && l(e, e.rows[t], !0);
    }
    function l(e, t, n) {
      var s = t.getElementsByClassName("js-ex-table__more-content");
      0 != s.length &&
        ("expanded" == e.layout
          ? (function (e, t, n) {
              if (n) {
                for (var s = t.offsetHeight, i = e.children, a = 0; a < i.length; a++) i[a].setAttribute("style", "border-bottom-width:" + s + "px;");
                t.setAttribute("style", "top: " + parseFloat(e.offsetHeight + e.offsetTop - s) + "px;");
              } else o(e, t);
            })(t, s[0], n)
          : o(t, s[0]));
    }
    function o(e, t) {
      t.removeAttribute("style");
      for (var n = e.children, s = 0; s < n.length; s++) n[s].removeAttribute("style");
    }
    var t = document.getElementsByClassName("js-ex-table"),
      r = "ex-table--expanded";
    if (0 < t.length) {
      for (var n, i, d = 0, c = [], u = 0; u < t.length; u++) {
        var m = getComputedStyle(t[u], ":before").getPropertyValue("content");
        m && "" != m && "none" != m ? (c.push(new e(t[u])), (d += 1)) : Util.addClass(t[u], "ex-table--loaded");
      }
      function h() {
        for (var e = 0; e < c.length; e++) c[e].element.dispatchEvent(i);
      }
      0 < d &&
        ((n = !1),
        (i = new CustomEvent("update-table")),
        window.addEventListener("resize", function (e) {
          clearTimeout(n), (n = setTimeout(h, 300));
        }),
        window.requestAnimationFrame ? window.requestAnimationFrame(h) : h());
    }
  })(),
  (function () {
    function e(e) {
      var t;
      (this.element = e),
        (this.input = this.element.getElementsByClassName("file-upload__input")[0]),
        (this.label = this.element.getElementsByClassName("file-upload__label")[0]),
        (this.multipleUpload = this.input.hasAttribute("multiple")),
        (this.labelText = this.element.getElementsByClassName("file-upload__text")[0]),
        (this.initialLabel = this.labelText.textContent),
        (t = this).label.setAttribute("tabindex", "0"),
        t.input.setAttribute("tabindex", "-1"),
        t.input.addEventListener("focusin", function (e) {
          t.label.focus();
        }),
        t.label.addEventListener("keydown", function (e) {
          ((e.keyCode && 13 == e.keyCode) || (e.key && "enter" == e.key.toLowerCase())) && t.input.click();
        }),
        t.input.addEventListener("change", function (e) {
          !(function (e) {
            var t = "";
            t = e.input.files && e.input.files.length < 1 ? e.initialLabel : e.multipleUpload && e.input.files && 1 < e.input.files.length ? e.input.files.length + " files" : e.input.value.split("\\").pop();
            e.labelText.textContent = t;
          })(t);
        });
    }
    var t = document.getElementsByClassName("file-upload");
    if (0 < t.length) for (var n = 0; n < t.length; n++) new e(t[n]);
  })(),
  (function () {
    function e(e) {
      (this.element = e),
        (this.wrapper = this.element.getElementsByClassName("js-filter-nav__wrapper")[0]),
        (this.nav = this.element.getElementsByClassName("js-filter-nav__nav")[0]),
        (this.list = this.nav.getElementsByClassName("js-filter-nav__list")[0]),
        (this.control = this.element.getElementsByClassName("js-filter-nav__control")[0]),
        (this.modalClose = this.element.getElementsByClassName("js-filter-nav__close-btn")[0]),
        (this.placeholder = this.element.getElementsByClassName("js-filter-nav__placeholder")[0]),
        (this.marker = this.element.getElementsByClassName("js-filter-nav__marker")),
        (this.layout = "expanded"),
        (function (n) {
          t(n), "expanded" == n.layout && a(n);
          n.element.addEventListener("update-layout", function (e) {
            t(n);
          }),
            n.wrapper.addEventListener("click", function (e) {
              var t = e.target.closest(".js-filter-nav__btn");
              t
                ? (function (e, t) {
                    if ("true" == t.getAttribute("aria-current")) return s(e, !1);
                    var n = e.wrapper.querySelector("[aria-current]");
                    n && n.removeAttribute("aria-current");
                    t.setAttribute("aria-current", "true"), (e.placeholder.textContent = t.textContent), s(e, !1), "expanded" == e.layout && a(e);
                  })(n, t)
                : (Util.hasClass(e.target, "js-filter-nav__wrapper") || e.target.closest(".js-filter-nav__close-btn")) && s(n, !1);
            }),
            n.control.addEventListener("click", function (e) {
              s(n, !0);
            }),
            window.addEventListener("keyup", function (e) {
              ((e.keyCode && 27 == e.keyCode) || (e.key && "escape" == e.key.toLowerCase())) && "true" == n.control.getAttribute("aria-expanded") && i(n.control) && s(n, !1), ((e.keyCode && 9 == e.keyCode) || (e.key && "tab" == e.key.toLowerCase())) && "true" == n.control.getAttribute("aria-expanded") && i(n.control) && !document.activeElement.closest(".js-filter-nav__wrapper") && s(n, !1);
            });
        })(this);
    }
    function s(e, t) {
      e.control.setAttribute("aria-expanded", t), Util.toggleClass(e.wrapper, "filter-nav__wrapper--is-visible", t), t ? e.nav.querySelectorAll("[href], button:not([disabled])")[0].focus() : i(e.control) && e.control.focus();
    }
    function i(e) {
      return e.offsetWidth || e.offsetHeight || e.getClientRects().length;
    }
    function t(e) {
      var t;
      "expanded" == e.layout && (t = e).nav.scrollWidth > t.nav.offsetWidth
        ? ((e.layout = "collapsed"), Util.removeClass(e.element, "filter-nav--expanded"), Util.addClass(e.element, "filter-nav--collapsed"), Util.removeClass(e.modalClose, "is-hidden"), Util.removeClass(e.control, "is-hidden"))
        : "collapsed" == e.layout &&
          (function (e) {
            (e.element.style.visibility = "hidden"), Util.addClass(e.element, "filter-nav--expanded"), Util.removeClass(e.element, "filter-nav--collapsed");
            var t = e.nav.scrollWidth <= e.nav.offsetWidth;
            return Util.removeClass(e.element, "filter-nav--expanded"), Util.addClass(e.element, "filter-nav--collapsed"), (e.element.style.visibility = "visible"), t;
          })(e) &&
          ((e.layout = "expanded"), Util.addClass(e.element, "filter-nav--expanded"), Util.removeClass(e.element, "filter-nav--collapsed"), Util.addClass(e.modalClose, "is-hidden"), Util.addClass(e.control, "is-hidden")),
        "expanded" == e.layout && a(e);
    }
    function a(e) {
      var t = e.wrapper.querySelector('.js-filter-nav__btn[aria-current="true"]');
      0 != e.marker.length && t && ((e.marker[0].style.width = t.offsetWidth + "px"), (e.marker[0].style.transform = "translateX(" + (t.getBoundingClientRect().left - e.list.getBoundingClientRect().left) + "px)"));
    }
    var n = document.getElementsByClassName("js-filter-nav");
    if (0 < n.length) {
      for (var l = [], o = 0; o < n.length; o++) l.push(new e(n[o]));
      var r = !1,
        d = new CustomEvent("update-layout");
      function c() {
        for (var e = 0; e < l.length; e++) l[e].element.dispatchEvent(d);
      }
      window.addEventListener("resize", function () {
        clearTimeout(r), (r = setTimeout(c, 100));
      }),
        (document.fonts.onloadingdone = function (e) {
          c();
        });
    }
  })(),
  (function () {
    var t = function (e) {
      (this.options = Util.extend(t.defaults, e)),
        (this.element = this.options.element),
        (this.elementId = this.element.getAttribute("id")),
        (this.items = this.element.querySelectorAll(".js-filter__item")),
        (this.controllers = document.querySelectorAll('[aria-controls="' + this.elementId + '"]')),
        (this.fallbackMessage = document.querySelector('[data-fallback-gallery-id="' + this.elementId + '"]')),
        (this.filterString = []),
        (this.sortingString = ""),
        (this.filterList = []),
        (this.sortingList = []),
        (this.itemsGrid = []),
        (this.itemsInitPosition = []),
        (this.itemsIterPosition = []),
        (this.itemsFinalPosition = []),
        (this.animateOff = "off" == this.element.getAttribute("data-filter-animation")),
        (this.resizingId = !1),
        (this.accelerateStyle = "will-change: transform, opacity; transform: translateZ(0); backface-visibility: hidden;"),
        (this.animating = !1),
        (this.reanimate = !1),
        (function (i) {
          s(i, !0, !0),
            l(i),
            (function (e) {
              for (var t = 0; t < e.items.length; t++) e.items[t].setAttribute("data-init-sort-order", t);
            })(i);
          for (var e = 0; e < i.controllers.length; e++)
            (i.filterString[e] = ""),
              (function (s) {
                i.controllers[s].addEventListener("change", function (e) {
                  "select" == e.target.tagName.toLowerCase()
                    ? e.target.getAttribute("data-filter")
                      ? d(i, s, "select")
                      : r(i, e.target.value, e.target.options[e.target.selectedIndex])
                    : "input" != e.target.tagName.toLowerCase() || ("radio" != e.target.getAttribute("type") && "checkbox" != e.target.getAttribute("type"))
                    ? i.controllers[s].getAttribute("data-filter")
                      ? d(i, s, "custom")
                      : r(i, i.controllers[s].getAttribute("data-sort"), i.controllers[s])
                    : e.target.getAttribute("data-filter")
                    ? d(i, s, "input")
                    : r(i, e.target.getAttribute("data-sort"), e.target),
                    c(i);
                }),
                  i.controllers[s].addEventListener("click", function (e) {
                    var t = e.target.closest("[data-filter]"),
                      n = e.target.closest("[data-sort]");
                    (t || n) &&
                      ((t && ("input" == t.tagName.toLowerCase() || "select" == t.tagName.toLowerCase())) ||
                        (n && ("input" == n.tagName.toLowerCase() || "select" == n.tagName.toLowerCase())) ||
                        (n && Util.hasClass(n, "js-filter__custom-control")) ||
                        (t && Util.hasClass(t, "js-filter__custom-control")) ||
                        (e.preventDefault(),
                        (function (e, t, n, s) {
                          var i = e.controllers[t].getAttribute("data-filter-checkbox"),
                            a = e.controllers[t].getAttribute("data-selected-class");
                          {
                            var l;
                            (a = a ? "js-filter-selected " + a : "js-filter-selected"), "true" == i ? (n ? Util.toggleClass(n, a, !Util.hasClass(n, "js-filter-selected")) : Util.toggleClass(s, a, !Util.hasClass(s, "js-filter-selected"))) : ((l = e.controllers[t].querySelector(".js-filter-selected")) && Util.removeClass(l, a), n ? Util.addClass(n, a) : Util.addClass(s, a));
                          }
                        })(i, s, t, n),
                        n ? r(i, n.getAttribute("data-sort"), n) : d(i, s, "button"),
                        c(i)));
                  });
              })(e);
          window.addEventListener("resize", function () {
            clearTimeout(i.resizingId),
              (i.resizingId = setTimeout(function () {
                l(i);
              }, 300));
          }),
            n(i),
            i.element.addEventListener("update-filter-results", function (e) {
              for (var t = 0; t < i.controllers.length; t++) i.filterString[t] = "";
              (i.sortingString = ""), n(i);
            });
        })(this);
    };
    function n(e) {
      for (var t = 0; t < e.controllers.length; t++) {
        var n,
          s,
          i,
          a,
          l,
          o = e.controllers[t].getElementsByClassName("js-filter-selected");
        0 < o.length
          ? (l = o[0].getAttribute("data-sort"))
            ? r(e, o[0].getAttribute("data-sort"), o[0])
            : d(e, t, "button")
          : 0 < (n = e.controllers[t].querySelectorAll("input:checked")).length
          ? (l = n[0].getAttribute("data-sort"))
            ? r(e, l, n[0])
            : d(e, t, "input")
          : "select" != e.controllers[t].tagName.toLowerCase()
          ? ((s = e.controllers[t].querySelector('input[type="radio"]')), (i = e.controllers[t].querySelector('input[type="checkbox"]')), s || i || ((l = e.controllers[t].getAttribute("data-sort")), (a = e.controllers[t].getAttribute("data-filter")), l ? r(e, l, e.controllers[t]) : a && d(e, t, "custom")))
          : (l = e.controllers[t].getAttribute("data-sort"))
          ? r(e, e.controllers[t].value, e.controllers[t].options[e.controllers[t].selectedIndex])
          : d(e, t, "select");
      }
      c(e);
    }
    function r(e, t, n) {
      var s = n.getAttribute("data-sort-order") ? "desc" : "asc",
        i = n.getAttribute("data-sort-number") ? "number" : "string";
      e.sortingString = t + ":" + s + ":" + i;
    }
    function d(e, t, n) {
      if ("input" == n) {
        var s = e.controllers[t].querySelectorAll("input:checked");
        e.filterString[t] = "";
        for (var i = 0; i < s.length; i++) e.filterString[t] = e.filterString[t] + s[i].getAttribute("data-filter") + ":";
      } else if ("select" == n)
        e.controllers[t].multiple
          ? (e.filterString[t] = (function (e) {
              for (var t = e.options, n = "", s = 0; s < t.length; s++) t[s].selected && ("" != n && (n += ":"), (n += t[s].value));
              return n;
            })(e.controllers[t]))
          : (e.filterString[t] = e.controllers[t].value);
      else if ("button" == n) {
        var a = e.controllers[t].querySelectorAll(".js-filter-selected");
        e.filterString[t] = "";
        for (i = 0; i < a.length; i++) e.filterString[t] = e.filterString[t] + a[i].getAttribute("data-filter") + ":";
      } else "custom" == n && (e.filterString[t] = e.controllers[t].getAttribute("data-filter"));
    }
    function c(e) {
      var t, i;
      e.animating
        ? (e.reanimate = !0)
        : ((e.animating = !0),
          (e.reanimate = !1),
          l(e),
          "" == (i = (t = e).sortingString.split(":"))[0] || "*" == i[0]
            ? (function (e) {
                for (var t = 0; t < e.items.length; t++) e.sortingList[parseInt(e.items[t].getAttribute("data-init-sort-order"))] = [e.items[t], t];
              })(t)
            : t.options[i[0]]
            ? (t.sortingList = t.options[i[0]](t.sortingList))
            : t.sortingList.sort(function (e, t) {
                var n = e[0].getAttribute("data-sort-" + i[0]),
                  s = t[0].getAttribute("data-sort-" + i[0]);
                return "number" == i[2] && ((n = parseFloat(n)), (s = parseFloat(s))), "desc" == i[1] ? (n <= s ? 1 : -1) : s <= n ? 1 : -1;
              }),
          (function (e) {
            s(e, !0, !1);
            for (var t = 0; t < e.filterString.length; t++)
              "" != e.filterString[t] &&
                "*" != e.filterString[t] &&
                " " != e.filterString[t] &&
                (function (e, t) {
                  if (!t || "" == t || "*" == t) return;
                  for (var n = [], s = 0; s < t.length; s++) e.options[t[s]] && (n[t[s]] = e.options[t[s]](e.items));
                  for (var i = 0; i < e.items.length; i++) {
                    for (var a = e.items[i].getAttribute("data-filter").split(" "), l = !1, s = 0; s < t.length; s++) {
                      if (e.options[t[s]] && n[t[s]][i]) {
                        l = !0;
                        break;
                      }
                      if ("*" == t[s] || -1 < a.indexOf(t[s])) {
                        l = !0;
                        break;
                      }
                    }
                    e.filterList[i] = !!l && e.filterList[i];
                  }
                })(e, e.filterString[t].split(":"));
          })(e),
          u(e, !0),
          (m || e.animateOff
            ? a
            : function (e) {
                o(e, e.itemsInitPosition), e.element.setAttribute("style", "height: " + parseFloat(e.element.offsetHeight) + "px; width: " + parseFloat(e.element.offsetWidth) + "px;");
                for (var t = 0; t < e.items.length; t++) Util.hasClass(e.items[t], "is-hidden") && e.filterList[t] && (e.items[t].setAttribute("data-scale", "on"), e.items[t].setAttribute("style", e.accelerateStyle + "transform: scale(0.5); opacity: 0;"), Util.removeClass(e.items[t], "is-hidden"));
                o(e, e.itemsIterPosition);
                for (t = 0; t < e.items.length; t++) "on" != e.items[t].getAttribute("data-scale") && e.items[t].setAttribute("style", e.accelerateStyle + "transform: translateX(" + parseInt(e.itemsInitPosition[t][0] - e.itemsIterPosition[t][0]) + "px) translateY(" + parseInt(e.itemsInitPosition[t][1] - e.itemsIterPosition[t][1]) + "px);");
                !(function (t) {
                  for (var n = "transform " + t.options.duration + "ms cubic-bezier(0.455, 0.03, 0.515, 0.955), opacity " + t.options.duration + "ms", e = 0, s = 0; s < t.sortingList.length; s++) {
                    var i = t.items[t.sortingList[s][1]];
                    Util.hasClass(i, "is-hidden") || !t.filterList[t.sortingList[s][1]] ? ((t.itemsFinalPosition[t.sortingList[s][1]] = t.itemsIterPosition[t.sortingList[s][1]]), "on" == i.getAttribute("data-scale") && (e += 1)) : ((t.itemsFinalPosition[t.sortingList[s][1]] = [t.itemsGrid[e][0], t.itemsGrid[e][1]]), (e += 1));
                  }
                  setTimeout(function () {
                    for (var e = 0; e < t.items.length; e++)
                      t.filterList[e] && "on" == t.items[e].getAttribute("data-scale")
                        ? t.items[e].setAttribute("style", t.accelerateStyle + "transition: " + n + "; transform: translateX(" + parseInt(t.itemsFinalPosition[e][0] - t.itemsIterPosition[e][0]) + "px) translateY(" + parseInt(t.itemsFinalPosition[e][1] - t.itemsIterPosition[e][1]) + "px) scale(1); opacity: 1;")
                        : t.filterList[e]
                        ? t.items[e].setAttribute("style", t.accelerateStyle + "transition: " + n + "; transform: translateX(" + parseInt(t.itemsFinalPosition[e][0] - t.itemsIterPosition[e][0]) + "px) translateY(" + parseInt(t.itemsFinalPosition[e][1] - t.itemsIterPosition[e][1]) + "px);")
                        : t.items[e].setAttribute("style", t.accelerateStyle + "transition: " + n + "; transform: scale(0.5); opacity: 0;");
                  }, 50),
                    setTimeout(function () {
                      a(t);
                    }, t.options.duration + 100);
                })(e);
              })(e));
    }
    function a(e) {
      for (var t = 0; t < e.items.length; t++) e.items[t].removeAttribute("style"), Util.toggleClass(e.items[t], "is-hidden", !e.filterList[t]), e.items[t].removeAttribute("data-scale");
      for (t = 0; t < e.items.length; t++) e.element.appendChild(e.items[e.sortingList[t][1]]);
      (e.items = []), (e.items = e.element.querySelectorAll(".js-filter__item")), s(e, !1, !0), e.element.removeAttribute("style"), (e.animating = !1), e.reanimate && c(e), u(e, !1), e.element.dispatchEvent(new CustomEvent("filter-selection-updated"));
    }
    function s(e, t, n) {
      for (var s = 0; s < e.items.length; s++) t && (e.filterList[s] = !0), n && (e.sortingList[s] = [e.items[s], s]);
    }
    function l(e) {
      for (var t, n, s, i, a, l, o = parseFloat(window.getComputedStyle(e.element).getPropertyValue("width")), r = 0; r < e.items.length; r++)
        if (!Util.hasClass(e.items[r], "is-hidden")) {
          (t = window.getComputedStyle(e.items[r])), (n = parseFloat(t.getPropertyValue("width"))), (s = parseFloat(t.getPropertyValue("height"))), (i = parseFloat(t.getPropertyValue("margin-left")) + parseFloat(t.getPropertyValue("margin-right"))), (a = parseFloat(t.getPropertyValue("margin-bottom")) + parseFloat(t.getPropertyValue("margin-top"))), (l = parseInt((o + i) / (n + i))), (e.itemsGrid[0] = [e.items[r].offsetLeft, e.items[r].offsetTop]);
          break;
        }
      for (r = 1; r < e.items.length; r++) {
        var d = r < l ? r : r % l,
          c = r < l ? 0 : Math.floor(r / l);
        e.itemsGrid[r] = [e.itemsGrid[0][0] + d * (n + i), e.itemsGrid[0][1] + c * (s + a)];
      }
    }
    function o(e, t) {
      for (var n = 0; n < e.items.length; n++) t[n] = [e.items[n].offsetLeft, e.items[n].offsetTop];
    }
    function u(e, t) {
      if (e.fallbackMessage) {
        for (var n = !0, s = 0; s < e.filterList.length; s++)
          if (e.filterList[s]) {
            n = !1;
            break;
          }
        t ? n || Util.addClass(e.fallbackMessage, "is-hidden") : Util.toggleClass(e.fallbackMessage, "is-hidden", !n);
      }
    }
    (t.defaults = { element: !1, duration: 400 }), (window.Filter = t);
    var e = document.getElementsByClassName("js-filter"),
      m = Util.osHasReducedMotion();
    if (0 < e.length)
      for (var i = 0; i < e.length; i++) {
        var h = (h = e[i].getAttribute("data-filter-duration")) || t.defaults.duration;
        new t({ element: e[i], duration: h });
      }
  })(),
  (function () {
    function e(e) {
      (this.element = e), (this.showClass = "flash-message--is-visible"), (this.messageDuration = parseInt(this.element.getAttribute("data-duration")) || 3e3), (this.triggers = document.querySelectorAll('[aria-controls="' + this.element.getAttribute("id") + '"]')), (this.temeoutId = null), (this.isVisible = !1), this.initFlashMessage();
    }
    (e.prototype.initFlashMessage = function () {
      var t = this;
      if (t.triggers)
        for (var e = 0; e < t.triggers.length; e++)
          t.triggers[e].addEventListener("click", function (e) {
            e.preventDefault(), t.showFlashMessage();
          });
      t.element.addEventListener("showFlashMessage", function () {
        t.showFlashMessage();
      });
    }),
      (e.prototype.showFlashMessage = function () {
        var e = this;
        Util.addClass(e.element, e.showClass),
          (e.isVisible = !0),
          e.hideOtherFlashMessages(),
          0 < e.messageDuration &&
            (e.temeoutId = setTimeout(function () {
              e.hideFlashMessage();
            }, e.messageDuration));
      }),
      (e.prototype.hideFlashMessage = function () {
        Util.removeClass(this.element, this.showClass), (this.isVisible = !1), clearTimeout(this.temeoutId), (this.temeoutId = null);
      }),
      (e.prototype.hideOtherFlashMessages = function () {
        var e = new CustomEvent("flashMessageShown", { detail: this.element });
        window.dispatchEvent(e);
      }),
      (e.prototype.checkFlashMessage = function (e) {
        this.isVisible && this.element != e && this.hideFlashMessage();
      });
    var t = document.getElementsByClassName("js-flash-message");
    if (0 < t.length) {
      for (var n = [], s = 0; s < t.length; s++) n.push(new e(t[s]));
      window.addEventListener("flashMessageShown", function (t) {
        n.forEach(function (e) {
          e.checkFlashMessage(t.detail);
        });
      });
    }
  })(),
  (function () {
    var e = document.getElementsByClassName("floating-label");
    if (0 < e.length) {
      for (var t = ("placeholder" in document.createElement("input")), n = 0; n < e.length; n++)
        !(function (s) {
          if (!t) return Util.addClass(s.getElementsByClassName("form-label")[0], "form-label--floating");
          var i = s.getElementsByClassName("form-control")[0];
          i.addEventListener("input", function (e) {
            var t, n;
            (t = s), (n = i), Util.toggleClass(t.getElementsByClassName("form-label")[0], "form-label--floating", 0 < n.value.length);
          });
        })(e[n]);
    }
  })(),
  (function () {
    function e(e) {
      var t;
      (this.element = e),
        (this.asset = this.element.getElementsByClassName("js-img-mag__asset")[0]),
        (this.ready = !1),
        (this.scale = 1),
        (this.intervalId = !1),
        (this.moving = !1),
        (this.moveEvent = !1),
        (t = this).asset.addEventListener("load", function () {
          n(t);
        }),
        t.asset.complete && n(t);
    }
    function n(e) {
      var t, n;
      e.ready || ((e.ready = !0), (n = (t = e).element.getAttribute("data-scale")) ? (t.scale = n) : ((t.scale = t.asset.naturalWidth / t.element.offsetWidth), (t.scale = Math.floor(100 * t.scale) / 100), 1.2 < t.scale && (t.scale = t.scale - 0.2)), e.element.addEventListener("mouseenter", i.bind(e)));
    }
    function i(e) {
      switch (e.type) {
        case "mouseenter":
          (s = e),
            ((n = this).moving = !0),
            (function (e) {
              (e.moveEvent = i.bind(e)), e.element.addEventListener("mousemove", e.moveEvent), e.element.addEventListener("mouseleave", e.moveEvent);
            })(n),
            a(n, s);
          break;
        case "mousemove":
          !(function (e, t) {
            if (!e.moving || e.intervalId) return;
            window.requestAnimationFrame
              ? (e.intervalId = window.requestAnimationFrame(function () {
                  a(e, t);
                }))
              : (e.intervalId = setTimeout(function () {
                  a(e, t);
                }, 250));
          })(this, e);
          break;
        case "mouseleave":
          ((t = this).moving = !1),
            (function (e) {
              e.intervalId && (window.requestAnimationFrame ? window.cancelAnimationFrame(e.intervalId) : clearInterval(e.intervalId), (e.intervalId = !1)), e.moveEvent && (e.element.removeEventListener("mousemove", e.moveEvent), e.element.removeEventListener("mouseleave", e.moveEvent), (e.moveEvent = !1));
            })(t),
            t.asset.removeAttribute("style");
      }
      var t, n, s;
    }
    function a(e, t) {
      var n = e.element.getBoundingClientRect(),
        s = n.left - t.clientX,
        i = n.top - t.clientY;
      0 < s && (s = 0), s < -1 * n.width && (s = -1 * n.width), 0 < i && (i = 0), i < -1 * n.height && (s = -1 * n.height);
      var a = "translateX(" + s * (e.scale - 1) + "px) translateY(" + i * (e.scale - 1) + "px) scale(" + e.scale + ")";
      e.asset.setAttribute("style", "transform: " + a + ";"), (e.intervalId = !1);
    }
    var t = document.getElementsByClassName("js-img-mag");
    if (0 < t.length) for (var s = 0; s < t.length; s++) new e(t[s]);
  })(),
  (function () {
    function e(e, t) {
      var n;
      (this.element = e),
        (this.lightBoxId = "img-zoom-lightbox--" + t),
        (this.imgPreview = this.element.getElementsByClassName("js-image-zoom__preview")[0]),
        (function (e) {
          var t = e.element.getAttribute("data-img");
          t = t || e.imgPreview.getAttribute("src");
          var n = document.createElement("div");
          Util.setAttributes(n, { class: "image-zoom__lightbox js-image-zoom__lightbox", id: e.lightBoxId, "aria-hidden": "true" }), (n.innerHTML = '<img src="' + t + '" class="js-image-zoom__fw"></img>'), document.body.appendChild(n);
          e.element.insertAdjacentHTML("afterbegin", '<input aria-hidden="true" type="checkbox" class="image-zoom__input js-image-zoom__input"></input>');
        })(this),
        (this.lightbox = document.getElementById(this.lightBoxId)),
        (this.imgEnlg = this.lightbox.getElementsByClassName("js-image-zoom__fw")[0]),
        (this.input = this.element.getElementsByClassName("js-image-zoom__input")[0]),
        (this.animate = "off" != this.element.getAttribute("data-morph")),
        (n = this).imgPreview.addEventListener("click", function (e) {
          s(n, !0), (n.input.checked = !0);
        }),
        n.lightbox.addEventListener("click", function (e) {
          s(n, !1), (n.input.checked = !1);
        }),
        n.input.addEventListener("change", function (e) {
          s(n, n.input.checked);
        }),
        n.input.addEventListener("keydown", function (e) {
          ((e.keyCode && 13 == e.keyCode) || (e.key && "enter" == e.key.toLowerCase())) && ((n.input.checked = !n.input.checked), s(n, n.input.checked));
        });
    }
    function s(e, t) {
      n && e.animate
        ? window.requestAnimationFrame(function () {
            !(function (n, s) {
              var e = n.imgPreview.getBoundingClientRect(),
                t = n.lightbox.getBoundingClientRect().width,
                i = s ? [e.top, e.left, e.width] : [0, 0, t],
                a = s ? [-e.top, -e.left, parseFloat(t / e.width)] : [e.top + n.lightbox.scrollTop, e.left, parseFloat(e.width / t)];
              s && n.imgEnlg.setAttribute("style", "top: " + i[0] + "px; left:" + i[1] + "px; width:" + i[2] + "px;");
              Util.removeClass(n.lightbox, "image-zoom__lightbox--no-transition"),
                Util.addClass(n.lightbox, "image-zoom__lightbox--is-visible"),
                n.imgEnlg.addEventListener("transitionend", function e(t) {
                  s || Util.removeClass(n.lightbox, "image-zoom__lightbox--is-visible"), Util.addClass(n.lightbox, "image-zoom__lightbox--no-transition"), n.imgEnlg.removeAttribute("style"), n.imgEnlg.removeEventListener("transitionend", e);
                }),
                (n.imgEnlg.style.transform = "translateX(" + a[1] + "px) translateY(" + a[0] + "px) scale(" + a[2] + ")"),
                Util.toggleClass(n.lightbox, "image-zoom__lightbox--animate-bg", s);
            })(e, t);
          })
        : Util.toggleClass(e.lightbox, "image-zoom__lightbox--is-visible", t);
    }
    var t = document.getElementsByClassName("js-image-zoom"),
      n = window.requestAnimationFrame && !Util.osHasReducedMotion();
    if (0 < t.length) {
      for (var i = [], a = 0; a < t.length; a++) i.push(new e(t[a], a));
      window.addEventListener("keydown", function (e) {
        if ((e.keyCode && 27 == e.keyCode) || (e.key && "esc" == e.key.toLowerCase())) for (var t = 0; t < i.length; t++) (i[t].input.checked = !1), Util.hasClass(i[t].lightbox, "image-zoom__lightbox--is-visible") && s(i[t], !1);
      });
    }
  })(),
  (function () {
    function e(e) {
      var t;
      (this.element = e),
        (this.media = this.element.getElementsByClassName("js-immerse-section-tr__media")),
        (this.scrollContent = this.element.getElementsByClassName("js-immerse-section-tr__content")),
        this.media.length < 1 ||
          ((this.figure = this.media[0].getElementsByClassName("js-immerse-section-tr__figure")),
          this.figure.length < 1 ||
            ((this.visibleFigure = !1),
            (this.mediaScale = 1),
            (this.mediaInitHeight = 0),
            (this.elementPadding = 0),
            (this.scrollingFn = !1),
            (this.scrolling = !1),
            (this.active = !1),
            (this.scrollDelta = 0),
            (function (e) {
              0 == parseInt(window.getComputedStyle(e.element).getPropertyValue("padding-top")) && (e.element.style.paddingTop = "1px");
            })((t = this)),
            n(t),
            t.element.addEventListener("update-immerse-section", function (e) {
              n(t);
            }),
            new IntersectionObserver(
              function (e) {
                if (e[0].isIntersecting) {
                  if (this.scrollingFn) return;
                  !(function (e) {
                    (e.scrollingFn = function () {
                      if (this.scrolling) return;
                      (this.scrolling = !0), window.requestAnimationFrame(l.bind(this));
                    }.bind(e)),
                      window.addEventListener("scroll", e.scrollingFn);
                  })(this);
                } else {
                  if (!this.scrollingFn) return;
                  window.removeEventListener("scroll", this.scrollingFn), (this.scrollingFn = !1);
                }
              }.bind(t)
            ).observe(t.media[0])));
    }
    function n(e) {
      var t, n, s, i;
      !(function (e) {
        e.visibleFigure = !1;
        for (var t = 0; t < e.figure.length; t++)
          if ("none" != window.getComputedStyle(e.figure[t]).getPropertyValue("display")) {
            e.visibleFigure = e.figure[t];
            break;
          }
      })(e),
        (function (e) {
          (e.active = !0), e.visibleFigure.offsetHeight >= window.innerHeight && (e.active = !1);
          600 <= window.innerHeight - e.visibleFigure.offsetHeight && (e.active = !1);
        })(e),
        e.active
          ? (Util.removeClass(e.element, "immerse-section-tr--disabled"),
            (function (e) {
              (e.mediaInitHeight = e.visibleFigure.offsetHeight), (e.scrollDelta = window.innerHeight - e.visibleFigure.offsetHeight > window.innerWidth - e.visibleFigure.offsetWidth ? (window.innerHeight - e.visibleFigure.offsetHeight) / 2 : (window.innerWidth - e.visibleFigure.offsetWidth) / 2), e.scrollDelta > window.innerHeight && (e.scrollDelta = window.innerHeight);
              e.scrollDelta < 200 && (e.scrollDelta = 200);
              (e.media[0].style.height = window.innerHeight + "px"), (e.media[0].style.paddingTop = (window.innerHeight - e.visibleFigure.offsetHeight) / 2 + "px"), (e.media[0].style.marginTop = (e.visibleFigure.offsetHeight - window.innerHeight) / 2 + "px");
            })(e),
            (n = e),
            (s = a(window.innerWidth / n.visibleFigure.offsetWidth)),
            (i = a(window.innerHeight / n.visibleFigure.offsetHeight)),
            (n.mediaScale = Math.max(s, i)),
            (n.elementPadding = parseInt(window.getComputedStyle(n.element).getPropertyValue("padding-top"))),
            0 < (t = e).scrollContent.length && (t.scrollContent[0].style.marginTop = t.scrollDelta + "px"),
            l.bind(e)())
          : (Util.addClass(e.element, "immerse-section-tr--disabled"), (e.media[0].style = ""), (e.scrollContent[0].style = ""), o(e, 1), r(e, 0)),
        e.element.dispatchEvent(new CustomEvent("immersive-section-updated", { detail: { active: e.active, asset: e.visibleFigure } }));
    }
    function a(e) {
      return (Math.ceil(100 * e) / 100).toFixed(2);
    }
    function l() {
      var e, t;
      this.active && ((e = (window.innerHeight - this.mediaInitHeight) / 2), (t = this.element.getBoundingClientRect().top + this.elementPadding) < e && t > e - this.scrollDelta ? (o(this, 1 + ((t - e) * (1 - this.mediaScale)) / this.scrollDelta), r(this, 0)) : e <= t ? (o(this, 1), r(this, 0)) : (o(this, this.mediaScale), r(this, (1.8 * (e - this.scrollDelta - t)) / window.innerHeight)), (this.scrolling = !1));
    }
    function o(e, t) {
      (e.visibleFigure.style.transform = "scale(" + t + ")"), (e.visibleFigure.style.msTransform = "scale(" + t + ")");
    }
    function r(e, t) {
      e.element.style.setProperty("--immerse-section-tr-opacity", t);
    }
    var t = document.getElementsByClassName("js-immerse-section-tr"),
      s = Util.osHasReducedMotion(),
      i = "IntersectionObserver" in window && "IntersectionObserverEntry" in window && "intersectionRatio" in window.IntersectionObserverEntry.prototype;
    if (!(t.length < 1))
      if (!s && i) {
        for (var d, c, u = [], m = 0; m < t.length; m++) u.push(new e(t[m]));
        function h() {
          for (var e = 0; e < u.length; e++) u[e].element.dispatchEvent(c);
        }
        0 < u.length &&
          ((d = !1),
          (c = new CustomEvent("update-immerse-section")),
          window.addEventListener("resize", function () {
            clearTimeout(d), (d = setTimeout(h, 500));
          }));
      } else for (m = 0; m < t.length; m++) Util.addClass(t[m], "immerse-section-tr--disabled");
  })(),
  (function () {
    var t = function (e) {
      (this.options = Util.extend(t.defaults, e)),
        (this.element = this.options.element),
        (this.loader = document.getElementsByClassName("js-infinite-scroll__loader")),
        (this.loadBtn = document.getElementsByClassName("js-infinite-scroll__btn")),
        (this.loading = !1),
        (this.currentPageIndex = this.element.getAttribute("data-current-page") ? parseInt(this.element.getAttribute("data-current-page")) : 0),
        (this.index = this.currentPageIndex),
        (function (t) {
          (function (e) {
            if (!e.options.path) return;
            var t = e.options.path.split(",");
            if (1 < t.length) {
              e.options.path = [];
              for (var n = 0; n < t.length; n++) e.options.path.push(t[n].trim());
            }
          })(t),
            (function (e) {
              e.thresholdPixel = -1 < e.options.threshold.indexOf("px") ? parseInt(e.options.threshold.replace("px", "")) : parseInt((window.innerHeight * parseInt(e.options.threshold.replace("%", ""))) / 100);
            })(t),
            t.options.container && (t.container = t.element.querySelector(t.options.container));
          (!t.options.loadBtn || t.options.loadBtnDelay) && 0 < t.loadBtn.length && Util.addClass(t.loadBtn[0], "sr-only");
          (t.options.loadBtn && !t.options.loadBtnDelay) ||
            (g
              ? (function (e) {
                  var t = document.createElement("div");
                  Util.setAttributes(t, { "aria-hidden": "true", class: "js-infinite-scroll__observed", style: "width: 100%; height: 1px; margin-top: -1px; visibility: hidden;" }), e.element.appendChild(t), (e.observed = e.element.getElementsByClassName("js-infinite-scroll__observed")[0]);
                  var n = { rootMargin: "0px 0px " + e.options.threshold + " 0px" };
                  (e.observer = new IntersectionObserver(
                    function (e) {
                      if (this.loading) return;
                      0 < e[0].intersectionRatio && i(this);
                    }.bind(e),
                    n
                  )),
                    e.observer.observe(e.observed);
                })(t)
              : ((t.scrollEvent = n.bind(t)), window.addEventListener("scroll", t.scrollEvent)));
          (function (e) {
            if (0 == e.loadBtn.length) return;
            (e.clickEvent = n.bind(e)), e.loadBtn[0].addEventListener("click", e.clickEvent), e.options.loadBtn && !e.options.loadBtnDelay && (Util.removeClass(e.loadBtn[0], "sr-only"), 0 < e.loader.length && Util.addClass(e.loader[0], "is-hidden"));
            e.loadBtn[0].addEventListener("focusin", function () {
              Util.hasClass(e.loadBtn[0], "sr-only") && (Util.addClass(e.loadBtn[0], "js-infinite-scroll__btn-focus"), Util.removeClass(e.loadBtn[0], "sr-only"));
            }),
              e.loadBtn[0].addEventListener("focusout", function () {
                Util.hasClass(e.loadBtn[0], "js-infinite-scroll__btn-focus") && (Util.removeClass(e.loadBtn[0], "js-infinite-scroll__btn-focus"), Util.addClass(e.loadBtn[0], "sr-only"));
              });
          })(t),
            t.options.path ||
              t.element.addEventListener("loaded-new", function (e) {
                r(t, e.detail.path, e.detail.checkNext);
              });
        })(this);
    };
    function n(e) {
      switch (e.type) {
        case "click":
          (n = this), e.preventDefault(), Util.addClass(n.loadBtn[0], "sr-only"), i(n);
          break;
        case "scroll":
          (t = this), window.requestAnimationFrame ? window.requestAnimationFrame(s.bind(t)) : setTimeout(s.bind(t));
      }
      var t, n;
    }
    function s() {
      var e;
      this.loading || ((e = this).element.getBoundingClientRect().bottom - window.innerHeight <= e.thresholdPixel && i(this));
    }
    function i(e) {
      (e.loading = !0), 0 < e.loader.length && Util.removeClass(e.loader[0], "is-hidden");
      var t,
        n,
        s,
        i,
        a,
        l,
        o = !1;
      0 < e.loadBtn.length && (o = Util.hasClass(e.loadBtn[0], "js-infinite-scroll__btn-focus")),
        e.options.path
          ? ((a = o),
            (function (e, t) {
              var n = new XMLHttpRequest();
              (n.onreadystatechange = function () {
                4 == this.readyState && 200 == this.status && t(this.responseText);
              }),
                n.open("GET", e, !0),
                n.send();
            })(
              (l = (function (e) {
                return Array.isArray(e.options.path) ? e.options.path[e.index] : e.options.path.replace("{n}", e.index + 1);
              })((i = e))),
              function (e) {
                var t = (function (e, t, n) {
                  var s = !1;
                  {
                    var i, a;
                    e.options.container && (((i = document.createElement("div")).innerHTML = t), (a = i.querySelector(e.options.container)) && ((t = a.innerHTML), (s = a.getAttribute("data-path"))));
                  }
                  var l = !1;
                  n &&
                    (l = (function (e) {
                      return e.container ? e.container.lastElementChild : 0 < e.loader.length ? e.loader[0].previousElementSibling : e.element.lastElementChild;
                    })(e));
                  e.container ? e.container.insertAdjacentHTML("beforeend", t) : 0 < e.loader.length ? e.loader[0].insertAdjacentHTML("beforebegin", t) : e.element.insertAdjacentHTML("beforeend", t);
                  n && l && Util.moveFocus(l);
                  return s;
                })(i, e, a);
                r(
                  i,
                  l,
                  (function (e, t) {
                    if (Array.isArray(e.options.path)) return e.options.path.length > e.index + 1;
                    return t;
                  })(i, t)
                ),
                  i.element.dispatchEvent(new CustomEvent("content-loaded", { detail: l }));
              }
            ))
          : ((n = o), (s = new CustomEvent("load-new", { detail: { index: (t = e).index + 1, moveFocus: n } })), t.element.dispatchEvent(s));
    }
    function r(e, t, n) {
      var s;
      0 < e.loader.length && Util.addClass(e.loader[0], "is-hidden"),
        e.options.updateHistory && t && (s = location.pathname.split("/"))[s.length - 1] != t && history.pushState && window.history.replaceState({ path: t }, "", t),
        n || (a(e), e.clickEvent && (e.loadBtn[0].removeEventListener("click", e.clickEvent), Util.addClass(e.loadBtn[0], "is-hidden"), Util.removeClass(e.loadBtn[0], "sr-only"))),
        n && e.options.loadBtn && (e.options.loadBtnDelay ? e.index - e.currentPageIndex + 1 >= e.options.loadBtnDelay && 0 < e.loadBtn.length && (a(e), Util.removeClass(e.loadBtn[0], "sr-only")) : Util.removeClass(e.loadBtn[0], "sr-only")),
        n && 0 < e.loadBtn.length && Util.hasClass(e.loadBtn[0], "js-infinite-scroll__btn-focus") && Util.removeClass(e.loadBtn[0], "sr-only"),
        (e.index = e.index + 1),
        (e.loading = !1);
    }
    function a(e) {
      e.scrollEvent && window.removeEventListener("scroll", e.scrollEvent), e.observer && e.observer.unobserve(e.observed);
    }
    (t.defaults = { element: "", path: !1, container: !1, threshold: "200px", updateHistory: !1, loadBtn: !1, loadBtnDelay: !1 }), (window.InfiniteScroll = t);
    var e,
      l,
      o,
      d,
      c,
      u,
      m,
      h = document.getElementsByClassName("js-infinite-scroll"),
      g = "IntersectionObserver" in window && "IntersectionObserverEntry" in window && "intersectionRatio" in window.IntersectionObserverEntry.prototype;
    if (0 < h.length)
      for (var p = 0; p < h.length; p++)
        (m = u = c = d = o = l = void 0),
          (l = !!h[(e = p)].getAttribute("data-path") && h[e].getAttribute("data-path")),
          (o = !!h[e].getAttribute("data-container") && h[e].getAttribute("data-container")),
          (d = !(!h[e].getAttribute("data-history") || "on" != h[e].getAttribute("data-history"))),
          (c = !(!h[e].getAttribute("data-load-btn") || "on" != h[e].getAttribute("data-load-btn"))),
          (u = !!h[e].getAttribute("data-load-btn-delay") && h[e].getAttribute("data-load-btn-delay")),
          (m = h[e].getAttribute("data-threshold") ? h[e].getAttribute("data-threshold") : "200px"),
          new t({ element: h[e], path: l, container: o, updateHistory: d, loadBtn: c, loadBtnDelay: u, threshold: m });
  })(),
  (function () {
    function e(e) {
      var t, n, s;
      (this.element = e),
        (this.select = this.element.getElementsByTagName("select")[0]),
        (this.options = this.select.getElementsByTagName("option")),
        (this.selectedOption = (function (e) {
          var t = "";
          t = "selectedIndex" in e.select ? e.options[e.select.selectedIndex].text : e.select.querySelector("option[selected]").text;
          return t;
        })(this)),
        (this.pickerId = this.select.getAttribute("id")),
        (this.trigger = !1),
        (this.dropdown = !1),
        (this.firstLanguage = !1),
        (this.arrowSvgPath = '<svg viewBox="0 0 16 16"><polygon points="3,5 8,11 13,5 "></polygon></svg>'),
        (this.globeSvgPath = '<svg viewBox="0 0 16 16"><path d="M8,0C3.6,0,0,3.6,0,8s3.6,8,8,8s8-3.6,8-8S12.4,0,8,0z M13.9,7H12c-0.1-1.5-0.4-2.9-0.8-4.1 C12.6,3.8,13.6,5.3,13.9,7z M8,14c-0.6,0-1.8-1.9-2-5H10C9.8,12.1,8.6,14,8,14z M6,7c0.2-3.1,1.3-5,2-5s1.8,1.9,2,5H6z M4.9,2.9 C4.4,4.1,4.1,5.5,4,7H2.1C2.4,5.3,3.4,3.8,4.9,2.9z M2.1,9H4c0.1,1.5,0.4,2.9,0.8,4.1C3.4,12.2,2.4,10.7,2.1,9z M11.1,13.1 c0.5-1.2,0.7-2.6,0.8-4.1h1.9C13.6,10.7,12.6,12.2,11.1,13.1z"></path></svg>'),
        (t = this).element.insertAdjacentHTML(
          "beforeend",
          (function (e) {
            var t = '<button class="language-picker__button' + (e.element.getAttribute("data-trigger-class") ? " " + e.element.getAttribute("data-trigger-class") : "") + '" aria-label="' + e.select.value + " " + e.element.getElementsByTagName("label")[0].textContent + '" aria-expanded="false" aria-controls="' + e.pickerId + '-dropdown">';
            return (t = (t = t + '<span aria-hidden="true" class="language-picker__label language-picker__flag language-picker__flag--' + e.select.value + '">' + e.globeSvgPath + "<em>" + e.selectedOption + "</em>") + e.arrowSvgPath + "</span>") + "</button>";
          })(t) +
            (function (e) {
              var t = '<div class="language-picker__dropdown" aria-describedby="' + e.pickerId + '-description" id="' + e.pickerId + '-dropdown">';
              t = (t = t + '<p class="sr-only" id="' + e.pickerId + '-description">' + e.element.getElementsByTagName("label")[0].textContent + "</p>") + '<ul class="language-picker__list" role="listbox">';
              for (var n = 0; n < e.options.length; n++) {
                var s = e.options[n].selected ? ' aria-selected="true"' : "",
                  i = e.options[n].getAttribute("lang");
                t = t + '<li><a lang="' + i + '" hreflang="' + i + '" href="' + (e.options[n], "#") + '"' + s + ' role="option" data-value="' + e.options[n].value + '" class="language-picker__item language-picker__flag language-picker__flag--' + e.options[n].value + '"><span>' + e.options[n].text + "</span></a></li>";
              }
              return t;
            })(t)
        ),
        (t.dropdown = t.element.getElementsByClassName("language-picker__dropdown")[0]),
        (t.languages = t.dropdown.getElementsByClassName("language-picker__item")),
        (t.firstLanguage = t.languages[0]),
        (t.trigger = t.element.getElementsByClassName("language-picker__button")[0]),
        (s = (n = this).trigger.getElementsByTagName("svg")),
        Util.addClass(s[0], "icon"),
        Util.addClass(s[1], "icon"),
        (function (n) {
          n.element.getElementsByClassName("language-picker__list")[0].addEventListener("click", function (e) {
            var t = e.target.closest(".language-picker__item");
            t &&
              (t.hasAttribute("aria-selected") && "true" == t.getAttribute("aria-selected")
                ? e.preventDefault()
                : (e.preventDefault(),
                  n.element.getElementsByClassName("language-picker__list")[0].querySelector('[aria-selected="true"]').removeAttribute("aria-selected"),
                  t.setAttribute("aria-selected", "true"),
                  n.trigger.getElementsByClassName("language-picker__label")[0].setAttribute("class", "language-picker__label language-picker__flag language-picker__flag--" + t.getAttribute("data-value")),
                  (n.trigger.getElementsByClassName("language-picker__label")[0].getElementsByTagName("em")[0].textContent = t.textContent)),
              n.trigger.setAttribute("aria-expanded", "false"));
          });
        })(n),
        n.trigger.addEventListener("click", function () {
          i(n, !1);
        }),
        n.dropdown.addEventListener("keydown", function (e) {
          (e.keyCode && 38 == e.keyCode) || (e.key && "arrowup" == e.key.toLowerCase()) ? a(n, "prev") : ((e.keyCode && 40 == e.keyCode) || (e.key && "arrowdown" == e.key.toLowerCase())) && a(n, "next");
        });
    }
    function i(t, e) {
      var n,
        s,
        i = e || ("true" == t.trigger.getAttribute("aria-expanded") ? "false" : "true");
      t.trigger.setAttribute("aria-expanded", i),
        "true" == i &&
          (t.firstLanguage.focus(),
          t.dropdown.addEventListener("transitionend", function e() {
            t.firstLanguage.focus(), t.dropdown.removeEventListener("transitionend", e);
          }),
          (s = (n = t).trigger.getBoundingClientRect()),
          Util.toggleClass(n.dropdown, "language-picker__dropdown--right", window.innerWidth < s.left + n.dropdown.offsetWidth),
          Util.toggleClass(n.dropdown, "language-picker__dropdown--up", window.innerHeight < s.bottom + n.dropdown.offsetHeight));
    }
    function a(e, t) {
      var n = Util.getIndexInArray(e.languages, document.activeElement);
      (n = "next" == t ? n + 1 : n - 1) < 0 && (n = e.languages.length - 1), n >= e.languages.length && (n = 0), Util.moveFocus(e.languages[n]);
    }
    var t = document.getElementsByClassName("js-language-picker");
    if (0 < t.length) {
      for (var n = [], s = 0; s < t.length; s++) n.push(new e(t[s]));
      window.addEventListener("keyup", function (e) {
        ((e.keyCode && 27 == e.keyCode) || (e.key && "escape" == e.key.toLowerCase())) &&
          n.forEach(function (e) {
            var t;
            "false" != (t = e).trigger.getAttribute("aria-expanded") && document.activeElement.closest(".language-picker__dropdown") == t.dropdown && t.trigger.focus(), i(e, "false");
          });
      }),
        window.addEventListener("click", function (s) {
          n.forEach(function (e) {
            var t, n;
            (t = e), (n = s.target), t.element.contains(n) || i(t, "false");
          });
        });
    }
  })(),
  (function () {
    function e(e) {
      (this.elements = e),
        (l
          ? function (e) {
              for (var t = 0; t < e.elements.length; t++) (e.elements[t].getAttribute("data-bg") || "picture" == e.elements[t].tagName.toLowerCase() ? i : n)(e.elements[t]);
            }
          : o
          ? function (e) {
              for (var t = 0; t < e.elements.length; t++) i(e.elements[t]);
            }
          : function (e) {
              (e.elements = Array.prototype.slice.call(e.elements)), (e.listening = !1), (e.scrollListener = t.bind(e)), document.addEventListener("scroll", e.scrollListener), (e.resizeListener = t.bind(e)), document.addEventListener("resize", e.resizeListener), t.bind(e)();
            })(this);
    }
    function n(e) {
      var t;
      "picture" == e.tagName.toLowerCase()
        ? (function (e) {
            for (var t = e.children, n = 0; n < t.length; n++) s(t[n]);
            e.removeAttribute("loading");
          })(e)
        : (s(e), (t = e.getAttribute("data-bg")) && (e.style.backgroundImage = t), (l && !t) || e.removeAttribute("loading"));
    }
    function s(e) {
      var t = e.getAttribute("data-src");
      t && (e.src = t);
      var n = e.getAttribute("data-srcset");
      n && (e.srcset = n);
    }
    function i(e) {
      var t;
      (e.getAttribute("data-src") || e.getAttribute("data-srcset") || e.getAttribute("data-bg") || "picture" == e.tagName.toLowerCase()) &&
        ((t = { rootMargin: e.getAttribute("data-threshold") || "200px" }),
        new IntersectionObserver(
          function (e, t) {
            e[0].isIntersecting && (n(this), t.unobserve(this));
          }.bind(e),
          t
        ).observe(e));
    }
    function t() {
      var t = this;
      t.listening ||
        ((t.listening = !0),
        setTimeout(function () {
          for (var e = 0; e < t.elements.length; e++)
            t.elements[e].getBoundingClientRect().top <= window.innerHeight &&
              0 <= t.elements[e].getBoundingClientRect().bottom &&
              "none" !== getComputedStyle(t.elements[e]).display &&
              (n(t.elements[e]),
              (t.elements = t.elements.filter(function (e) {
                return e.hasAttribute("loading");
              })),
              0 === t.elements.length && (t.scrollListener && document.removeEventListener("scroll", t.scrollListener), t.resizeListener && window.removeEventListener("resize", t.resizeListener)));
          t.listening = !1;
        }, 200));
    }
    window.LazyLoad = e;
    var a = document.querySelectorAll('[loading="lazy"]'),
      l = "loading" in HTMLImageElement.prototype,
      o = "IntersectionObserver" in window && "IntersectionObserverEntry" in window && "intersectionRatio" in window.IntersectionObserverEntry.prototype;
    0 < a.length && new e(a);
  })(),
  (function () {
    var t = function (e) {
      (this.options = Util.extend(t.defaults, e)),
        (this.element = this.options.element),
        (this.tabList = this.element.getElementsByClassName("js-loop-tabs__controls")[0]),
        (this.listItems = this.tabList.getElementsByTagName("li")),
        (this.triggers = this.tabList.getElementsByTagName("a")),
        (this.panelsList = this.element.getElementsByClassName("js-loop-tabs__panels")[0]),
        (this.panels = Util.getChildrenByClassName(this.panelsList, "js-loop-tabs__panel")),
        (this.assetsList = this.element.getElementsByClassName("js-loop-tabs__assets")[0]),
        (this.assets = this.assetsList.getElementsByTagName("li")),
        (this.videos = (function (e) {
          for (var t = [], n = 0; n < e.assets.length; n++) {
            var s = e.assets[n].getElementsByTagName("video");
            t[n] = 0 < s.length && s[0];
          }
          return t;
        })(this)),
        (this.panelShowClass = "loop-tabs__panel--selected"),
        (this.assetShowClass = "loop-tabs__asset--selected"),
        (this.assetExitClass = "loop-tabs__asset--exit"),
        (this.controlActiveClass = "loop-tabs__control--selected"),
        (this.autoplayPaused = !1),
        (this.loopTabAutoId = !1),
        (this.loopFillAutoId = !1),
        (this.loopFill = 0),
        (function (e) {
          e.tabList.setAttribute("role", "tablist");
          for (var t = 0; t < e.triggers.length; t++) {
            var n = Util.hasClass(e.triggers[t], e.controlActiveClass),
              s = e.panels[t].getAttribute("id");
            e.listItems[t].setAttribute("role", "presentation"), Util.setAttributes(e.triggers[t], { role: "tab", "aria-selected": n, "aria-controls": s, id: "tab-" + s }), Util.addClass(e.triggers[t], "js-loop-tabs__trigger"), Util.setAttributes(e.panels[t], { role: "tabpanel", "aria-labelledby": "tab-" + s }), Util.toggleClass(e.panels[t], e.panelShowClass, n), Util.toggleClass(e.assets[t], e.assetShowClass, n), d(e, t, n), n || e.triggers[t].setAttribute("tabindex", "-1");
          }
          e.options.autoplay || Util.addClass(e.element, "loop-tabs--autoplay-off"),
            (function (t) {
              t.options.autoplay &&
                (o(t),
                t.element.addEventListener("focusin", function (e) {
                  r(t), (t.autoplayPaused = !0);
                }),
                t.element.addEventListener("focusout", function (e) {
                  (t.autoplayPaused = !1), o(t);
                }));
              t.tabList.addEventListener("click", function (e) {
                e.target.closest(".js-loop-tabs__trigger") && a(t, e.target.closest(".js-loop-tabs__trigger"), e);
              }),
                t.tabList.addEventListener("keydown", function (e) {
                  e.target.closest(".js-loop-tabs__trigger") && ((e.keyCode && 39 == e.keyCode) || (e.key && "arrowright" == e.key.toLowerCase()) ? (r(t), i(t, "next", !0)) : ((e.keyCode && 37 == e.keyCode) || (e.key && "arrowleft" == e.key.toLowerCase())) && (r(t), i(t, "prev", !0)));
                });
            })(e);
        })(this);
    };
    function o(e) {
      if (e.options.autoplay && !e.autoplayPaused) {
        e.loopFill = 0;
        for (var t = e.tabList.getElementsByClassName(e.controlActiveClass)[0], n = 0; n < e.triggers.length; n++) u && e.triggers[n].style.setProperty("--loop-tabs-filling", 0);
        (e.loopTabAutoId = setTimeout(function () {
          i(e, "next", !1);
        }, e.options.autoplayInterval)),
          u &&
            (e.loopFillAutoId = setInterval(function () {
              (e.loopFill = e.loopFill + 0.005), t.style.setProperty("--loop-tabs-filling", e.loopFill);
            }, e.options.autoplayInterval / 200));
      }
    }
    function r(e) {
      var t;
      e.loopTabAutoId && (clearTimeout(e.loopTabAutoId), (e.loopTabAutoId = !1), clearInterval(e.loopFillAutoId), (e.loopFillAutoId = !1), 0 < (t = e.tabList.getElementsByClassName(e.controlActiveClass)).length && t[0].style.setProperty("--loop-tabs-filling", 1));
    }
    function i(e, t, n) {
      var s = e.tabList.getElementsByClassName(e.controlActiveClass)[0],
        i = Util.getIndexInArray(e.triggers, s);
      (i = "next" == t ? i + 1 : i - 1) < 0 && (i = e.listItems.length - 1), i >= e.listItems.length && (i = 0), a(e, e.triggers[i]), n && e.triggers[i].focus();
    }
    function a(s, e, t) {
      r(s), t && t.preventDefault();
      var n = Util.getIndexInArray(s.triggers, e);
      if (!Util.hasClass(s.triggers[n], s.controlActiveClass)) {
        for (var i = 0; i < s.triggers.length; i++) {
          var a = i == n,
            l = Util.hasClass(s.triggers[i], s.controlActiveClass);
          Util.toggleClass(s.triggers[i], s.controlActiveClass, a),
            Util.toggleClass(s.panels[i], s.panelShowClass, a),
            Util.toggleClass(s.assets[i], s.assetShowClass, a),
            Util.toggleClass(s.assets[i], s.assetExitClass, l),
            s.triggers[i].setAttribute("aria-selected", a),
            a ? s.triggers[i].setAttribute("tabindex", "0") : s.triggers[i].setAttribute("tabindex", "-1"),
            d(s, i, a),
            l &&
              (function (n) {
                s.assets[n].addEventListener("transitionend", function e(t) {
                  s.assets[n].removeEventListener("transitionend", e), Util.removeClass(s.assets[n], s.assetExitClass);
                });
              })(i);
        }
        o(s);
      }
    }
    function d(e, t, n) {
      e.videos[t] && (n ? e.videos[t].play() : (e.videos[t].pause(), (e.videos[t].currentTime = 0)));
    }
    t.defaults = { element: "", autoplay: !0, autoplayInterval: 5e3 };
    var e,
      n,
      s,
      l = document.getElementsByClassName("js-loop-tabs");
    if (0 < l.length) for (var c = Util.osHasReducedMotion(), u = ("CSS" in window) && Util.cssSupports("color", "var(--var)"), m = 0; m < l.length; m++) (s = n = void 0), (n = !((l[(e = m)].getAttribute("data-autoplay") && "off" == l[e].getAttribute("data-autoplay")) || c)), (s = l[e].getAttribute("data-autoplay-interval") ? l[e].getAttribute("data-autoplay-interval") : 5e3), new t({ element: l[e], autoplay: n, autoplayInterval: s });
  })(),
  (function () {
    var t,
      n,
      s,
      e,
      i = document.getElementsByClassName("js-header");
    function a() {
      !l(t) && Util.hasClass(i[0], "header--expanded") && o(!1);
    }
    function l(e) {
      return e.offsetWidth || e.offsetHeight || e.getClientRects().length;
    }
    function o(e) {
      Util.toggleClass(n, "header__nav--is-visible", e), Util.toggleClass(i[0], "header--expanded", e), t.setAttribute("aria-expanded", e), e ? n.querySelectorAll("[href], input:not([disabled]), button:not([disabled])")[0].focus() : s && (s.focus(), (s = !1));
    }
    0 < i.length &&
      ((t = i[0].getElementsByClassName("js-header__trigger")[0]),
      (n = i[0].getElementsByClassName("js-header__nav")[0]),
      (s = !1),
      t.addEventListener("click", function (e) {
        e.preventDefault(), o(!Util.hasClass(n, "header__nav--is-visible"));
      }),
      window.addEventListener("keyup", function (e) {
        ((e.keyCode && 27 == e.keyCode) || (e.key && "escape" == e.key.toLowerCase())) && "true" == t.getAttribute("aria-expanded") && l(t) && (s = t).click(), ((e.keyCode && 9 == e.keyCode) || (e.key && "tab" == e.key.toLowerCase())) && "true" == t.getAttribute("aria-expanded") && l(t) && !document.activeElement.closest(".js-header") && t.click();
      }),
      (e = !1),
      window.addEventListener("resize", function () {
        clearTimeout(e), (e = setTimeout(a, 500));
      }));
  })(),
  (function () {
    function e(e) {
      var t;
      (this.element = e),
        (this.list = this.element.getElementsByClassName("js-masonry__list")[0]),
        (this.items = this.element.getElementsByClassName("js-masonry__item")),
        (this.activeColumns = 0),
        (this.colStartWidth = 0),
        (this.colWidth = 0),
        (this.colGap = 0),
        (this.colHeights = []),
        (this.colItems = []),
        (this.flexSupported = ((t = this.items[0]), "auto" != window.getComputedStyle(t).getPropertyValue("flex-basis"))),
        n(this),
        s(this),
        (function (t) {
          t.flexSupported ? i(t) : Util.addClass(t.element, "masonry--loaded");
          t.element.addEventListener("masonry-resize", function () {
            n(t), s(t), t.flexSupported && a(t);
          }),
            t.element.addEventListener("masonry-reset", function (e) {
              t.flexSupported && i(t);
            });
        })(this);
    }
    function n(e) {
      var t = window.getComputedStyle(e.items[0]);
      0 == e.colStartWidth && (e.colStartWidth = parseFloat(t.getPropertyValue("width"))), (e.colGap = parseFloat(t.getPropertyValue("margin-right")));
    }
    function s(e) {
      var t = parseFloat(window.getComputedStyle(e.element).getPropertyValue("width"));
      (e.activeColumns = parseInt((t + e.colGap) / (e.colStartWidth + e.colGap))), 0 == e.activeColumns && (e.activeColumns = 1), (e.colWidth = parseFloat((t - (e.activeColumns - 1) * e.colGap) / e.activeColumns));
      for (var n = 0; n < e.items.length; n++) e.items[n].style.width = e.colWidth + "px";
    }
    function a(e) {
      Util.addClass(e.element, "masonry--loaded"), (e.colHeights = []), (e.colItems = []);
      for (var t = 0; t < e.activeColumns; t++) e.colHeights.push(0), (e.colItems[t] = []);
      for (var n = 0; n < e.items.length; n++) {
        var s = Math.min.apply(Math, e.colHeights),
          i = e.colHeights.indexOf(s);
        e.colItems[i].push(n), (e.items[n].style.flexBasis = 0);
        var a = e.items[n].getBoundingClientRect().height || e.items[n].offsetHeight || 1;
        e.colHeights[i] = e.colHeights[i] + e.colGap + a;
      }
      var l = Math.max.apply(Math, e.colHeights) + 5;
      e.list.style.cssText = "height: " + l + "px;";
      for (var o = 0, n = 0; n < e.colItems.length; n++) {
        for (t = 0; t < e.colItems[n].length; t++) (e.items[e.colItems[n][t]].style.order = o), (o += 1);
        var r = e.items[e.colItems[n][e.colItems[n].length - 1]];
        r.style.flexBasis = l - e.colHeights[n] + r.getBoundingClientRect().height - 5 + "px";
      }
      e.element.dispatchEvent(new CustomEvent("masonry-laid"));
    }
    function i(s) {
      var i = s.list.getElementsByTagName("img");
      0 == i.length
        ? a(s)
        : (function e() {
            for (var t = 0, n = 0; n < i.length && (void 0 === i[n].naturalHeight || 0 != i[n].naturalHeight); n++) t += 1;
            t == i.length
              ? a(s)
              : setTimeout(function () {
                  e();
                }, 100);
          })();
    }
    var t = document.getElementsByClassName("js-masonry"),
      l = Util.cssSupports("flex-basis", "auto"),
      o = [];
    if (0 < t.length) {
      for (var r = 0; r < t.length; r++) l ? o.push(new e(t[r])) : Util.addClass(t[r], "masonry--loaded");
      if (!l) return;
      var d = !1,
        c = new CustomEvent("masonry-resize");
      function u() {
        for (var e = 0; e < o.length; e++) o[e].element.dispatchEvent(c);
      }
      window.addEventListener("resize", function () {
        clearTimeout(d), (d = setTimeout(u, 500));
      });
    }
  })(),
  (function () {
    function n(e) {
      (this.element = e), (this.elementId = this.element.getAttribute("id")), (this.menuItems = this.element.getElementsByClassName("js-menu__content")), (this.trigger = document.querySelectorAll('[aria-controls="' + this.elementId + '"]')), (this.selectedTrigger = !1), (this.menuIsOpen = !1), this.initMenu(), this.initMenuEvents();
    }
    (n.prototype.initMenu = function () {
      for (var e = 0; e < this.trigger.length; e++) Util.setAttributes(this.trigger[e], { "aria-expanded": "false", "aria-haspopup": "true" });
      for (e = 0; e < this.menuItems.length; e++) this.menuItems[e].setAttribute("tabindex", "0");
    }),
      (n.prototype.initMenuEvents = function () {
        for (var n = this, e = 0; e < this.trigger.length; e++)
          !(function (t) {
            n.trigger[t].addEventListener("click", function (e) {
              e.preventDefault(), Util.hasClass(n.element, "menu--is-visible") && n.selectedTrigger != n.trigger[t] && n.toggleMenu(!1, !1), (n.selectedTrigger = n.trigger[t]), n.toggleMenu(!Util.hasClass(n.element, "menu--is-visible"), !0);
            });
          })(e);
        this.element.addEventListener("keydown", function (e) {
          Util.hasClass(e.target, "js-menu__content") && ((e.keyCode && 40 == e.keyCode) || (e.key && "arrowdown" == e.key.toLowerCase()) ? n.navigateItems(e, "next") : ((e.keyCode && 38 == e.keyCode) || (e.key && "arrowup" == e.key.toLowerCase())) && n.navigateItems(e, "prev"));
        });
      }),
      (n.prototype.toggleMenu = function (e, t) {
        var n = this;
        Util.toggleClass(this.element, "menu--is-visible", e),
          (this.menuIsOpen = e)
            ? (this.selectedTrigger.setAttribute("aria-expanded", "true"),
              Util.moveFocus(this.menuItems[0]),
              this.element.addEventListener(
                "transitionend",
                function (e) {
                  Util.moveFocus(n.menuItems[0]);
                },
                { once: !0 }
              ),
              this.positionMenu(),
              Util.addClass(this.selectedTrigger, "menu-control--active"))
            : this.selectedTrigger && (this.selectedTrigger.setAttribute("aria-expanded", "false"), t && Util.moveFocus(this.selectedTrigger), Util.removeClass(this.selectedTrigger, "menu-control--active"), (this.selectedTrigger = !1));
      }),
      (n.prototype.positionMenu = function (e, t) {
        var n = this.selectedTrigger.getBoundingClientRect(),
          s = window.innerHeight - n.bottom < n.top,
          i = n.left,
          a = window.innerWidth - n.right,
          l = window.innerWidth < n.left + this.element.offsetWidth,
          o = l ? "right: " + a + "px;" : "left: " + i + "px;",
          r = s ? "bottom: " + (window.innerHeight - n.top) + "px;" : "top: " + n.bottom + "px;";
        l && a + this.element.offsetWidth > window.innerWidth && (o = "left: " + parseInt((window.innerWidth - this.element.offsetWidth) / 2) + "px;");
        var d = s ? n.top - 20 : window.innerHeight - n.bottom - 20;
        this.element.setAttribute("style", o + r + "max-height:" + Math.floor(d) + "px;");
      }),
      (n.prototype.navigateItems = function (e, t) {
        e.preventDefault();
        var n = Util.getIndexInArray(this.menuItems, e.target),
          s = "next" == t ? n + 1 : n - 1;
        s < 0 && (s = this.menuItems.length - 1), s > this.menuItems.length - 1 && (s = 0), Util.moveFocus(this.menuItems[s]);
      }),
      (n.prototype.checkMenuFocus = function () {
        var e = document.activeElement.closest(".js-menu");
        (e && this.element.contains(e)) || this.toggleMenu(!1, !1);
      }),
      (n.prototype.checkMenuClick = function (e) {
        this.element.contains(e) || e.closest('[aria-controls="' + this.elementId + '"]') || this.toggleMenu(!1);
      }),
      (window.Menu = n);
    var s = document.getElementsByClassName("js-menu");
    if (0 < s.length) {
      for (var i = [], a = [], e = 0; e < s.length; e++)
        !(function (e) {
          i.push(new n(s[e]));
          var t = s[e].getAttribute("data-scrollable-element");
          t && !a.includes(t) && a.push(t);
        })(e);
      window.addEventListener("keyup", function (e) {
        (e.keyCode && 9 == e.keyCode) || (e.key && "tab" == e.key.toLowerCase())
          ? i.forEach(function (e) {
              e.checkMenuFocus();
            })
          : ((e.keyCode && 27 == e.keyCode) || (e.key && "escape" == e.key.toLowerCase())) &&
            i.forEach(function (e) {
              e.toggleMenu(!1, !1);
            });
      }),
        window.addEventListener("click", function (t) {
          i.forEach(function (e) {
            e.checkMenuClick(t.target);
          });
        }),
        window.addEventListener("resize", function (e) {
          i.forEach(function (e) {
            e.toggleMenu(!1, !1);
          });
        }),
        window.addEventListener("scroll", function (e) {
          i.forEach(function (e) {
            e.menuIsOpen && e.toggleMenu(!1, !1);
          });
        });
      for (var t = 0; t < a.length; t++) {
        var l = document.querySelector(a[t]);
        l &&
          l.addEventListener("scroll", function (e) {
            i.forEach(function (e) {
              e.menuIsOpen && e.toggleMenu(!1, !1);
            });
          });
      }
    }
  })(),
  (function () {
    function e(e) {
      (this.element = e), (this.triggers = document.querySelectorAll('[aria-controls="' + this.element.getAttribute("id") + '"]')), (this.firstFocusable = null), (this.lastFocusable = null), (this.moveFocusEl = null), (this.modalFocus = this.element.getAttribute("data-modal-first-focus") ? this.element.querySelector(this.element.getAttribute("data-modal-first-focus")) : null), (this.selectedTrigger = null), (this.showClass = "modal--is-visible"), this.initModal();
    }
    function n(e) {
      return e.offsetWidth || e.offsetHeight || e.getClientRects().length;
    }
    (e.prototype.initModal = function () {
      var t = this;
      if (this.triggers)
        for (var e = 0; e < this.triggers.length; e++)
          this.triggers[e].addEventListener("click", function (e) {
            e.preventDefault(), Util.hasClass(t.element, t.showClass) ? t.closeModal() : ((t.selectedTrigger = e.target), t.showModal(), t.initModalEvents());
          });
      this.element.addEventListener("openModal", function (e) {
        e.detail && (t.selectedTrigger = e.detail), t.showModal(), t.initModalEvents();
      }),
        this.element.addEventListener("closeModal", function (e) {
          e.detail && (t.selectedTrigger = e.detail), t.closeModal();
        }),
        Util.hasClass(this.element, this.showClass) && this.initModalEvents();
    }),
      (e.prototype.showModal = function () {
        var n = this;
        Util.addClass(this.element, this.showClass),
          this.getFocusableElements(),
          this.moveFocusEl.focus(),
          this.element.addEventListener("transitionend", function e(t) {
            n.moveFocusEl.focus(), n.element.removeEventListener("transitionend", e);
          }),
          this.emitModalEvents("modalIsOpen");
      }),
      (e.prototype.closeModal = function () {
        Util.hasClass(this.element, this.showClass) && (Util.removeClass(this.element, this.showClass), (this.firstFocusable = null), (this.lastFocusable = null), (this.moveFocusEl = null), this.selectedTrigger && this.selectedTrigger.focus(), this.cancelModalEvents(), this.emitModalEvents("modalIsClose"));
      }),
      (e.prototype.initModalEvents = function () {
        this.element.addEventListener("keydown", this), this.element.addEventListener("click", this);
      }),
      (e.prototype.cancelModalEvents = function () {
        this.element.removeEventListener("keydown", this), this.element.removeEventListener("click", this);
      }),
      (e.prototype.handleEvent = function (e) {
        switch (e.type) {
          case "click":
            this.initClick(e);
          case "keydown":
            this.initKeyDown(e);
        }
      }),
      (e.prototype.initKeyDown = function (e) {
        (e.keyCode && 9 == e.keyCode) || (e.key && "Tab" == e.key) ? this.trapFocus(e) : ((e.keyCode && 13 == e.keyCode) || (e.key && "Enter" == e.key)) && e.target.closest(".js-modal__close") && (e.preventDefault(), this.closeModal());
      }),
      (e.prototype.initClick = function (e) {
        (e.target.closest(".js-modal__close") || Util.hasClass(e.target, "js-modal")) && (e.preventDefault(), this.closeModal());
      }),
      (e.prototype.trapFocus = function (e) {
        this.firstFocusable == document.activeElement && e.shiftKey && (e.preventDefault(), this.lastFocusable.focus()), this.lastFocusable != document.activeElement || e.shiftKey || (e.preventDefault(), this.firstFocusable.focus());
      }),
      (e.prototype.getFocusableElements = function () {
        var e = this.element.querySelectorAll(s);
        this.getFirstVisible(e), this.getLastVisible(e), this.getFirstFocusable();
      }),
      (e.prototype.getFirstVisible = function (e) {
        for (var t = 0; t < e.length; t++)
          if (n(e[t])) {
            this.firstFocusable = e[t];
            break;
          }
      }),
      (e.prototype.getLastVisible = function (e) {
        for (var t = e.length - 1; 0 <= t; t--)
          if (n(e[t])) {
            this.lastFocusable = e[t];
            break;
          }
      }),
      (e.prototype.getFirstFocusable = function () {
        if (this.modalFocus && Element.prototype.matches)
          if (this.modalFocus.matches(s)) this.moveFocusEl = this.modalFocus;
          else {
            this.moveFocusEl = !1;
            for (var e = this.modalFocus.querySelectorAll(s), t = 0; t < e.length; t++)
              if (n(e[t])) {
                this.moveFocusEl = e[t];
                break;
              }
            this.moveFocusEl || (this.moveFocusEl = this.firstFocusable);
          }
        else this.moveFocusEl = this.firstFocusable;
      }),
      (e.prototype.emitModalEvents = function (e) {
        var t = new CustomEvent(e, { detail: this.selectedTrigger });
        this.element.dispatchEvent(t);
      });
    var t = document.getElementsByClassName("js-modal"),
      s = '[href], input:not([disabled]), select:not([disabled]), textarea:not([disabled]), button:not([disabled]), iframe, object, embed, [tabindex]:not([tabindex="-1"]), [contenteditable], audio[controls], video[controls], summary';
    if (0 < t.length) {
      for (var i = [], a = 0; a < t.length; a++) i.push(new e(t[a]));
      window.addEventListener("keydown", function (e) {
        if ((e.keyCode && 27 == e.keyCode) || (e.key && "escape" == e.key.toLowerCase())) for (var t = 0; t < i.length; t++) i[t].closeModal();
      });
    }
  })(),
  (function () {
    var e = document.getElementsByClassName("js-notice");
    if (0 < e.length)
      for (var n = 0; n < e.length; n++)
        !(function () {
          var t;
          (t = e[n]).addEventListener("click", function (e) {
            e.target.closest(".js-notice__hide-control") && (e.preventDefault(), Util.addClass(t, "notice--hide"));
          });
        })();
  })(),
  (function () {
    function e(e) {
      var t, n;
      (this.element = e),
        (this.input = this.element.getElementsByClassName("js-number-input__value")[0]),
        (this.min = parseFloat(this.input.getAttribute("min"))),
        (this.max = parseFloat(this.input.getAttribute("max"))),
        (this.step = parseFloat(this.input.getAttribute("step"))),
        isNaN(this.step) && (this.step = 1),
        (this.precision = (t = this.step).toString().length - Math.floor(t).toString().length - 1),
        (n = this).element.addEventListener("click", function (e) {
          var t = e.target.closest(".js-number-input__btn");
          t &&
            (e.preventDefault(),
            (function (e, t) {
              var n = Util.hasClass(t, "number-input__btn--plus") ? parseFloat(e.input.value) + e.step : parseFloat(e.input.value) - e.step;
              0 < e.precision && (n = n.toFixed(e.precision));
              n < e.min && (n = e.min);
              n > e.max && (n = e.max);
              (e.input.value = n), e.input.dispatchEvent(new CustomEvent("change", { bubbles: !0 }));
            })(n, t));
        }),
        n.input.addEventListener("focusout", function (e) {
          var t = parseFloat(n.input.value);
          t < n.min && (t = n.min),
            t > n.max && (t = n.max),
            (t = (function (e, t) {
              var n = (10 * t * e.precision) % (10 * e.step * e.precision);
              0 != n && (t -= n);
              0 < e.precision && (t = t.toFixed(e.precision));
              return t;
            })(n, t)) != parseFloat(n.input.value) && (n.input.value = t);
        });
    }
    var t = document.getElementsByClassName("js-number-input");
    if (0 < t.length) for (var n = 0; n < t.length; n++) new e(t[n]);
  })(),
  (function () {
    function e(e) {
      (this.element = e),
        (this.wrapper = document.getElementsByClassName("js-off-canvas")[0]),
        (this.main = document.getElementsByClassName("off-canvas__main")[0]),
        (this.triggers = document.querySelectorAll('[aria-controls="' + this.element.getAttribute("id") + '"]')),
        (this.closeBtn = this.element.getElementsByClassName("js-off-canvas__close-btn")),
        (this.selectedTrigger = !1),
        (this.firstFocusable = null),
        (this.lastFocusable = null),
        (this.animating = !1),
        (function (n) {
          n.element.setAttribute("aria-hidden", "true");
          for (var e = 0; e < n.triggers.length; e++)
            n.triggers[e].addEventListener("click", function (e) {
              var t;
              (n.selectedTrigger = e.currentTarget),
                e.preventDefault(),
                ("close" == ("true" == (t = n).element.getAttribute("aria-hidden") ? "close" : "open")
                  ? function (t) {
                      if (t.animating) return;
                      a(t, "openPanel", ""),
                        (t.animating = !0),
                        t.element.setAttribute("aria-hidden", "false"),
                        Util.addClass(t.wrapper, "off-canvas--visible"),
                        (function (e) {
                          var t = e.element.querySelectorAll('[href], input:not([disabled]), select:not([disabled]), textarea:not([disabled]), button:not([disabled]), iframe, object, embed, [tabindex]:not([tabindex="-1"]), [contenteditable], audio[controls], video[controls], summary');
                          (function (e, t) {
                            for (var n = 0; n < t.length; n++) if (t[n].offsetWidth || t[n].offsetHeight || t[n].getClientRects().length) return (e.firstFocusable = t[n]);
                          })(e, t),
                            (function (e, t) {
                              for (var n = t.length - 1; 0 <= n; n--) if (t[n].offsetWidth || t[n].offsetHeight || t[n].getClientRects().length) return (e.lastFocusable = t[n]);
                            })(e, t);
                        })(t);
                      var n = t.element;
                      0 < t.closeBtn.length && !Util.hasClass(t.closeBtn[0], "js-off-canvas__a11y-close-btn") && (n = t.closeBtn[0]);
                      n.addEventListener("transitionend", function e() {
                        (t.animating = !1), Util.moveFocus(t.element), n.removeEventListener("transitionend", e);
                      }),
                        l || (t.animating = !1);
                      !(function (e) {
                        e.element.addEventListener("keydown", i.bind(e)), e.element.addEventListener("click", i.bind(e));
                      })(t);
                    }
                  : s)(t);
            });
        })(this);
    }
    function s(t, e) {
      var n;
      t.animating ||
        ((t.animating = !0),
        t.element.setAttribute("aria-hidden", "true"),
        Util.removeClass(t.wrapper, "off-canvas--visible"),
        t.main.addEventListener("transitionend", function e() {
          (t.animating = !1),
            t.selectedTrigger && t.selectedTrigger.focus(),
            setTimeout(function () {
              t.selectedTrigger = !1;
            }, 10),
            t.main.removeEventListener("transitionend", e);
        }),
        l || (t.animating = !1),
        (n = t).element.removeEventListener("keydown", i.bind(n)),
        n.element.removeEventListener("click", i.bind(n)),
        a(t, "closePanel", e));
    }
    function i(e) {
      switch (e.type) {
        case "keydown":
          (t = this),
            ((n = e).keyCode && 27 == n.keyCode) || (n.key && "Escape" == n.key)
              ? s(t, "key")
              : ((n.keyCode && 9 == n.keyCode) || (n.key && "Tab" == n.key)) &&
                (function (e, t) {
                  e.firstFocusable == document.activeElement && t.shiftKey && (t.preventDefault(), e.lastFocusable.focus());
                  e.lastFocusable != document.activeElement || t.shiftKey || (t.preventDefault(), e.firstFocusable.focus());
                })(t, n);
          break;
        case "click":
          !(function (e, t) {
            if (!t.target.closest(".js-off-canvas__close-btn")) return;
            t.preventDefault(), s(e, "close-btn");
          })(this, e);
      }
      var t, n;
    }
    function a(e, t, n) {
      var s = new CustomEvent(t, { detail: n });
      e.element.dispatchEvent(s);
    }
    var t = document.getElementsByClassName("js-off-canvas__panel"),
      l = Util.cssSupports("transition");
    if (0 < t.length) for (var n = 0; n < t.length; n++) new e(t[n]);
  })(),
  (function () {
    function e(e) {
      var t;
      (this.element = e),
        (this.stickyContent = this.element.getElementsByClassName("js-overscroll-section__sticky-content")),
        (this.scrollContent = this.element.getElementsByClassName("js-overscroll-section__scroll-content")),
        (this.scrollingFn = !1),
        (this.scrolling = !1),
        (this.resetOpacity = !1),
        (this.disabledClass = "overscroll-section--disabled"),
        a((t = this)),
        (function (e) {
          if (0 == e.scrollContent.length) return;
          var t = document.createElement("div");
          t.setAttribute("aria-hidden", "true"), e.element.insertBefore(t, e.scrollContent[0]), (e.prevElement = e.scrollContent[0].previousElementSibling), (e.prevElement.style.opacity = "0"), n(e);
        })(t),
        t.element.addEventListener("update-overscroll-section", function () {
          a(t), n(t);
        }),
        s.bind(t)(),
        new IntersectionObserver(
          function (e) {
            if (e[0].isIntersecting) {
              if (this.scrollingFn) return;
              !(function (e) {
                (e.scrollingFn = function () {
                  if (this.scrolling) return;
                  (this.scrolling = !0), window.requestAnimationFrame(s.bind(this));
                }.bind(e)),
                  window.addEventListener("scroll", e.scrollingFn);
              })(this);
            } else {
              if (!this.scrollingFn) return;
              window.removeEventListener("scroll", this.scrollingFn), i(this, 0), (this.scrollingFn = !1);
            }
          }.bind(t)
        ).observe(t.prevElement);
    }
    function n(e) {
      e.prevElementTop = e.prevElement.getBoundingClientRect().top + window.scrollY;
    }
    function s() {
      var e;
      0 != this.stickyContent.length &&
        (n(this), parseInt(this.stickyContent[0].style.top) != window.innerHeight - this.stickyContent[0].offsetHeight && a(this), this.prevElementTop - window.scrollY < (2 * window.innerHeight) / 3 ? (0 < (e = Math.easeOutQuart((2 * window.innerHeight) / 3 + window.scrollY - this.prevElementTop, 0, 1, (2 * window.innerHeight) / 3)) ? ((this.resetOpacity = !1), i(this, e)) : this.resetOpacity || ((this.resetOpacity = !0), i(this, 0))) : i(this, 0), (this.scrolling = !1));
    }
    function i(e, t) {
      e.element.style.setProperty("--overscroll-section-opacity", t);
    }
    function a(e) {
      var t;
      0 != e.stickyContent.length && ((t = window.innerHeight - e.stickyContent[0].offsetHeight), (e.stickyContent[0].style.top = t + "px"), Util.toggleClass(e.element, e.disabledClass, 2 < t));
    }
    var t = document.getElementsByClassName("js-overscroll-section"),
      l = Util.cssSupports("position", "sticky") || Util.cssSupports("position", "-webkit-sticky"),
      o = "IntersectionObserver" in window && "IntersectionObserverEntry" in window && "intersectionRatio" in window.IntersectionObserverEntry.prototype,
      r = Util.osHasReducedMotion();
    if (0 < t.length && l && !r && o) {
      for (var d = [], c = 0; c < t.length; c++) d.push(new e(t[c]));
      var u = !1,
        m = new CustomEvent("update-overscroll-section");
      function h() {
        for (var e = 0; e < d.length; e++) d[e].element.dispatchEvent(m);
      }
      window.addEventListener("resize", function () {
        clearTimeout(u), (u = setTimeout(h, 100));
      }),
        (document.fonts.onloadingdone = function (e) {
          h();
        });
    }
  })(),
  (function () {
    function e(e, t) {
      var n;
      (this.element = e),
        (this.figure = this.element.getElementsByClassName("js-parallax-img__assets")[0]),
        (this.imgs = this.element.getElementsByTagName("img")),
        (this.maxRotation = t || 2),
        5 < this.maxRotation && (this.maxRotation = 5),
        (this.scale = 1),
        (this.animating = !1),
        (function (n) {
          (n.count = 0), window.requestAnimationFrame(s.bind(n));
          for (var e = 0; e < n.imgs.length; e++)
            !(function (e) {
              var t = !1;
              n.imgs[e].addEventListener("load", function () {
                t || (n.count = n.count + 1);
              }),
                n.imgs[e].complete && !t && ((t = !0), (n.count = n.count + 1));
            })(e);
        })(this),
        (n = this).element.addEventListener("mousemove", function (e) {
          n.animating ||
            ((n.animating = !0),
            window.requestAnimationFrame(
              function (e, t) {
                var n = this.element.getBoundingClientRect(),
                  s = (this.maxRotation / n.width) * 2 * (n.left - e.clientX + n.width / 2),
                  i = (this.maxRotation / n.height) * 2 * (e.clientY - n.top - n.height / 2);
                s > this.maxRotation && (s = this.maxRotation);
                s < -1 * this.maxRotation && (s = -this.maxRotation);
                i > this.maxRotation && (i = this.maxRotation);
                i < -1 * this.maxRotation && (i = -this.maxRotation);
                (this.figure.style.transform = "scale(" + this.scale + ") rotateX(" + i + "deg) rotateY(" + s + "deg)"), (this.animating = !1);
              }.bind(n, e)
            ));
        });
    }
    function s() {
      var e, t;
      this.count >= this.imgs.length
        ? ((t = (function (e) {
            for (var t = 0, n = 0, s = 0; s < e.imgs.length; s++) {
              var i = e.imgs[s].getBoundingClientRect().width;
              (i < t || 0 == s) && (t = i), (n < i || 0 == s) && (n = i);
            }
            var a = Math.ceil((10 * n) / t) / 10;
            a < 1.1 && (a = 1.1);
            return a;
          })((e = this))),
          (e.scale = t / Math.sin(Math.PI / 2 - (e.maxRotation * Math.PI) / 180)),
          (e.figure.style.transform = "scale(" + e.scale + ")"),
          Util.addClass(e.element, "parallax-img--loaded"),
          this.loaded && (window.cancelAnimationFrame(this.loaded), (this.loaded = !1)))
        : (this.loaded = window.requestAnimationFrame(s.bind(this)));
    }
    window.ParallaxImg = e;
    var t,
      n,
      i = document.getElementsByClassName("js-parallax-img");
    if (0 < i.length && Util.cssSupports("transform", "translateZ(0px)")) for (var a = 0; a < i.length; a++) (n = void 0), (n = i[(t = a)].getAttribute("data-perspective")), new e(i[t], n);
  })(),
  (function () {
    function e(e) {
      (this.element = e), (this.password = this.element.getElementsByClassName("js-password__input")[0]), (this.visibilityBtn = this.element.getElementsByClassName("js-password__btn")[0]), (this.visibilityClass = "password--text-is-visible"), this.initPassword();
    }
    (e.prototype.initPassword = function () {
      var t = this;
      this.visibilityBtn.addEventListener("click", function (e) {
        document.activeElement !== t.password && (e.preventDefault(), t.togglePasswordVisibility());
      });
    }),
      (e.prototype.togglePasswordVisibility = function () {
        var e = !Util.hasClass(this.element, this.visibilityClass);
        Util.toggleClass(this.element, this.visibilityClass, e), e ? this.password.setAttribute("type", "text") : this.password.setAttribute("type", "password");
      });
    var t = document.getElementsByClassName("js-password");
    if (0 < t.length) for (var n = 0; n < t.length; n++) new e(t[n]);
  })(),
  (function () {
    function e(e) {
      (this.element = e),
        (this.bar = this.element.getElementsByClassName("js-pct-bar__bg")),
        (this.percentages = this.element.getElementsByClassName("js-pct-bar__value")),
        (function (e) {
          if (e.bar.length < 1) return;
          for (var t = "", n = 0; n < e.percentages.length; n++) {
            var s = e.percentages[n].getAttribute("data-pct-bar-bg"),
              i = e.percentages[n].getAttribute("data-pct-bar-style"),
              a = e.percentages[n].textContent;
            t = t + '<div class="pct-bar__fill js-pct-bar__fill ' + (s = s || "") + '" style="flex-basis: ' + a + ";" + (i = i || "") + '"></div>';
          }
          e.bar[0].innerHTML = t;
        })(this);
    }
    window.PercentageBar = e;
    var t = document.getElementsByClassName("js-pct-bar");
    if (0 < t.length) for (var n = 0; n < t.length; n++) new e(t[n]);
  })(),
  (function () {
    var n = function (e) {
      var t;
      (this.options = Util.extend(n.defaults, e)),
        (this.element = this.options.element),
        (this.chartArea = this.element.getElementsByClassName("js-pie-chart__area")[0]),
        (this.dataValues = this.element.getElementsByClassName("js-pie-chart__value")),
        this.chartPaths,
        (this.percentageTot = 0),
        (this.percentageReset = (function (e) {
          for (var t = 0, n = 0; n < e.dataValues.length; n++) t += parseFloat(e.dataValues[n].textContent);
          return 100 / t;
        })(this)),
        (this.percentageStart = []),
        (this.percentageDelta = []),
        (this.tooltip = this.element.getElementsByClassName("js-pie-chart__tooltip")),
        (this.eventIds = []),
        (this.hoverId = !1),
        (this.hovering = !1),
        (this.selectedIndex = !1),
        (this.chartLoaded = !1),
        s((t = this)),
        (function (e) {
          if (!e.options.animate || e.chartLoaded || x || !E) return;
          new IntersectionObserver(
            function (e, t) {
              e[0].isIntersecting &&
                ((this.chartLoaded = !0),
                (function (o) {
                  var r = null,
                    d = 400 / o.dataValues.length,
                    c = function (t, e) {
                      var n = e - (r = r || e);
                      d < n && (n = d);
                      var s = o.percentageStart[t],
                        i = s + o.percentageDelta[t] * (n / d),
                        a = o.element.getElementsByClassName("js-pie-chart__data-path--" + (t + 1))[0],
                        l = u(o, s, i);
                      a.setAttribute("d", l),
                        n < d
                          ? window.requestAnimationFrame(function (e) {
                              c(t, e);
                            })
                          : t < o.dataValues.length - 1 &&
                            ((r = null),
                            window.requestAnimationFrame(function (e) {
                              c(t + 1, e);
                            }));
                    };
                  window.requestAnimationFrame(function (e) {
                    c(0, e);
                  });
                })(this),
                t.unobserve(this.element));
            }.bind(e),
            { rootMargin: "0px 0px -200px 0px" }
          ).observe(e.element);
        })(t),
        (function (t) {
          function e() {
            var e;
            ((e = t).hovering = !1), e.eventIds && e.eventIds.hover && (e.chartArea.removeEventListener("mouseenter", e.eventIds.hover), e.chartArea.removeEventListener("mousedown", e.eventIds.hover), e.chartArea.removeEventListener("mousemove", e.eventIds.hover), e.chartArea.removeEventListener("mouseleave", e.eventIds.hover)), t.svg.remove(), s(t), i(t);
          }
          window.addEventListener("resize", function () {
            clearTimeout(t.eventIds.resize), (t.eventIds.resize = setTimeout(e, 300));
          });
        })(t),
        i(this);
    };
    function s(e) {
      var t, n, s;
      ((t = e).height = t.chartArea.clientHeight),
        (t.width = t.chartArea.clientWidth),
        "donut" == t.options.type && ((t.donutSize = parseInt(getComputedStyle(t.element).getPropertyValue("--pie-chart-donut-width"))), (t.donutSize <= 0 || isNaN(t.donutSize)) && (t.donutSize = t.width / 4)),
        (s = '<svg xmlns="http://www.w3.org/2000/svg" aria-hidden="true" width="' + (n = e).width + '" height="' + n.height + '" class="pie-chart__svg js-pie-chart__svg"></svg>'),
        (n.chartArea.innerHTML = n.chartArea.innerHTML + s),
        (n.svg = n.chartArea.getElementsByClassName("js-pie-chart__svg")[0]),
        (function (e) {
          var t = document.createElementNS("http://www.w3.org/2000/svg", "g");
          t.setAttribute("class", "pie-chart__dataset js-pie-chart__dataset");
          for (var n = 0; n < e.dataValues.length; n++) {
            var s = document.createElementNS("http://www.w3.org/2000/svg", "path");
            Util.setAttributes(s, {
              d: (function (e, t) {
                var n = e.percentageTot * e.percentageReset * 3.6,
                  s = parseFloat(e.dataValues[t].textContent);
                e.percentageStart.push(n), e.percentageDelta.push(s * e.percentageReset * 3.6), (e.percentageTot = e.percentageTot + s);
                var i = e.percentageTot * e.percentageReset * 3.6;
                return u(e, n, i);
              })(e, n),
              class: "pie-chart__data-path pie-chart__data-path--" + (n + 1) + " js-pie-chart__data-path js-pie-chart__data-path--" + (n + 1),
              "data-index": n,
              "stroke-linejoin": "round",
            });
            var i = e.dataValues[n].getAttribute("data-pie-chart-style");
            i && s.setAttribute("style", i), t.appendChild(s);
          }
          e.svg.appendChild(t), (e.chartPaths = e.svg.querySelectorAll(".js-pie-chart__data-path"));
        })(n),
        e.chartArea.setAttribute("aria-hidden", !0);
    }
    function u(e, t, n) {
      return (
        !e.chartLoaded && e.options.animate && E && !x && (n = t),
        "pie" == e.options.type
          ? ((g = e.width / 2), (p = e.width / 2), (v = e.width / 2), (f = t), (y = _(g, p, v, (b = n))), (w = _(g, p, v, f)), (C = b - f <= 180 ? "0" : "1"), ["M", y.x, y.y, "A", v, v, 0, C, 0, w.x, w.y, "L", g, p, "L", y.x, y.y].join(" "))
          : ((s = e.width / 2), (i = e.width / 2), (a = e.width / 2), (l = e.donutSize), (o = t), (d = _(s, i, a - l, (r = n))), (c = _(s, i, a, r)), (u = _(s, i, a, o)), (m = _(s, i, a - l, o)), (h = r - o <= 180 ? "0" : "1"), ["M", d.x, d.y, "L", c.x, c.y, "A", a, a, 0, h, 0, u.x, u.y, "L", m.x, m.y, "A", a - l, a - l, 0, h, 1, d.x, d.y].join(" "))
      );
      var s, i, a, l, o, r, d, c, u, m, h, g, p, v, f, b, y, w, C;
    }
    function i(e) {
      e.tooltip.length < 1 ||
        ((e.eventIds.hover = function (e) {
          switch (e.type) {
            case "mouseenter":
            case "mousedown":
              a(this, e);
              break;
            case "mousemove":
              var t = this;
              t.hoverId = window.requestAnimationFrame
                ? window.requestAnimationFrame(function () {
                    a(t, e);
                  })
                : setTimeout(function () {
                    a(t, e);
                  });
              break;
            case "mouseleave":
              !(function (e) {
                e.hoverId && (window.requestAnimationFrame ? window.cancelAnimationFrame(e.hoverId) : clearTimeout(e.hoverId), (e.hoverId = !1));
                Util.addClass(e.tooltip[0], "is-hidden"), (e.hovering = !1), (e.selectedIndex = !1);
              })(this);
          }
        }.bind(e)),
        e.chartArea.addEventListener("mouseenter", e.eventIds.hover),
        e.chartArea.addEventListener("mousedown", e.eventIds.hover),
        e.chartArea.addEventListener("mousemove", e.eventIds.hover),
        e.chartArea.addEventListener("mouseleave", e.eventIds.hover));
    }
    function a(e, t) {
      var n, s, i, a, l, o;
      e.hovering ||
        (!(e.hovering = !0) !== (n = "path" == (s = t).target.tagName.toLowerCase() && parseInt(s.target.getAttribute("data-index"))) &&
          n !== e.selectedIndex &&
          ((e.selectedIndex = n), ((o = e).tooltip[0].textContent = o.dataValues[o.selectedIndex].textContent), (a = "donut" == (i = e).options.type ? (i.width - i.donutSize) / 2 : i.width / 4), (l = _(i.width / 2, i.width / 2, a, i.percentageStart[i.selectedIndex] + i.percentageDelta[i.selectedIndex] / 2)), i.tooltip[0].setAttribute("style", "left: " + l.x + "px; top: " + l.y + "px"), Util.removeClass(e.tooltip[0], "is-hidden")),
        (e.hovering = !1));
    }
    function _(e, t, n, s) {
      var i = ((s - 90) * Math.PI) / 180;
      return { x: e + n * Math.cos(i), y: t + n * Math.sin(i) };
    }
    (n.defaults = { element: "", type: "pie", animate: !1 }), (window.PieChart = n);
    var e,
      t,
      l,
      o = document.getElementsByClassName("js-pie-chart"),
      E = "IntersectionObserver" in window && "IntersectionObserverEntry" in window && "intersectionRatio" in window.IntersectionObserverEntry.prototype,
      x = Util.osHasReducedMotion();
    if (0 < o.length) for (var r = 0; r < o.length; r++) (l = t = void 0), (t = o[(e = r)].getAttribute("data-pie-chart-type") ? o[e].getAttribute("data-pie-chart-type") : "pie"), (l = !(!o[e].getAttribute("data-pie-chart-animation") || "on" != o[e].getAttribute("data-pie-chart-animation"))), new n({ element: o[e], type: t, animate: l });
  })(),
  (function () {
    function n(e) {
      var t;
      (this.element = e),
        (this.elementId = this.element.getAttribute("id")),
        (this.trigger = document.querySelectorAll('[aria-controls="' + this.elementId + '"]')),
        (this.selectedTrigger = !1),
        (this.popoverVisibleClass = "popover--is-visible"),
        (this.selectedTriggerClass = "popover-control--active"),
        (this.popoverIsOpen = !1),
        (this.firstFocusable = !1),
        (this.lastFocusable = !1),
        (this.positionTarget = !!(t = this.element.getAttribute("data-position-target")) && document.querySelector(t)),
        (this.viewportGap = parseInt(getComputedStyle(this.element).getPropertyValue("--popover-viewport-gap")) || 20),
        (function (e) {
          for (var t = 0; t < e.trigger.length; t++) Util.setAttributes(e.trigger[t], { "aria-expanded": "false", "aria-haspopup": "true" });
        })(this),
        (function (n) {
          for (var e = 0; e < n.trigger.length; e++)
            !(function (t) {
              n.trigger[t].addEventListener("click", function (e) {
                e.preventDefault(), Util.hasClass(n.element, n.popoverVisibleClass) && n.selectedTrigger != n.trigger[t] && s(n, !1, !1), (n.selectedTrigger = n.trigger[t]), s(n, !Util.hasClass(n.element, n.popoverVisibleClass), !0);
              });
            })(e);
          n.element.addEventListener("keydown", function (e) {
            ((e.keyCode && 9 == e.keyCode) || (e.key && "Tab" == e.key)) &&
              (function (e, t) {
                e.firstFocusable == document.activeElement && t.shiftKey && (t.preventDefault(), e.lastFocusable.focus());
                e.lastFocusable != document.activeElement || t.shiftKey || (t.preventDefault(), e.firstFocusable.focus());
              })(n, e);
          });
        })(this);
    }
    function s(t, e, n) {
      var s, i;
      Util.toggleClass(t.element, t.popoverVisibleClass, e),
        (t.popoverIsOpen = e)
          ? (t.selectedTrigger.setAttribute("aria-expanded", "true"),
            (i = (s = t).element.querySelectorAll(o)),
            (function (e, t) {
              for (var n = 0; n < t.length; n++)
                if (l(t[n])) {
                  e.firstFocusable = t[n];
                  break;
                }
            })(s, i),
            (function (e, t) {
              for (var n = t.length - 1; 0 <= n; n--)
                if (l(t[n])) {
                  e.lastFocusable = t[n];
                  break;
                }
            })(s, i),
            a(t),
            t.element.addEventListener(
              "transitionend",
              function (e) {
                a(t);
              },
              { once: !0 }
            ),
            (function (e) {
              !(function (e) {
                (e.element.style.maxHeight = ""), (e.element.style.top = ""), (e.element.style.bottom = ""), (e.element.style.left = ""), (e.element.style.right = "");
              })(e);
              var t = e.positionTarget ? e.positionTarget.getBoundingClientRect() : e.selectedTrigger.getBoundingClientRect(),
                n = window.innerHeight - t.bottom < t.top,
                s = t.left,
                i = window.innerWidth - t.right,
                a = window.innerWidth < t.left + e.element.offsetWidth,
                l = a ? "right: " + i + "px;" : "left: " + s + "px;",
                o = n ? "bottom: " + (window.innerHeight - t.top) + "px;" : "top: " + t.bottom + "px;";
              a && i + e.element.offsetWidth > window.innerWidth && (l = "left: " + parseInt((window.innerWidth - e.element.offsetWidth) / 2) + "px;");
              var r = n ? t.top - e.viewportGap : window.innerHeight - t.bottom - e.viewportGap,
                d = e.element.getAttribute("style");
              d = d || "";
              e.element.setAttribute("style", d + l + o + "max-height:" + Math.floor(r) + "px;");
            })(t),
            Util.addClass(t.selectedTrigger, t.selectedTriggerClass))
          : t.selectedTrigger && (t.selectedTrigger.setAttribute("aria-expanded", "false"), n && Util.moveFocus(t.selectedTrigger), Util.removeClass(t.selectedTrigger, t.selectedTriggerClass), (t.selectedTrigger = !1));
    }
    function a(e) {
      e.firstFocusable ? e.firstFocusable.focus() : Util.moveFocus(e.element);
    }
    function l(e) {
      return e.offsetWidth || e.offsetHeight || e.getClientRects().length;
    }
    (n.prototype.togglePopover = function (e, t) {
      s(this, e, t);
    }),
      (n.prototype.checkPopoverClick = function (e) {
        !(function (e, t) {
          if (!e.popoverIsOpen) return;
          e.element.contains(t) || t.closest('[aria-controls="' + e.elementId + '"]') || s(e, !1);
        })(this, e);
      }),
      (n.prototype.checkPopoverFocus = function () {
        !(function (e) {
          if (!e.popoverIsOpen) return;
          var t = document.activeElement.closest(".js-popover");
          s(e, !1, t);
        })(this);
      }),
      (window.Popover = n);
    var i = document.getElementsByClassName("js-popover"),
      o = '[href], input:not([disabled]), select:not([disabled]), textarea:not([disabled]), button:not([disabled]), iframe, object, embed, [tabindex]:not([tabindex="-1"]), [contenteditable], audio[controls], video[controls], summary';
    if (0 < i.length) {
      for (var r = [], d = [], e = 0; e < i.length; e++)
        !(function (e) {
          r.push(new n(i[e]));
          var t = i[e].getAttribute("data-scrollable-element");
          t && !d.includes(t) && d.push(t);
        })(e);
      window.addEventListener("keyup", function (e) {
        ((e.keyCode && 27 == e.keyCode) || (e.key && "escape" == e.key.toLowerCase())) &&
          r.forEach(function (e) {
            e.checkPopoverFocus();
          });
      }),
        window.addEventListener("click", function (t) {
          r.forEach(function (e) {
            e.checkPopoverClick(t.target);
          });
        }),
        window.addEventListener("resize", function (e) {
          r.forEach(function (e) {
            e.togglePopover(!1, !1);
          });
        }),
        window.addEventListener("scroll", function (e) {
          r.forEach(function (e) {
            e.popoverIsOpen && e.togglePopover(!1, !1);
          });
        });
      for (var t = 0; t < d.length; t++) {
        var c = document.querySelector(d[t]);
        c &&
          c.addEventListener("scroll", function (e) {
            r.forEach(function (e) {
              e.popoverIsOpen && e.togglePopover(!1, !1);
            });
          });
      }
    }
  })(),
  (function () {
    var n = document.getElementsByClassName("js-pre-header");
    if (0 < n.length) {
      for (var s = 0; s < n.length; s++)
        !(function () {
          var t, e;
          (t = n[s]),
            (e = t.getElementsByClassName("js-pre-header__close-btn")[0]) &&
              e.addEventListener("click", function (e) {
                e.preventDefault(), Util.addClass(t, "pre-header--is-hidden");
              });
        })();
    }
  })(),
  (function () {
    function e(e) {
      var t;
      (this.element = e),
        (this.fill = this.element.getElementsByClassName("progress-bar__fill")[0]),
        (this.label = this.element.getElementsByClassName("progress-bar__value")),
        (this.value = a(this)),
        (t = this),
        m && t.element.removeAttribute("data-animation"),
        (this.animate = this.element.hasAttribute("data-animation") && "on" == this.element.getAttribute("data-animation")),
        (this.animationDuration = this.element.hasAttribute("data-duration") ? this.element.getAttribute("data-duration") : 1e3),
        (this.canAnimate = "IntersectionObserver" in window && "IntersectionObserverEntry" in window && "intersectionRatio" in window.IntersectionObserverEntry.prototype),
        (this.ariaLabel = this.element.getElementsByClassName("js-progress-bar__aria-value")),
        (this.changeColor = Util.hasClass(this.element, "progress-bar--color-update") && Util.cssSupports("color", "var(--color-value)")),
        this.changeColor &&
          (this.colorThresholds = (function (e) {
            var t = [],
              n = 1;
            for (; !isNaN(parseInt(getComputedStyle(e.element).getPropertyValue("--progress-bar-color-" + n))); ) t.push(parseInt(getComputedStyle(e.element).getPropertyValue("--progress-bar-color-" + n))), (n += 1);
            return t;
          })(this)),
        (function (i) {
          i.changeColor && n(i, i.value);
          i.animate &&
            i.canAnimate &&
            (function (e) {
              u(e, 0),
                new IntersectionObserver(
                  function (e, t) {
                    var n = this;
                    0 < e[0].intersectionRatio.toFixed(1) &&
                      !this.animationTriggered &&
                      l(this, 0, this.value, this.animationDuration, function () {
                        o(n, "progressCompleted", n.value + "%");
                      });
                  }.bind(e),
                  { threshold: [0, 0.1] }
                ).observe(e.element);
            })(i);
          setTimeout(function () {
            Util.addClass(i.element, "progress-bar--init");
          }, 30),
            i.element.addEventListener("updateProgress", function (e) {
              i.animationId && window.cancelAnimationFrame(i.animationId);
              var t = e.detail.value,
                n = e.detail.duration ? e.detail.duration : i.animationDuration,
                s = a(i);
              l(i, s, t, n, function () {
                o(i, "progressCompleted", i.value + "%"), 0 < i.ariaLabel.length && (i.ariaLabel[0].textContent = t + "%");
              });
            });
        })(this),
        (this.animationId = !1);
    }
    function a(e) {
      return parseFloat((100 * e.fill.offsetWidth) / e.element.getElementsByClassName("progress-bar__bg")[0].offsetWidth);
    }
    function l(s, i, a, l, o) {
      var r = a - i,
        d = null,
        c = function (e) {
          var t = e - (d = d || e),
            n = parseInt((t / l) * r + i);
          0 < r && a < n && (n = a), r < 0 && n < a && (n = a), l <= t && (n = a), u(s, n), t < l ? (s.animationId = window.requestAnimationFrame(c)) : ((s.animationId = !1), o());
        };
      window.requestAnimationFrame && !m ? (s.animationId = window.requestAnimationFrame(c)) : (u(s, a), o());
    }
    function u(e, t) {
      (e.fill.style.width = t + "%"), 0 < e.label.length && (e.label[0].textContent = t + "%"), e.changeColor && n(e, t);
    }
    function n(e, t) {
      for (var n, s, i = "progress-bar--fill-color-" + e.colorThresholds.length, a = e.colorThresholds.length; 0 < a; a--) !isNaN(e.colorThresholds[a - 1]) && t <= e.colorThresholds[a - 1] && (i = "progress-bar--fill-color-" + a);
      (s = (n = e).element.className.split(" ").filter(function (e) {
        return 0 !== e.lastIndexOf("progress-bar--fill-color-", 0);
      })),
        (n.element.className = s.join(" ").trim()),
        Util.addClass(e.element, i);
    }
    function o(e, t, n) {
      e.element.dispatchEvent(new CustomEvent(t, { detail: n }));
    }
    (e.prototype.setProgressBarValue = function (e) {
      u(this, e);
    }),
      (window.ProgressBar = e);
    var t = document.getElementsByClassName("js-progress-bar"),
      m = Util.osHasReducedMotion();
    if (0 < t.length) for (var s = 0; s < t.length; s++) new e(t[s]);
  })(),
  (function () {
    var n = function (e) {
      var t;
      (this.options = Util.extend(n.defaults, e)),
        (this.element = this.options.element),
        (this.chartArea = this.element.getElementsByClassName("js-radial-bar__area")[0]),
        (this.percentages = this.element.getElementsByClassName("js-radial-bar__value")),
        (this.chartDashStroke = []),
        (this.tooltip = this.chartArea.getElementsByClassName("js-radial-bar__tooltip")),
        (this.eventIds = []),
        (this.hoverId = !1),
        (this.hovering = !1),
        (this.selectedIndex = !1),
        (this.chartLoaded = !1),
        s((t = this)),
        (function (e) {
          if (!e.options.animate || e.chartLoaded || u || !c) return;
          new IntersectionObserver(
            function (e, t) {
              e[0].isIntersecting &&
                ((this.chartLoaded = !0),
                (function (a) {
                  var l = null,
                    o = a.element.getElementsByClassName("js-radial-bar__circle__fill"),
                    r = function (e) {
                      var t = e - (l = l || e);
                      600 < t && (t = 600);
                      for (var n = 0; n < a.percentages.length; n++) {
                        var s = Math.easeOutQuart(t, 0, a.chartDashStroke[n][0], 600),
                          i = a.chartDashStroke[n][2] - s;
                        o[n].setAttribute("stroke-dasharray", s + " " + i);
                      }
                      t < 600 && window.requestAnimationFrame(r);
                    };
                  window.requestAnimationFrame(r);
                })(this),
                t.unobserve(this.element));
            }.bind(e),
            { rootMargin: "0px 0px -200px 0px" }
          ).observe(e.element);
        })(t),
        (function (t) {
          function e() {
            var e;
            ((e = t).hovering = !1), e.eventIds && e.eventIds.hover && (e.chartArea.removeEventListener("mouseenter", e.eventIds.hover), e.chartArea.removeEventListener("mousedown", e.eventIds.hover), e.chartArea.removeEventListener("mousemove", e.eventIds.hover), e.chartArea.removeEventListener("mouseleave", e.eventIds.hover)), t.svg.remove(), s(t), i(t);
          }
          window.addEventListener("resize", function () {
            clearTimeout(t.eventIds.resize), (t.eventIds.resize = setTimeout(e, 300));
          });
        })(t);
    };
    function s(e) {
      var t, n, s;
      ((t = e).height = t.chartArea.clientHeight),
        (t.width = t.chartArea.clientWidth),
        (function (e) {
          (e.circleGap = parseInt(getComputedStyle(e.element).getPropertyValue("--radial-bar-gap"))), isNaN(e.circleGap) && (e.circleGap = 4);
          (e.circleStroke = parseInt(getComputedStyle(e.element).getPropertyValue("--radial-bar-bar-stroke"))), isNaN(e.circleStroke) && (e.circleStroke = 10);
        })(e),
        (s = '<svg xmlns="http://www.w3.org/2000/svg" aria-hidden="true" width="' + (n = e).width + '" height="' + n.height + '" class="radial-bar__svg js-radial-bar__svg"></svg>'),
        (n.chartArea.innerHTML = n.chartArea.innerHTML + s),
        (n.svg = n.chartArea.getElementsByClassName("js-radial-bar__svg")[0]),
        (function (e) {
          for (var t = 0; t < e.percentages.length; t++) {
            var n = document.createElementNS("http://www.w3.org/2000/svg", "g"),
              s = document.createElementNS("http://www.w3.org/2000/svg", "circle"),
              i = document.createElementNS("http://www.w3.org/2000/svg", "circle"),
              a = e.percentages[t].getAttribute("data-radial-bar-color");
            a = a || "";
            var l = e.height / 2 - (e.circleStroke + e.circleGap) * t - e.circleStroke,
              o = 2 * Math.PI * l,
              r = parseInt(e.percentages[t].textContent);
            e.chartDashStroke.push([(o * r) / 100, (o * (100 - r)) / 100, o]), Util.setAttributes(i, { cx: e.height / 2, cy: e.width / 2, r: l, class: "radial-bar__circle radial-bar__circle__bg", "data-index": t });
            var d = e.chartDashStroke[t][0] + " " + e.chartDashStroke[t][1];
            !e.chartLoaded && e.options.animate && c && !u && (d = "0 " + 2 * o), Util.setAttributes(s, { cx: e.height / 2, cy: e.width / 2, r: l, class: "radial-bar__circle radial-bar__circle__fill js-radial-bar__circle__fill " + a, "stroke-dasharray": d, "stroke-dashoffset": o / 4, "data-index": t }), n.setAttribute("class", "radial-bar__group"), n.appendChild(i), n.appendChild(s), e.svg.appendChild(n);
          }
        })(n),
        i(e);
    }
    function i(e) {
      e.tooltip.length < 1 ||
        ((e.eventIds.hover = function (e) {
          switch (e.type) {
            case "mouseenter":
            case "mousedown":
              a(this, e);
              break;
            case "mousemove":
              var t = this;
              t.hoverId = window.requestAnimationFrame
                ? window.requestAnimationFrame(function () {
                    a(t, e);
                  })
                : setTimeout(function () {
                    a(t, e);
                  });
              break;
            case "mouseleave":
              l(this);
          }
        }.bind(e)),
        e.chartArea.addEventListener("mouseenter", e.eventIds.hover),
        e.chartArea.addEventListener("mousedown", e.eventIds.hover),
        e.chartArea.addEventListener("mousemove", e.eventIds.hover),
        e.chartArea.addEventListener("mouseleave", e.eventIds.hover));
    }
    function a(e, t) {
      var n, s, i;
      e.hovering || (!(e.hovering = !0) !== (n = "circle" == (s = t).target.tagName.toLowerCase() && parseInt(s.target.getAttribute("data-index"))) && n !== e.selectedIndex ? ((e.selectedIndex = n), ((i = e).tooltip[0].textContent = i.percentages[i.selectedIndex].textContent), Util.removeClass(e.tooltip[0], "is-hidden")) : !1 === n && l(e), (e.hovering = !1));
    }
    function l(e) {
      e.hoverId && (window.requestAnimationFrame ? window.cancelAnimationFrame(e.hoverId) : clearTimeout(e.hoverId), (e.hoverId = !1)), Util.addClass(e.tooltip[0], "is-hidden"), (e.hovering = !1), (e.selectedIndex = !1);
    }
    (n.defaults = { element: "", animate: !1 }), (window.RadialBar = n);
    var e,
      t,
      o = document.getElementsByClassName("js-radial-bar"),
      c = "IntersectionObserver" in window && "IntersectionObserverEntry" in window && "intersectionRatio" in window.IntersectionObserverEntry.prototype,
      u = Util.osHasReducedMotion();
    if (0 < o.length) for (var r = 0; r < o.length; r++) (t = void 0), (t = !(!o[(e = r)].getAttribute("data-radial-bar-animation") || "on" != o[e].getAttribute("data-radial-bar-animation"))), new n({ element: o[e], animate: t });
  })(),
  (function () {
    function e(e) {
      (this.element = e), (this.icons = this.element.getElementsByClassName("js-rating__control")[0]), (this.iconCode = this.icons.children[0].parentNode.innerHTML), (this.initialRating = []), (this.initialRatingElement = this.element.getElementsByClassName("js-rating__value")[0]), this.ratingItems, this.selectedRatingItem, (this.readOnly = Util.hasClass(this.element, "js-rating--read-only")), (this.ratingMaxValue = 5), this.getInitialRating(), this.initRatingHtml();
    }
    (e.prototype.getInitialRating = function () {
      var e, t;
      this.initialRatingElement && this.readOnly ? ((e = Number(this.initialRatingElement.textContent)), isNaN(e) ? (this.initialRating = [0, !1]) : ((t = Math.floor(e)), (this.initialRating[0] = t < e ? t + 1 : t), (this.initialRating[1] = t < e && Math.round(100 * (e - t))))) : (this.initialRating = [0, !1]);
    }),
      (e.prototype.initRatingHtml = function () {
        var e = this.readOnly ? "<ul>" : '<ul role="radiogroup">';
        0 != this.initialRating[0] || this.initialRating[1] || (e += '<li class="rating__item--zero rating__item--checked"></li>');
        for (var t, n = 0; n < this.ratingMaxValue; n++) e += this.getStarHtml(n);
        (e += "</ul>"),
          this.readOnly || (0 < (t = this.element.getElementsByTagName("label")).length && ((e = "<fieldset>" + ('<legend class="' + t[0].getAttribute("class") + '">' + t[0].textContent + "</legend>") + e + "</fieldset>"), Util.addClass(t[0], "is-hidden"))),
          (this.icons.innerHTML = e),
          (this.ratingItems = this.icons.getElementsByClassName("js-rating__item")),
          (this.selectedRatingItem = this.icons.getElementsByClassName("rating__item--checked")[0]),
          Util.removeClass(this.icons, "rating__control--is-hidden"),
          this.readOnly || this.initRatingEvents();
      }),
      (e.prototype.getStarHtml = function (e) {
        var t = e + 1 == this.initialRating[0],
          n = t ? " rating__item--checked" : "",
          s = t || (0 == this.initialRating[0] && !this.initialRating[1] && 0 == e) ? 0 : -1,
          i = !(!t || !this.initialRating[1]),
          a = i ? " rating__item--half" : "";
        return this.readOnly ? '<li class="js-rating__item' + n + a + '">' + (i ? '<div class="rating__icon">' + this.iconCode + '</div><div class="rating__icon rating__icon--inactive">' + this.iconCode + "</div>" : '<div class="rating__icon">' + this.iconCode + "</div>") + "</li>" : '<li class="js-rating__item' + n + a + '" role="radio" aria-label="' + (e + 1) + '" aria-checked="' + t + '" tabindex="' + s + '"><div class="rating__icon">' + this.iconCode + "</div></li>";
      }),
      (e.prototype.initRatingEvents = function () {
        var n = this;
        this.icons.addEventListener("click", function (e) {
          var t = e.target.closest(".js-rating__item");
          n.resetSelectedIcon(t);
        }),
          this.icons.addEventListener("keydown", function (e) {
            (e.keyCode && (39 == e.keyCode || 40 == e.keyCode)) || (e.key && ("arrowright" == e.key.toLowerCase() || "arrowdown" == e.key.toLowerCase())) ? n.selectNewIcon("next") : (e.keyCode && (37 == e.keyCode || 38 == e.keyCode)) || (e.key && ("arrowleft" == e.key.toLowerCase() || "arrowup" == e.key.toLowerCase())) ? n.selectNewIcon("prev") : ((e.keyCode && 32 == e.keyCode) || (e.key && " " == e.key)) && n.selectFocusIcon();
          });
      }),
      (e.prototype.selectNewIcon = function (e) {
        var t = Util.getIndexInArray(this.ratingItems, this.selectedRatingItem);
        (t = "next" == e ? t + 1 : t - 1) < 0 && (t = this.ratingItems.length - 1), t >= this.ratingItems.length && (t = 0), this.resetSelectedIcon(this.ratingItems[t]), this.ratingItems[t].focus();
      }),
      (e.prototype.selectFocusIcon = function (e) {
        this.resetSelectedIcon(document.activeElement);
      }),
      (e.prototype.resetSelectedIcon = function (e) {
        var t;
        e && (Util.removeClass(this.selectedRatingItem, "rating__item--checked"), Util.setAttributes(this.selectedRatingItem, { "aria-checked": !1, tabindex: -1 }), Util.addClass(e, "rating__item--checked"), Util.setAttributes(e, { "aria-checked": !0, tabindex: 0 }), (this.selectedRatingItem = e), 0 < (t = this.element.getElementsByTagName("select")).length && (t[0].value = e.getAttribute("aria-label")));
      });
    var t = document.getElementsByClassName("js-rating");
    if (0 < t.length) for (var n = 0; n < t.length; n++) new e(t[n]);
  })(),
  (function () {
    function e(e) {
      var t;
      (this.element = e),
        (this.moreContent = this.element.getElementsByClassName("js-read-more__content")),
        (this.count = this.element.getAttribute("data-characters") || 200),
        (this.counting = 0),
        (this.btnClasses = this.element.getAttribute("data-btn-class")),
        (this.ellipsis = !this.element.getAttribute("data-ellipsis") || "off" != this.element.getAttribute("data-ellipsis")),
        (this.btnShowLabel = "Read more"),
        (this.btnHideLabel = "Read less"),
        (this.toggleOff = !this.element.getAttribute("data-toggle") || "off" != this.element.getAttribute("data-toggle")),
        0 == this.moreContent.length &&
          (function e(t, n) {
            if (n.counting >= n.count) return Util.addClass(t, "js-read-more__content"), t.outerHTML;
            var s = t.childNodes;
            var i = "";
            for (var a = 0; a < s.length; a++) s[a].nodeType == Node.TEXT_NODE ? (i += l(s[a], n)) : (i += e(s[a], n));
            t.innerHTML = i;
            return t.outerHTML;
          })((t = this).element, t),
        (function (e) {
          var t = e.element.getAttribute("data-btn-labels");
          {
            var n;
            t && ((n = t.split(",")), (e.btnShowLabel = n[0].trim()), (e.btnHideLabel = n[1].trim()));
          }
        })(this),
        (function (e) {
          if (((e.moreContent = e.element.getElementsByClassName("js-read-more__content")), 0 == e.moreContent.length)) return Util.addClass(e.element, "read-more--loaded");
          var t = ' <button class="js-read-more__btn ' + e.btnClasses + '">' + e.btnShowLabel + "</button>",
            n = ' <button class="js-read-more__btn is-hidden ' + e.btnClasses + '">' + e.btnHideLabel + "</button>";
          e.ellipsis && (t = '<span class="js-read-more__ellipsis" aria-hidden="true">...</span>' + t);
          e.moreContent[e.moreContent.length - 1].insertAdjacentHTML("afterend", n),
            e.moreContent[0].insertAdjacentHTML("afterend", t),
            (function (e) {
              for (var t = 0; t < e.moreContent.length; t++) Util.addClass(e.moreContent[t], "is-hidden");
              Util.addClass(e.element, "read-more--loaded");
            })(e),
            (function (t) {
              (t.btnToggle = t.element.getElementsByClassName("js-read-more__btn")),
                (t.ellipsis = t.element.getElementsByClassName("js-read-more__ellipsis")),
                t.btnToggle[0].addEventListener("click", function (e) {
                  e.preventDefault(), s(t, !0);
                }),
                t.btnToggle[1].addEventListener("click", function (e) {
                  e.preventDefault(), s(t, !1);
                });
            })(e);
        })(this);
    }
    function l(e, t) {
      var n = e.textContent;
      if (0 == n.replace(/\s/g, "").length) return "";
      if (t.counting >= t.count) return '<span class="js-read-more__content">' + n + "</span>";
      if (t.counting + n.length < t.count) return (t.counting = t.counting + n.length), n;
      var s = (s = n.substr(0, t.count - t.counting)).substr(0, Math.min(s.length, s.lastIndexOf(" "))),
        i = n.substr(s.length, n.length);
      return (t.counting = t.count), s + '<span class="js-read-more__content">' + i + "</span>";
    }
    function s(e, t) {
      for (var n, s, i, a = 0; a < e.moreContent.length; a++) Util.toggleClass(e.moreContent[a], "is-hidden", !t);
      Util.toggleClass(e.btnToggle[0], "is-hidden", t), Util.toggleClass(e.btnToggle[1], "is-hidden", !t), 0 < e.ellipsis.length && Util.toggleClass(e.ellipsis[0], "is-hidden", t), e.toggleOff || Util.addClass(e.btn, "is-hidden"), t ? ((n = e.moreContent[0].getAttribute("tabindex")), Util.moveFocus(e.moreContent[0]), (s = e.moreContent[0]), (i = n), parseInt(s.getAttribute("tabindex")) < 0 && ((s.style.outline = "none"), i || s.removeAttribute("tabindex"))) : Util.moveFocus(e.btnToggle[0]);
    }
    var t = document.getElementsByClassName("js-read-more");
    if (0 < t.length) for (var n = 0; n < t.length; n++) new e(t[n]);
  })(),
  (function () {
    var t,
      n,
      s,
      i,
      a = document.getElementsByClassName("js-reading-progressbar")[0],
      l = document.getElementsByClassName("js-reading-content")[0];
    function o() {
      if (((t.top = l.getBoundingClientRect().top), t.height <= t.window)) return Util.removeClass(a, t.class), void (n = !1);
      Util.addClass(a, t.class);
      var e = 0 <= t.top ? 0 : (100 * (0 - t.top)) / (t.height - t.window);
      a.setAttribute("value", e), !i && s && (s.style.width = e + "%"), (n = !1);
    }
    function r() {
      n ||
        ((n = !0),
        window.requestAnimationFrame
          ? window.requestAnimationFrame(e)
          : setTimeout(function () {
              e();
            }, 250));
    }
    function e() {
      (t.height = l.offsetHeight), (t.window = window.innerHeight), o();
    }
    a &&
      l &&
      ((n = !(t = [])),
      (s = a.getElementsByClassName("js-reading-progressbar__fallback")[0]),
      (i = "value" in a),
      (t.height = l.offsetHeight),
      (t.top = l.getBoundingClientRect().top),
      (t.window = window.innerHeight),
      (t.class = "reading-progressbar--is-active"),
      o(),
      document.fonts &&
        document.fonts.ready.then(function () {
          r();
        }),
      window.addEventListener("resize", function (e) {
        r();
      }),
      window.addEventListener("scroll", function (e) {
        n ||
          ((n = !0),
          window.requestAnimationFrame
            ? window.requestAnimationFrame(o)
            : setTimeout(function () {
                o();
              }, 250));
      }));
  })(),
  (function () {
    function e(e) {
      var t, n;
      (this.element = e),
        (this.triggers = document.querySelectorAll('[aria-controls="' + this.element.getAttribute("id") + '"]')),
        (this.firstFocusable = null),
        (this.lastFocusable = null),
        (this.selectedTrigger = null),
        (this.showClass = "sidebar--is-visible"),
        (this.staticClass = "sidebar--static"),
        (this.customStaticClass = ""),
        (this.readyClass = "sidebar--loaded"),
        (this.layout = !1),
        (n = (t = this).element.getAttribute("data-static-class")) && (t.customStaticClass = " " + n),
        (function (s) {
          if (
            ((function (t) {
              var e = getComputedStyle(t.element, ":before").getPropertyValue("content");
              e &&
                "" != e &&
                "none" != e &&
                (l(t),
                t.element.addEventListener("update-sidebar", function (e) {
                  l(t);
                }));
              Util.addClass(t.element, t.readyClass);
            })(s),
            s.triggers)
          )
            for (var e = 0; e < s.triggers.length; e++)
              s.triggers[e].addEventListener("click", function (e) {
                return (
                  e.preventDefault(),
                  Util.hasClass(s.element, s.showClass)
                    ? ((s.selectedTrigger = e.target), void i(s))
                    : ((s.selectedTrigger = e.target),
                      (t = s),
                      Util.addClass(t.element, t.showClass),
                      (function (e) {
                        var t = e.element.querySelectorAll('[href], input:not([disabled]), select:not([disabled]), textarea:not([disabled]), button:not([disabled]), iframe, object, embed, [tabindex]:not([tabindex="-1"]), [contenteditable], audio[controls], video[controls], summary');
                        (function (e, t) {
                          for (var n = 0; n < t.length; n++) if (t[n].offsetWidth || t[n].offsetHeight || t[n].getClientRects().length) return (e.firstFocusable = t[n]);
                        })(e, t),
                          (function (e, t) {
                            for (var n = t.length - 1; 0 <= n; n--) if (t[n].offsetWidth || t[n].offsetHeight || t[n].getClientRects().length) return (e.lastFocusable = t[n]);
                          })(e, t);
                      })(t),
                      Util.moveFocus(t.element),
                      (n = s).element.addEventListener("keydown", a.bind(n)),
                      void n.element.addEventListener("click", a.bind(n)))
                );
                var t, n;
              });
        })(this);
    }
    function i(e) {
      var t;
      Util.removeClass(e.element, e.showClass), (e.firstFocusable = null), (e.lastFocusable = null), e.selectedTrigger && e.selectedTrigger.focus(), e.element.removeAttribute("tabindex"), (t = e).element.removeEventListener("keydown", a.bind(t)), t.element.removeEventListener("click", a.bind(t));
    }
    function a(e) {
      switch (e.type) {
        case "click":
          !(function (e, t) {
            if (!t.target.closest(".js-sidebar__close-btn") && !Util.hasClass(t.target, "js-sidebar")) return;
            t.preventDefault(), i(e);
          })(this, e);
        case "keydown":
          (t = this),
            ((n = e).keyCode && 27 == n.keyCode) || (n.key && "Escape" == n.key)
              ? i(t)
              : ((n.keyCode && 9 == n.keyCode) || (n.key && "Tab" == n.key)) &&
                (function (e, t) {
                  e.firstFocusable == document.activeElement && t.shiftKey && (t.preventDefault(), e.lastFocusable.focus());
                  e.lastFocusable != document.activeElement || t.shiftKey || (t.preventDefault(), e.firstFocusable.focus());
                })(t, n);
      }
      var t, n;
    }
    function l(e) {
      var t = getComputedStyle(e.element, ":before").getPropertyValue("content").replace(/\'|"/g, "");
      t != e.layout &&
        ("static" != (e.layout = t) && Util.addClass(e.element, "is-hidden"),
        Util.toggleClass(e.element, e.staticClass + e.customStaticClass, "static" == t),
        "static" != t &&
          setTimeout(function () {
            Util.removeClass(e.element, "is-hidden");
          }),
        "static" == t ? e.element.removeAttribute("role", "alertdialog") : e.element.setAttribute("role", "alertdialog"),
        "static" == t && Util.hasClass(e.element, e.showClass) && i(e));
    }
    var t = document.getElementsByClassName("js-sidebar");
    if (0 < t.length) {
      for (var n = 0; n < t.length; n++) new e(t[n]);
      var s = new CustomEvent("update-sidebar");
      function o() {
        for (var e = 0; e < t.length; e++) t[e].dispatchEvent(s);
      }
      window.addEventListener("resize", function (e) {
        window.requestAnimationFrame
          ? window.requestAnimationFrame(o)
          : setTimeout(function () {
              o();
            }, 250);
      });
    }
  })(),
  (function () {
    var e,
      i = document.getElementsByClassName("reveal-fx"),
      t = "IntersectionObserver" in window && "IntersectionObserverEntry" in window && "intersectionRatio" in window.IntersectionObserverEntry.prototype;
    if (0 < i.length) {
      if (Util.osHasReducedMotion() || !t)
        return (function () {
          for (; i[0]; ) {
            var e = i[0].className.split(" ").filter(function (e) {
              return 0 !== e.lastIndexOf("reveal-fx--", 0);
            });
            (i[0].className = e.join(" ").trim()), Util.removeClass(i[0], "reveal-fx");
          }
        })();
      if (((e = i[0]), "reveal-fx" != window.getComputedStyle(e, "::before").getPropertyValue("content").replace(/'|"/g, "")))
        return (function () {
          for (var e = 0; e < i.length; e++) Util.addClass(i[e], "reveal-fx--is-visible");
        })();
      var a = window.innerHeight,
        l = !1,
        o = [],
        n = (function () {
          for (var e = [], t = 0; t < i.length; t++) e.push(i[t].getAttribute("data-reveal-fx-delay") ? parseInt(i[t].getAttribute("data-reveal-fx-delay")) : 0);
          return e;
        })(),
        r = (function () {
          for (var e = [], t = 0; t < i.length; t++) e.push(i[t].getAttribute("data-reveal-fx-delta") ? parseInt(i[t].getAttribute("data-reveal-fx-delta")) : 200);
          return e;
        })();
      window.addEventListener("load", u), window.addEventListener("resize", d);
      var s = [];
      function d() {
        l ||
          ((l = !0),
          window.requestAnimationFrame
            ? window.requestAnimationFrame(c)
            : setTimeout(function () {
                c();
              }, 250));
      }
      function c() {
        (a = window.innerHeight), u();
      }
      function u() {
        for (var e, t, n, s = 0; s < i.length; s++) (e = s), (n = t = void 0), -1 == o.indexOf(e) && ((t = i[e]), (n = e), t.getBoundingClientRect().top <= a - r[n] && (m(e), o.push(e)));
        h(), (l = !1);
      }
      function m(e) {
        n[e] && 0 != n[e]
          ? setTimeout(function () {
              Util.addClass(i[e], "reveal-fx--is-visible");
            }, n[e])
          : Util.addClass(i[e], "reveal-fx--is-visible");
      }
      function h() {
        i.length > o.length || (window.removeEventListener("load", u), window.removeEventListener("resize", d));
      }
      !(function () {
        for (var e = 0; e < i.length; e++)
          (s[e] = new IntersectionObserver(
            function (e, t) {
              e[0].isIntersecting &&
                ((function (e) {
                  var t = Util.getIndexInArray(i, e);
                  if (-1 != o.indexOf(t)) return;
                  m(t), o.push(t), h(), (l = !1);
                })(e[0].target),
                t.unobserve(e[0].target));
            },
            { rootMargin: "0px 0px -" + r[e] + "px 0px" }
          )),
            s[e].observe(i[e]);
      })();
    }
  })(),
  (function () {
    function e(e) {
      var t;
      (this.element = e),
        (this.scrollingFn = !1),
        (this.scrolling = !1),
        (this.resetOpacity = !1),
        a((t = this)),
        (function (e) {
          var t = document.createElement("div");
          t.setAttribute("aria-hidden", "true"), e.element.parentElement.insertBefore(t, e.element), (e.prevElement = e.element.previousElementSibling), (e.prevElement.style.opacity = "0"), n(e);
        })(t),
        t.element.addEventListener("update-reveal-section", function () {
          a(t), n(t);
        }),
        s.bind(t)(),
        new IntersectionObserver(
          function (e, t) {
            if (e[0].isIntersecting) {
              if (this.scrollingFn) return;
              !(function (e) {
                (e.scrollingFn = function () {
                  if (this.scrolling) return;
                  (this.scrolling = !0), window.requestAnimationFrame(s.bind(this));
                }.bind(e)),
                  window.addEventListener("scroll", e.scrollingFn);
              })(this);
            } else {
              if (!this.scrollingFn) return;
              window.removeEventListener("scroll", this.scrollingFn), i(this, 0), (this.scrollingFn = !1);
            }
          }.bind(t)
        ).observe(t.prevElement);
    }
    function n(e) {
      e.prevElementTop = e.prevElement.getBoundingClientRect().top + window.scrollY;
    }
    function s() {
      var e;
      this.prevElementTop - window.scrollY < window.innerHeight && (0 < (e = (1 - (window.innerHeight + window.scrollY - this.prevElementTop) / window.innerHeight).toFixed(2)) ? ((this.resetOpacity = !1), i(this, e)) : this.resetOpacity || ((this.resetOpacity = !0), i(this, 0))), (this.scrolling = !1);
    }
    function i(e, t) {
      e.element.style.setProperty("--reavealing-section-overlay-opacity", t);
    }
    function a(e) {
      var t = window.innerHeight - e.element.offsetHeight;
      0 < t && (t = 0), (e.element.style.bottom = t + "px");
    }
    var t = document.getElementsByClassName("js-revealing-section"),
      l = Util.cssSupports("position", "sticky") || Util.cssSupports("position", "-webkit-sticky");
    if (0 < t.length && l) {
      for (var o = [], r = 0; r < t.length; r++) o.push(new e(t[r]));
      var d = !1,
        c = new CustomEvent("update-reveal-section");
      function u() {
        for (var e = 0; e < o.length; e++) o[e].element.dispatchEvent(c);
      }
      window.addEventListener("resize", function () {
        clearTimeout(d), (d = setTimeout(u, 100));
      }),
        (document.fonts.onloadingdone = function (e) {
          u();
        });
    }
  })(),
  (function () {
    function e(e) {
      var t;
      (this.element = e),
        (this.headerRows = this.element.getElementsByTagName("thead")[0].getElementsByTagName("th")),
        (this.tableRows = this.element.getElementsByTagName("tbody")[0].getElementsByTagName("tr")),
        (this.collapsedLayoutClass = "row-table--collapsed"),
        (this.mainRowCellClass = "row-table__th-inner"),
        n((t = this)),
        (function (e) {
          for (var t = 0; t < e.tableRows.length; t++) {
            for (var n, s = "", i = e.tableRows[t].getElementsByClassName("row-table__cell"), a = 0; a < i.length; a++) {
              0 == a ? (Util.addClass(i[a], "js-" + e.mainRowCellClass), 0 < (n = i[a].getElementsByClassName("row-table__th-inner")).length && (n[0].innerHTML = n[0].innerHTML + '<i class="row-table__th-icon" aria-hidden="true"></i>')) : (s = s + '<li class="row-table__item"><span class="row-table__label">' + e.headerRows[a].innerHTML + ":</span><span>" + i[a].innerHTML + "</span></li>");
            }
            (s = '<ul class="row-table__list" aria-hidden="true">' + s + "</ul>"), (i[0].innerHTML = '<input type="text" class="row-table__input" aria-hidden="true">' + i[0].innerHTML + s);
          }
        })(t),
        t.element.addEventListener("update-row-table", function (e) {
          n(t);
        }),
        t.element.addEventListener("click", function (e) {
          s(t, e);
        }),
        t.element.addEventListener("keydown", function (e) {
          ((e.keyCode && 13 == e.keyCode) || (e.key && "enter" == e.key.toLowerCase())) && s(t, e);
        });
    }
    function n(e) {
      var t = getComputedStyle(e.element, ":before").getPropertyValue("content").replace(/\'|"/g, "");
      Util.toggleClass(e.element, e.collapsedLayoutClass, "expanded" == t);
    }
    function s(e, t) {
      var n;
      t.target.closest(".js-" + e.mainRowCellClass) && !t.target.closest(".row-table__list") && ((n = t.target.closest(".js-" + e.mainRowCellClass)), Util.toggleClass(n, "row-table__cell--show-list", !Util.hasClass(n, "row-table__cell--show-list")));
    }
    var t = document.getElementsByClassName("js-row-table");
    if (0 < t.length) {
      for (var i, a, l = 0, o = [], r = 0; r < t.length; r++) {
        var d = getComputedStyle(t[r], ":before").getPropertyValue("content");
        d && "" != d && "none" != d && (o.push(new e(t[r])), (l += 1));
      }
      function c() {
        for (var e = 0; e < o.length; e++) o[e].element.dispatchEvent(a);
      }
      0 < l &&
        ((i = !1),
        (a = new CustomEvent("update-row-table")),
        window.addEventListener("resize", function (e) {
          clearTimeout(i), (i = setTimeout(c, 300));
        }),
        window.requestAnimationFrame ? window.requestAnimationFrame(c) : c());
    }
  })(),
  (function () {
    function e(e) {
      var t;
      (this.element = e),
        (this.controller = this.element.getElementsByClassName("js-sidenav-v2__control")),
        (this.staticLayoutClass = "sidenav-v2--static"),
        (this.expandedClass = "sidenav-v2--expanded"),
        (this.isStatic = Util.hasClass(this.element, this.staticLayoutClass)),
        (this.layout = "static"),
        (this.customStatic = this.element.getAttribute("data-static-class")),
        (this.sideNavItems = this.element.getElementsByClassName("js-sidenav-v2__link")),
        n((t = this)),
        t.element.addEventListener("update-side-nav-v2", function (e) {
          n(t);
        }),
        (function (n) {
          if (n.controller.length < 1) return;
          n.controller[0].addEventListener("click", function (e) {
            var t = Util.hasClass(n.element, n.expandedClass);
            s(n, t);
          }),
            n.element.addEventListener("keydown", function (e) {
              "static" != n.layout && ((e.keyCode && 27 == e.keyCode) || (e.key && "escape" == e.key.toLowerCase())) && (s(n, !0), n.controller[0].focus());
            });
        })(t);
    }
    function s(e, t) {
      Util.toggleClass(e.element, e.expandedClass, !t), t ? e.controller[0].removeAttribute("aria-expanded") : e.controller[0].setAttribute("aria-expanded", "true"), !t && 0 < e.sideNavItems.length && e.sideNavItems[0].focus();
    }
    function n(e) {
      e.isStatic || ((e.layout = getComputedStyle(e.element, ":before").getPropertyValue("content").replace(/\'|"/g, "")), Util.toggleClass(e.element, e.staticLayoutClass, "static" == e.layout), e.customStatic && Util.toggleClass(e.element, e.customStatic, "static" == e.layout));
    }
    var t = document.getElementsByClassName("js-sidenav-v2");
    if (0 < t.length) {
      for (var i = [], a = 0; a < t.length; a++) i.push(new e(t[a]));
      var l = !1,
        o = new CustomEvent("update-side-nav-v2");
      function r() {
        for (var e = 0; e < i.length; e++) i[e].element.dispatchEvent(o);
      }
      window.addEventListener("resize", function (e) {
        clearTimeout(l), (l = setTimeout(r, 300));
      }),
        window.requestAnimationFrame ? window.requestAnimationFrame(r) : r();
    }
  })(),
  (function () {
    var e = document.getElementsByClassName("js-sidenav");
    if (0 < e.length)
      for (var t = 0; t < e.length; t++)
        e[t].addEventListener("click", function (e) {
          var t,
            n,
            s = e.target.closest(".js-sidenav__sublist-control");
          s && ((t = s.parentElement), (n = Util.hasClass(t, "sidenav__item--expanded")), s.setAttribute("aria-expanded", !n), Util.toggleClass(t, "sidenav__item--expanded", !n));
        });
  })(),
  (function () {
    var e = document.getElementsByClassName("skip-link");
    if (0 < e.length)
      for (var t = 0; t < e.length; t++)
        !(function (e) {
          e.addEventListener("focusin", function () {
            Util.addClass(e, "skip-link--focus");
          }),
            e.addEventListener("focusout", function () {
              Util.removeClass(e, "skip-link--focus");
            });
        })(e[t]);
  })(),
  (function () {
    function e(e) {
      (this.element = e),
        (this.rangeWrapper = this.element.getElementsByClassName("slider__range")),
        (this.rangeInput = this.element.getElementsByClassName("slider__input")),
        (this.value = this.element.getElementsByClassName("js-slider__value")),
        (this.floatingValue = this.element.getElementsByClassName("js-slider__value--floating")),
        (this.rangeMin = this.rangeInput[0].getAttribute("min")),
        (this.rangeMax = this.rangeInput[0].getAttribute("max")),
        (this.sliderWidth = window.getComputedStyle(this.element.getElementsByClassName("slider__range")[0]).getPropertyValue("width")),
        (this.thumbWidth = getComputedStyle(this.element).getPropertyValue("--slide-thumb-size")),
        (this.isInputVar = "input" == this.value[0].tagName.toLowerCase()),
        (this.isFloatingVar = 0 < this.floatingValue.length),
        this.isFloatingVar && (this.floatingValueLeft = window.getComputedStyle(this.floatingValue[0]).getPropertyValue("left")),
        (function (n) {
          i(n),
            a(n, !1),
            l(n, !1),
            (function (e) {
              var t = document.createElement("input");
              t.setAttribute("type", "range"), Util.toggleClass(e.element, "slider--range-not-supported", "range" !== t.type);
            })(n);
          for (var e = 0; e < n.rangeInput.length; e++)
            !(function (t) {
              n.rangeInput[t].addEventListener("input", function (e) {
                s(n, t);
              }),
                n.rangeInput[t].addEventListener("change", function (e) {
                  s(n, t);
                });
            })(e);
          if (n.isInputVar)
            for (e = 0; e < n.value.length; e++)
              !(function (t) {
                n.value[t].addEventListener("change", function (e) {
                  !(function (e, t) {
                    var n = parseFloat(e.value[t].value);
                    {
                      if (isNaN(n)) return (e.value[t].value = e.rangeInput[t].value);
                      n < e.rangeMin && (n = e.rangeMin), n > e.rangeMax && (n = e.rangeMax), (e.rangeInput[t].value = n);
                      var s = new Event("change");
                      e.rangeInput[t].dispatchEvent(s);
                    }
                  })(n, t);
                });
              })(e);
          n.element.addEventListener("slider-updated", function (e) {
            for (var t = 0; t < n.value.length; t++) s(n, t);
          }),
            n.element.addEventListener("inputRangeLimit", function (e) {
              i(n), a(n, e.detail);
            });
        })(this);
    }
    function s(e, t) {
      i(e), a(e, t), l(e, t);
    }
    function i(e) {
      for (var t = 0; t < e.rangeInput.length; t++) e.isInputVar ? (e.value[t].value = e.rangeInput[t].value) : (e.value[t].textContent = e.rangeInput[t].value);
    }
    function a(e, t) {
      if (e.isFloatingVar)
        for (var n = t || 0, s = t ? t + 1 : e.rangeInput.length, i = n; i < s; i++) {
          var a = (e.rangeInput[i].value - e.rangeMin) / (e.rangeMax - e.rangeMin);
          e.floatingValue[i].style.left = "calc(0.5 * " + e.floatingValueLeft + " + " + a + " * ( " + e.sliderWidth + " - " + e.floatingValueLeft + " ))";
        }
    }
    function l(e, t) {
      var n, s, i;
      1 < e.rangeInput.length
        ? e.element.dispatchEvent(new CustomEvent("updateRange", { detail: t }))
        : ((s = "calc(" + (n = parseInt(((e.rangeInput[0].value - e.rangeMin) / (e.rangeMax - e.rangeMin)) * 100)) + "*(" + e.sliderWidth + " - 0.5*" + e.thumbWidth + ")/100)"), (i = "calc(" + e.sliderWidth + " - " + n + "*(" + e.sliderWidth + " - 0.5*" + e.thumbWidth + ")/100)"), e.rangeWrapper[0].style.setProperty("--slider-fill-value", s), e.rangeWrapper[0].style.setProperty("--slider-empty-value", i));
    }
    var t = document.getElementsByClassName("js-slider");
    if (0 < t.length) for (var n = 0; n < t.length; n++) new e(t[n]);
  })(),
  (function () {
    function e(e) {
      (this.element = e), (this.scrollDuration = parseInt(this.element.getAttribute("data-duration")) || 300), (this.dataElement = this.element.getAttribute("data-scrollable-element") || this.element.getAttribute("data-element")), (this.scrollElement = this.dataElement ? document.querySelector(this.dataElement) : window), this.initScroll();
    }
    (e.prototype.initScroll = function () {
      var o = this;
      this.element.addEventListener("click", function (e) {
        e.preventDefault();
        var t = e.target.closest(".js-smooth-scroll").getAttribute("href").replace("#", ""),
          n = document.getElementById(t),
          s = n.getAttribute("tabindex"),
          i = o.scrollElement.scrollTop || document.documentElement.scrollTop;
        o.dataElement || (i = window.scrollY || document.documentElement.scrollTop);
        var a = !!o.dataElement && o.scrollElement,
          l = o.getFixedElementHeight();
        Util.scrollTo(
          n.getBoundingClientRect().top + i - l,
          o.scrollDuration,
          function () {
            Util.moveFocus(n), history.pushState(!1, !1, "#" + t), o.resetTarget(n, s);
          },
          a
        );
      });
    }),
      (e.prototype.resetTarget = function (e, t) {
        parseInt(e.getAttribute("tabindex")) < 0 && ((e.style.outline = "none"), t || e.removeAttribute("tabindex"));
      }),
      (e.prototype.getFixedElementHeight = function () {
        var e,
          t = parseInt(getComputedStyle(document.documentElement).getPropertyValue("scroll-padding"));
        return isNaN(t) && ((t = 0), (e = document.querySelector(this.element.getAttribute("data-fixed-element"))) && (t = parseInt(e.getBoundingClientRect().height))), t;
      });
    var t = document.getElementsByClassName("js-smooth-scroll");
    if (0 < t.length && !Util.cssSupports("scroll-behavior", "smooth") && window.requestAnimationFrame) for (var n = 0; n < t.length; n++) new e(t[n]);
  })(),
  (function () {
    function e(s) {
      s.addEventListener("click", function (e) {
        e.preventDefault();
        var t = s.getAttribute("data-social"),
          n = (function (e, t) {
            for (
              var n = (function (e) {
                  var t = [];
                  switch (e) {
                    case "twitter":
                      t = ["text", "hashtags"];
                      break;
                    case "facebook":
                    case "linkedin":
                      t = ["url"];
                      break;
                    case "pinterest":
                      t = ["url", "media", "description"];
                      break;
                    case "mail":
                      t = ["subject", "body"];
                  }
                  return t;
                })(t),
                s = "",
                i = 0;
              i < n.length;
              i++
            ) {
              var a = e.getAttribute("data-" + n[i]);
              "hashtags" == n[i] && (a = encodeURI(a.replace(/\#| /g, ""))), a && (s = "facebook" == t ? s + "u=" + encodeURIComponent(a) + "&" : s + n[i] + "=" + encodeURIComponent(a) + "&");
            }
            "linkedin" == t && (s = "mini=true&" + s);
            return e.getAttribute("href") + "?" + s;
          })(s, t);
        "mail" == t ? (window.location.href = n) : window.open(n, t + "-share-dialog", "width=626,height=436");
      });
    }
    var t = document.getElementsByClassName("js-social-share");
    if (0 < t.length) for (var n = 0; n < t.length; n++) e(t[n]);
  })(),
  (function () {
    function e(e) {
      var t, n;
      (this.element = e),
        (this.items = this.element.getElementsByClassName("js-stack-cards__item")),
        (this.scrollingFn = !1),
        (this.scrolling = !1),
        s((t = this)),
        new IntersectionObserver(
          function (e) {
            if (e[0].isIntersecting) {
              if (this.scrollingFn) return;
              !(function (e) {
                (e.scrollingFn = function () {
                  if (this.scrolling) return;
                  (this.scrolling = !0), window.requestAnimationFrame(i.bind(this));
                }.bind(e)),
                  window.addEventListener("scroll", e.scrollingFn);
              })(this);
            } else {
              if (!this.scrollingFn) return;
              window.removeEventListener("scroll", this.scrollingFn), (this.scrollingFn = !1);
            }
          }.bind(t),
          { threshold: [0, 1] }
        ).observe(t.element),
        (n = this).element.addEventListener("resize-stack-cards", function () {
          s(n), i.bind(n);
        });
    }
    function s(e) {
      var t, n;
      (e.marginY = getComputedStyle(e.element).getPropertyValue("--stack-cards-gap")), (t = e), (n = document.createElement("div")).setAttribute("style", "opacity:0; visbility: hidden;position: absolute; height:" + t.marginY), t.element.appendChild(n), (t.marginY = parseInt(getComputedStyle(n).getPropertyValue("height"))), t.element.removeChild(n), (e.elementHeight = e.element.offsetHeight);
      var s = getComputedStyle(e.items[0]);
      (e.cardTop = Math.floor(parseFloat(s.getPropertyValue("top")))), (e.cardHeight = Math.floor(parseFloat(s.getPropertyValue("height")))), (e.windowHeight = window.innerHeight), isNaN(e.marginY) ? (e.element.style.paddingBottom = "0px") : (e.element.style.paddingBottom = e.marginY * (e.items.length - 1) + "px");
      for (var i = 0; i < e.items.length; i++) isNaN(e.marginY) ? (e.items[i].style.transform = "none;") : (e.items[i].style.transform = "translateY(" + e.marginY * i + "px)");
    }
    function i() {
      if (isNaN(this.marginY)) this.scrolling = !1;
      else {
        var e = this.element.getBoundingClientRect().top;
        if (0 < this.cardTop - e + this.element.windowHeight - this.elementHeight - this.cardHeight + this.marginY + this.marginY * this.items.length) this.scrolling = !1;
        else {
          for (var t = 0; t < this.items.length; t++) {
            var n,
              s = this.cardTop - e - t * (this.cardHeight + this.marginY);
            0 < s ? ((n = t == this.items.length - 1 ? 1 : (this.cardHeight - 0.05 * s) / this.cardHeight), (this.items[t].style.transform = "translateY(" + this.marginY * t + "px) scale(" + n + ")")) : (this.items[t].style.transform = "translateY(" + this.marginY * t + "px)");
          }
          this.scrolling = !1;
        }
      }
    }
    var t = document.getElementsByClassName("js-stack-cards"),
      n = "IntersectionObserver" in window && "IntersectionObserverEntry" in window && "intersectionRatio" in window.IntersectionObserverEntry.prototype,
      a = Util.osHasReducedMotion();
    if (0 < t.length && n && !a) {
      for (var l = [], o = 0; o < t.length; o++) l.push(new e(t[o]));
      var r = !1,
        d = new CustomEvent("resize-stack-cards");
      function c() {
        for (var e = 0; e < l.length; e++) l[e].element.dispatchEvent(d);
      }
      window.addEventListener("resize", function () {
        clearTimeout(r), (r = setTimeout(c, 500));
      });
    }
  })(),
  (function () {
    function e(e) {
      var t;
      (this.element = e),
        (this.offsetIn = 0),
        (this.offsetOut = 0),
        (this.targetIn = !!this.element.getAttribute("data-target-in") && document.querySelector(this.element.getAttribute("data-target-in"))),
        (this.targetOut = !!this.element.getAttribute("data-target-out") && document.querySelector(this.element.getAttribute("data-target-out"))),
        (this.reset = 0),
        n(this),
        s((t = this)),
        t.element.addEventListener("resize-banner", function () {
          n(t), s(t);
        }),
        t.element.addEventListener("scroll-banner", function () {
          t.reset < 10 && (n(t), (t.reset = t.reset + 1)), s(t);
        });
    }
    function n(e) {
      (e.offsetIn = 0), e.targetIn && ((t = e.targetIn.getBoundingClientRect()), (e.offsetIn = t.top + document.documentElement.scrollTop + t.height));
      var t,
        n = e.element.getAttribute("data-offset-in");
      n && (e.offsetIn = e.offsetIn + parseInt(n)), (e.offsetOut = 0), e.targetOut && ((t = e.targetOut.getBoundingClientRect()), (e.offsetOut = t.top + document.documentElement.scrollTop - window.innerHeight));
      var s = e.element.getAttribute("data-offset-out");
      s && (e.offsetOut = e.offsetOut + parseInt(s));
    }
    function s(e) {
      var t = document.documentElement.scrollTop,
        n = !1,
        s = !1;
      e.offsetIn < t && (n = !0), (0 == e.offsetOut || t < e.offsetOut) && (s = !0), Util.toggleClass(e.element, "sticky-banner--visible", s && n);
    }
    var i = document.getElementsByClassName("js-sticky-banner");
    if (0 < i.length) {
      for (var t = 0; t < i.length; t++) new e(i[t]);
      var a = !1,
        l = !1,
        o = new CustomEvent("resize-banner"),
        r = new CustomEvent("scroll-banner");
      function d(e) {
        for (var t = 0; t < i.length; t++) i[t].dispatchEvent(e);
      }
      window.addEventListener("resize", function (e) {
        clearTimeout(a),
          (a = setTimeout(function () {
            d(o);
          }, 300));
      }),
        window.addEventListener("scroll", function (e) {
          l ||
            ((l = !0),
            window.requestAnimationFrame
              ? window.requestAnimationFrame(function () {
                  d(r), (l = !1);
                })
              : setTimeout(function () {
                  d(r), (l = !1);
                }, 200),
            (a = setTimeout(function () {
              d(o);
            }, 300)));
        });
    }
  })(),
  (function () {
    function e(e) {
      var t, n;
      (this.element = e),
        (this.scrollingElement = this.element.getElementsByClassName("sticky-hero__content")[0]),
        (this.nextElement = this.element.nextElementSibling),
        (this.scrollingTreshold = 0),
        (this.nextTreshold = 0),
        (t = this),
        (n = new IntersectionObserver(
          function (e, t) {
            var n = e[0].intersectionRatio.toFixed(1);
            e[0].target == this.scrollingElement ? (this.scrollingTreshold = n) : (this.nextTreshold = n), Util.toggleClass(this.element, "sticky-hero--media-is-fixed", 0 < this.nextTreshold || 0 < this.scrollingTreshold);
          }.bind(t),
          { threshold: [0, 0.1, 1] }
        )).observe(t.scrollingElement),
        t.nextElement && n.observe(t.nextElement);
    }
    var t,
      n = document.getElementsByClassName("js-sticky-hero"),
      s = "IntersectionObserver" in window && "IntersectionObserverEntry" in window && "intersectionRatio" in window.IntersectionObserverEntry.prototype;
    if (0 < n.length && s) for (var i = 0; i < n.length; i++) (t = i), (Util.hasClass(n[t], "sticky-hero--overlay-layer") || Util.hasClass(n[t], "sticky-hero--scale")) && new e(n[t]);
  })(),
  (function () {
    function e(e) {
      (this.element = e),
        (this.tabList = this.element.getElementsByClassName("js-tabs__controls")[0]),
        (this.listItems = this.tabList.getElementsByTagName("li")),
        (this.triggers = this.tabList.getElementsByTagName("a")),
        (this.panelsList = this.element.getElementsByClassName("js-tabs__panels")[0]),
        (this.panels = Util.getChildrenByClassName(this.panelsList, "js-tabs__panel")),
        (this.hideClass = "is-hidden"),
        (this.customShowClass = !!this.element.getAttribute("data-show-panel-class") && this.element.getAttribute("data-show-panel-class")),
        this.initTab();
    }
    (e.prototype.initTab = function () {
      this.tabList.setAttribute("role", "tablist");
      for (var e = 0; e < this.triggers.length; e++) {
        var t = 0 == e,
          n = this.panels[e].getAttribute("id");
        this.listItems[e].setAttribute("role", "presentation"), Util.setAttributes(this.triggers[e], { role: "tab", "aria-selected": t, "aria-controls": n, id: "tab-" + n }), Util.addClass(this.triggers[e], "js-tabs__trigger"), Util.setAttributes(this.panels[e], { role: "tabpanel", "aria-labelledby": "tab-" + n }), Util.toggleClass(this.panels[e], this.hideClass, !t), t || this.triggers[e].setAttribute("tabindex", "-1");
      }
      this.initTabEvents();
    }),
      (e.prototype.initTabEvents = function () {
        var t = this;
        this.tabList.addEventListener("click", function (e) {
          e.target.closest(".js-tabs__trigger") && t.triggerTab(e.target.closest(".js-tabs__trigger"), e);
        }),
          this.tabList.addEventListener("keydown", function (e) {
            e.target.closest(".js-tabs__trigger") && ((e.keyCode && 39 == e.keyCode) || (e.key && "ArrowRight" == e.key) ? t.selectNewTab("next") : ((e.keyCode && 37 == e.keyCode) || (e.key && "ArrowLeft" == e.key)) && t.selectNewTab("prev"));
          });
      }),
      (e.prototype.selectNewTab = function (e) {
        var t = this.tabList.querySelector('[aria-selected="true"]'),
          n = Util.getIndexInArray(this.triggers, t);
        (n = "next" == e ? n + 1 : n - 1) < 0 && (n = this.listItems.length - 1), n >= this.listItems.length && (n = 0), this.triggerTab(this.triggers[n]), this.triggers[n].focus();
      }),
      (e.prototype.triggerTab = function (e, t) {
        t && t.preventDefault();
        var n = Util.getIndexInArray(this.triggers, e);
        if ("true" != this.triggers[n].getAttribute("aria-selected"))
          for (var s = 0; s < this.triggers.length; s++) {
            var i = s == n;
            Util.toggleClass(this.panels[s], this.hideClass, !i), this.customShowClass && Util.toggleClass(this.panels[s], this.customShowClass, i), this.triggers[s].setAttribute("aria-selected", i), i ? this.triggers[s].setAttribute("tabindex", "0") : this.triggers[s].setAttribute("tabindex", "-1");
          }
      });
    var t = document.getElementsByClassName("js-tabs");
    if (0 < t.length) for (var n = 0; n < t.length; n++) new e(t[n]);
  })(),
  (function () {
    function e(e) {
      var t, n, s;
      (this.element = e),
        (this.tooltip = !1),
        (this.tooltipIntervalId = !1),
        (this.tooltipContent = this.element.getAttribute("title")),
        (this.tooltipPosition = this.element.getAttribute("data-tooltip-position") ? this.element.getAttribute("data-tooltip-position") : "top"),
        (this.tooltipClasses = !!this.element.getAttribute("data-tooltip-class") && this.element.getAttribute("data-tooltip-class")),
        (this.tooltipId = "js-tooltip-element"),
        (this.tooltipDescription = !this.element.getAttribute("data-tooltip-describedby") || "false" != this.element.getAttribute("data-tooltip-describedby")),
        (this.tooltipDelay = 300),
        (this.tooltipDelta = 10),
        (this.tooltipTriggerHover = !1),
        (this.tooltipSticky = this.tooltipClasses && -1 < this.tooltipClasses.indexOf("tooltip--sticky")),
        (this.tooltipHover = !1),
        this.tooltipSticky && (this.tooltipHoverInterval = !1),
        (n = (t = this).element.getAttribute("data-tooltip-title")) && (t.tooltipContent = n),
        (s = this).element.removeAttribute("title"),
        s.element.setAttribute("tabindex", "0"),
        s.element.addEventListener("mouseenter", i.bind(s)),
        s.element.addEventListener("focus", i.bind(s));
    }
    function i(e) {
      switch (e.type) {
        case "mouseenter":
        case "focus":
          !(function (e) {
            if (e.tooltipIntervalId) return;
            (e.tooltipTriggerHover = !0),
              e.element.addEventListener("mouseleave", i.bind(e)),
              e.element.addEventListener("blur", i.bind(e)),
              (e.tooltipIntervalId = setTimeout(function () {
                !(function (n) {
                  (n.tooltip = document.getElementById(n.tooltipId)), n.tooltip || ((n.tooltip = document.createElement("div")), document.body.appendChild(n.tooltip));
                  Util.setAttributes(n.tooltip, { id: n.tooltipId, class: "tooltip tooltip--is-hidden js-tooltip", role: "tooltip" }), (n.tooltip.innerHTML = n.tooltipContent), n.tooltipDescription && n.element.setAttribute("aria-describedby", n.tooltipId);
                  n.tooltipClasses && Util.addClass(n.tooltip, n.tooltipClasses);
                  n.tooltipSticky && Util.addClass(n.tooltip, "tooltip--sticky");
                  if (
                    ((function (e) {
                      var t = [e.tooltip.offsetHeight, e.tooltip.offsetWidth],
                        n = e.element.getBoundingClientRect(),
                        s = [],
                        i = window.scrollY || window.pageYOffset;
                      (s.top = [n.top - t[0] - e.tooltipDelta + i, n.right / 2 + n.left / 2 - t[1] / 2]), (s.bottom = [n.bottom + e.tooltipDelta + i, n.right / 2 + n.left / 2 - t[1] / 2]), (s.left = [n.top / 2 + n.bottom / 2 - t[0] / 2 + i, n.left - t[1] - e.tooltipDelta]), (s.right = [n.top / 2 + n.bottom / 2 - t[0] / 2 + i, n.right + e.tooltipDelta]);
                      var a = e.tooltipPosition;
                      "top" == a && s.top[0] < i ? (a = "bottom") : "bottom" == a && s.bottom[0] + e.tooltipDelta + t[0] > i + window.innerHeight ? (a = "top") : "left" == a && s.left[1] < 0 ? (a = "right") : "right" == a && s.right[1] + t[1] > window.innerWidth && (a = "left");
                      ("top" != a && "bottom" != a) || (s[a][1] < 0 && (s[a][1] = 0), s[a][1] + t[1] > window.innerWidth && (s[a][1] = window.innerWidth - t[1]));
                      (e.tooltip.style.top = s[a][0] + "px"), (e.tooltip.style.left = s[a][1] + "px"), Util.addClass(e.tooltip, "tooltip--" + a);
                    })(n),
                    Util.removeClass(n.tooltip, "tooltip--is-hidden"),
                    !n.tooltipSticky)
                  )
                    return;
                  n.tooltip.addEventListener("mouseenter", function e() {
                    var t;
                    (n.tooltipHover = !0),
                      n.tooltipHoverInterval && (clearInterval(n.tooltipHoverInterval), (n.tooltipHoverInterval = !1)),
                      n.tooltip.removeEventListener("mouseenter", e),
                      (t = n).tooltip.addEventListener("mouseleave", function e() {
                        (t.tooltipHover = !1), t.tooltip.removeEventListener("mouseleave", e), s(t);
                      });
                  });
                })(e);
              }, e.tooltipDelay));
          })(this);
          break;
        case "mouseleave":
        case "blur":
          !(function (e) {
            if (((e.tooltipTriggerHover = !1), e.tooltipSticky)) {
              if (e.tooltipHover) return;
              if (e.tooltipHoverInterval) return;
              e.tooltipHoverInterval = setTimeout(function () {
                s(e), (e.tooltipHoverInterval = !1);
              }, 300);
            } else s(e);
          })(this);
      }
    }
    function s(e) {
      var t, n;
      e.tooltipHover || e.tooltipTriggerHover || (clearInterval(e.tooltipIntervalId), e.tooltipHoverInterval && (clearInterval(e.tooltipHoverInterval), (e.tooltipHoverInterval = !1)), (e.tooltipIntervalId = !1), e.tooltip && ((t = e), Util.addClass(t.tooltip, "tooltip--is-hidden"), t.tooltipDescription && t.element.removeAttribute("aria-describedby"), (n = e).element.removeEventListener("mouseleave", i.bind(n)), n.element.removeEventListener("blur", i.bind(n))));
    }
    window.Tooltip = e;
    var t = document.getElementsByClassName("js-tooltip-trigger");
    if (0 < t.length) for (var n = 0; n < t.length; n++) new e(t[n]);
  })(),
  (function () {
    function e(e) {
      (this.element = e),
        (this.sections = this.element.getElementsByClassName("js-v-timeline__section")),
        (this.animate = !(!this.element.getAttribute("data-animation") || "on" != this.element.getAttribute("data-animation"))),
        (this.animationClass = "v-timeline__section--animate"),
        (this.animationDelta = "-150px"),
        (function (e) {
          if (!e.animate) return;
          for (var t = 0; t < e.sections.length; t++) {
            new IntersectionObserver(n.bind(e, t), { rootMargin: "0px 0px " + e.animationDelta + " 0px" }).observe(e.sections[t]);
          }
        })(this);
    }
    function n(e, t, n) {
      t[0].isIntersecting && (Util.addClass(this.sections[e], this.animationClass), n.unobserve(this.sections[e]));
    }
    var t = document.querySelectorAll(".js-v-timeline"),
      s = "IntersectionObserver" in window && "IntersectionObserverEntry" in window && "intersectionRatio" in window.IntersectionObserverEntry.prototype,
      i = Util.osHasReducedMotion();
    if (0 < t.length) for (var a = 0; a < t.length; a++) s && !i ? new e(t[a]) : t[a].removeAttribute("data-animation");
  })(),
  (function () {
    function e(e) {
      var t;
      (this.element = e),
        (this.list = this.element.getElementsByTagName("ul")[0]),
        (this.cards = this.list.children),
        (this.reverseDirection = Util.hasClass(this.element, "anim-cards--reverse")),
        (this.translate = 0),
        (this.animationId = !1),
        (this.animating = !1),
        (this.animationSpeed = 1),
        (t = this),
        new IntersectionObserver(
          function (e) {
            e[0].isIntersecting ? ((this.animating = !0), n(this)) : ((this.animating = !1), l(this));
          }.bind(t)
        ).observe(t.element),
        t.element.addEventListener("update-card-width", function (e) {
          this.animating && (l(this), n(t));
        });
    }
    function n(e) {
      var t;
      (e.cardWidth = ((t = e), parseFloat(window.getComputedStyle(t.cards[0]).marginRight) + t.cards[0].offsetWidth)), (e.animationId = window.requestAnimationFrame(a.bind(e)));
    }
    function a(e) {
      l(this), this.timestamp || (this.timestamp = e);
      var t,
        n,
        s,
        i = 0.06 * (this.timestamp - e) * this.animationSpeed;
      (this.timestamp = e),
        (n = i),
        ((t = this).translate = t.reverseDirection ? t.translate - n : t.translate + n),
        (t.translate = Math.round(Math.abs(t.translate))),
        t.reverseDirection || (t.translate = -1 * t.translate),
        (function (e) {
          if (Math.abs(e.translate) <= e.cardWidth) return;
          (e.translate = Math.abs(e.translate) - e.cardWidth), e.reverseDirection || (e.translate = -1 * e.translate);
          var t = e.cards[0].cloneNode(!0);
          e.list.removeChild(e.cards[0]), e.list.appendChild(t);
        })(this),
        ((s = this).list.style.transform = "translateX(" + s.translate + "px)"),
        (s.list.style.msTransform = "translateX(" + s.translate + "px)"),
        (this.animationId = window.requestAnimationFrame(a.bind(this)));
    }
    function l(e) {
      e.animationId && (window.cancelAnimationFrame(e.animationId), (e.animationId = !1));
    }
    var t = document.getElementsByClassName("js-anim-cards"),
      s = window.requestAnimationFrame,
      i = Util.osHasReducedMotion(),
      o = "IntersectionObserver" in window && "IntersectionObserverEntry" in window && "intersectionRatio" in window.IntersectionObserverEntry.prototype;
    if (0 < t.length) {
      for (var r, d, c = [], u = 0; u < t.length; u++) s && !i && o ? c.push(new e(t[u])) : Util.addClass(t[u], "anim-cards--anim-off");
      function m() {
        for (var e = 0; e < c.length; e++) c[e].element.dispatchEvent(d);
      }
      0 < c.length &&
        ((r = !1),
        (d = new CustomEvent("update-card-width")),
        window.addEventListener("resize", function () {
          clearTimeout(r), (r = setTimeout(m, 500));
        }));
    }
  })(),
  (function () {
    var n = function (e) {
      var t;
      "CSS" in window &&
        CSS.supports("color", "var(--color-var)") &&
        ((this.options = Util.extend(n.defaults, e)),
        (this.element = this.options.element),
        (this.input = this.element.getElementsByClassName("js-autocomplete__input")[0]),
        (this.results = this.element.getElementsByClassName("js-autocomplete__results")[0]),
        (this.resultsList = this.results.getElementsByClassName("js-autocomplete__list")[0]),
        (this.ariaResult = this.element.getElementsByClassName("js-autocomplete__aria-results")),
        (this.resultClassName = 0 < this.element.getElementsByClassName("js-autocomplete__item").length ? "js-autocomplete__item" : "js-autocomplete__result"),
        (this.inputVal = ""),
        (this.typeId = !1),
        (this.searchingClass = this.element.getAttribute("data-autocomplete-searching-class") || "autocomplete--searching"),
        (this.dropdownActiveClass = this.element.getAttribute("data-autocomplete-dropdown-visible-class") || this.element.getAttribute("data-dropdown-active-class")),
        (this.truncateDropdown = !(!this.element.getAttribute("data-autocomplete-dropdown-truncate") || "on" != this.element.getAttribute("data-autocomplete-dropdown-truncate"))),
        (function (e) {
          Util.setAttributes(e.input, { role: "combobox", "aria-autocomplete": "list" });
          var t = e.resultsList.getAttribute("id");
          t && e.input.setAttribute("aria-owns", t);
          e.resultsList.setAttribute("role", "list");
        })((t = this)),
        (function (e) {
          (e.templateItems = e.resultsList.querySelectorAll("." + e.resultClassName + "[data-autocomplete-template]")), e.templateItems.length < 1 && (e.templateItems = e.resultsList.querySelectorAll("." + e.resultClassName));
          e.templates = [];
          for (var t = 0; t < e.templateItems.length; t++) e.templates[t] = e.templateItems[t].getAttribute("data-autocomplete-template");
        })(t),
        (function (s) {
          s.input.addEventListener("keyup", function (e) {
            var t, n;
            (t = s),
              ("arrowdown" == (n = e).key.toLowerCase() || "40" == n.keyCode
                ? function (e) {
                    if (!Util.hasClass(e.element, e.dropdownActiveClass)) return;
                    o(e), r(e.resultsItems[0]).focus();
                  }
                : a)(t);
          }),
            s.input.addEventListener("focus", function (e) {
              a(s, !0);
            }),
            s.input.addEventListener("blur", function (e) {
              i(s, e);
            }),
            s.resultsList.addEventListener("keydown", function (e) {
              !(function (e, t) {
                var n = "arrowdown" == t.key.toLowerCase() || "40" == t.keyCode,
                  s = "arrowup" == t.key.toLowerCase() || "38" == t.keyCode;
                if (!n && !s) return;
                t.preventDefault();
                var i = document.activeElement.closest("." + e.resultClassName) || document.activeElement,
                  a = Util.getIndexInArray(e.resultsItems, i);
                (a = n ? a + 1 : a - 1) < 0 && (a = e.resultsItems.length - 1);
                a >= e.resultsItems.length && (a = 0);
                r(e.resultsItems[a]).focus();
              })(s, e);
            }),
            s.resultsList.addEventListener("focusout", function (e) {
              i(s, e);
            }),
            window.addEventListener("keyup", function (e) {
              (e.keyCode && 27 == e.keyCode) || (e.key && "escape" == e.key.toLowerCase()) ? l(s, !1) : ((e.keyCode && 13 == e.keyCode) || (e.key && "enter" == e.key.toLowerCase())) && d(s, document.activeElement.closest("." + s.resultClassName), e);
            }),
            s.resultsList.addEventListener("click", function (e) {
              d(s, e.target.closest("." + s.resultClassName), e);
            });
        })(t));
    };
    function i(e, t) {
      e.element.contains(t.relatedTarget) || l(e, !1);
    }
    function a(e, t) {
      var n = e.input.value;
      (n == e.inputVal && !t) ||
        ((e.inputVal = n),
        e.typeId && clearInterval(e.typeId),
        e.inputVal.length < e.options.characters
          ? l(e, !1)
          : t
          ? s(e)
          : (e.typeId = setTimeout(function () {
              s(e);
            }, e.options.debounce)));
    }
    function l(e, t) {
      if (t) {
        if (Util.hasClass(e.element, e.dropdownActiveClass)) return;
        Util.addClass(e.element, e.dropdownActiveClass),
          e.input.setAttribute("aria-expanded", !0),
          (function (e) {
            if (!e.truncateDropdown) return;
            e.resultsList.style.maxHeight = "";
            var t = window.innerHeight - e.input.getBoundingClientRect().bottom - 10;
            parseInt(getComputedStyle(e.resultsList).maxHeight) > t ? (e.resultsList.style.maxHeight = t + "px") : (e.resultsList.style.maxHeight = "");
          })(e);
      } else {
        if (!Util.hasClass(e.element, e.dropdownActiveClass)) return;
        e.resultsList.contains(document.activeElement) && e.input.focus(), Util.removeClass(e.element, e.dropdownActiveClass), e.input.removeAttribute("aria-expanded"), o(e);
      }
    }
    function s(t) {
      Util.addClass(t.element, t.searchingClass),
        t.options.searchData(t.inputVal, function (e) {
          !(function (e, t) {
            for (var n = "", s = 0; s < t.length; s++)
              n += (function (e, t) {
                var n = (function (e, t) {
                  var n = !1;
                  if (1 != e.templateItems.length && t.template) {
                    for (var s = 0; s < e.templateItems.length; s++) t.template == e.templates[s] && (n = e.templateItems[s]);
                    n = n || e.templateItems[0];
                  } else n = e.templateItems[0];
                  return n.cloneNode(!0);
                })(e, t);
                for (var s in (Util.removeClass(n, "is-hidden"), n.setAttribute("tabindex", "-1"), t))
                  t.hasOwnProperty(s) &&
                    ("label" == s &&
                      (function (e, t) {
                        var n = e.querySelector("[data-autocomplete-label]");
                        n ? (n.textContent = t) : (e.textContent = t);
                      })(n, t[s]),
                    "class" == s &&
                      (function (e, t) {
                        Util.addClass(e, t);
                      })(n, t[s]),
                    "url" == s
                      ? (function (e, t) {
                          var n = e.querySelector("[data-autocomplete-url]");
                          n && n.setAttribute("href", t);
                        })(n, t[s])
                      : (function (e, t, n) {
                          var s = e.querySelector("[data-autocomplete-" + t + "]");
                          s && (s.hasAttribute("data-autocomplete-html") ? (s.innerHTML = n) : (s.textContent = n));
                        })(n, s, t[s]));
                return n.outerHTML;
              })(e, t[s]);
            e.resultsList.innerHTML = n;
          })(t, e),
            Util.removeClass(t.element, t.searchingClass),
            l(t, !0),
            (function (e) {
              if (((e.resultsItems = e.resultsList.querySelectorAll("." + e.resultClassName + '[tabindex="-1"]')), 0 == e.ariaResult.length)) return;
              e.ariaResult[0].textContent = e.resultsItems.length;
            })(t);
        });
    }
    function o(e) {
      e.typeId && clearInterval(e.typeId), (e.typeId = !1);
    }
    function r(e) {
      var t = e,
        n = t.querySelectorAll("button:not([disabled]), [href]");
      return 0 < n.length && (t = n[0]), t;
    }
    function d(e, t, n) {
      var s, i;
      t && (e.options.onClick ? e.options.onClick(t, e, n) : ((e.input.value = (i = (s = t).querySelector("[data-autocomplete-label]")) ? i.textContent : s.textContent), l(e, !1)), (e.inputVal = e.input.value));
    }
    (n.defaults = { element: "", debounce: 200, characters: 2, searchData: !1, onClick: !1 }), (window.Autocomplete = n);
  })(),
  (function () {
    var n = function (e) {
      var t;
      (this.options = Util.extend(n.defaults, e)),
        (this.element = this.options.element.getElementsByClassName("js-chart__area")[0]),
        (this.svgPadding = this.options.padding),
        (this.topDelta = this.svgPadding),
        (this.bottomDelta = 0),
        (this.leftDelta = 0),
        (this.rightDelta = 0),
        (this.legendHeight = 0),
        (this.yChartMaxWidth = 0),
        (this.yAxisHeight = 0),
        (this.xAxisWidth = 0),
        (this.yAxisInterval = []),
        (this.xAxisInterval = []),
        (this.datasetScaled = []),
        (this.datasetScaledFlat = []),
        (this.datasetAreaScaled = []),
        (this.datasetAreaScaledFlat = []),
        (this.xAxisLabelRotation = !1),
        (this.interLine = !1),
        (this.markers = !1),
        (this.tooltipOn = this.options.tooltip && this.options.tooltip.enabled),
        (this.tooltipClasses = this.tooltipOn && this.options.tooltip.classes ? this.options.tooltip.classes : ""),
        (this.tooltipPosition = !(!this.tooltipOn || !this.options.tooltip.position) && this.options.tooltip.position),
        (this.tooltipDelta = 10),
        (this.selectedMarker = !1),
        (this.selectedMarkerClass = "chart__marker--selected"),
        (this.selectedBarClass = "chart__data-bar--selected"),
        (this.hoverId = !1),
        (this.hovering = !1),
        (this.eventIds = []),
        (this.categories = this.options.element.getElementsByClassName("js-chart__category")),
        (this.loaded = !1),
        "column" == (t = this).options.type &&
          (function (e) {
            (e.columnWidthPerc = 100), (e.columnGap = 0), e.options.column && e.options.column.width && (e.columnWidthPerc = parseInt(e.options.column.width));
            e.options.column && e.options.column.gap && (e.columnGap = parseInt(e.options.column.gap));
          })(t),
        i(this),
        (function (e) {
          if (!e.options.externalData) return;
          var t = e.options.element.getAttribute("id");
          if (!t) return;
          if (((e.extDataX = []), (e.extDataXInit = []), (e.extDataY = []), (e.extDataYInit = []), 1 < e.options.datasets.length)) for (var n = 0; n < e.options.datasets.length; n++) (e.extDataX[n] = document.querySelectorAll(".js-ext-chart-data-x--" + (n + 1) + '[data-chart="' + t + '"]')), (e.extDataY[n] = document.querySelectorAll(".js-ext-chart-data-y--" + (n + 1) + '[data-chart="' + t + '"]'));
          else (e.extDataX[0] = document.querySelectorAll('.js-ext-chart-data-x[data-chart="' + t + '"]')), (e.extDataY[0] = document.querySelectorAll('.js-ext-chart-data-y[data-chart="' + t + '"]'));
          s(0, e.extDataX, e.extDataXInit), s(0, e.extDataY, e.extDataYInit);
        })(this);
    };
    function i(e) {
      var t, n;
      function s() {
        var e;
        ((e = n).topDelta = 0),
          (e.bottomDelta = 0),
          (e.leftDelta = 0),
          (e.rightDelta = 0),
          (e.dragging = !1),
          e.eventIds && e.eventIds.hover && (e.chartArea.removeEventListener("mouseenter", e.eventIds.hover), e.chartArea.removeEventListener("mousemove", e.eventIds.hover), e.chartArea.removeEventListener("mouseleave", e.eventIds.hover), e.element.removeEventListener("dragStart", e.eventIds.hover), e.element.removeEventListener("dragging", e.eventIds.hover), e.element.removeEventListener("dragEnd", e.eventIds.hover)),
          i(n);
      }
      0 != e.options.datasets.length &&
        (U || (e.options.animate = !1),
        (e.eventIds.resize = !1),
        ((t = e).height = t.element.clientHeight),
        (t.width = t.element.clientWidth),
        (function (e) {
          var t = '<svg xmlns="http://www.w3.org/2000/svg" aria-hidden="true" width="' + e.width + '" height="' + e.height + '" class="chart__svg js-chart__svg"></svg>';
          switch (((e.element.innerHTML = t), (e.svg = e.element.getElementsByClassName("js-chart__svg")[0]), e.options.type)) {
            case "pie":
            case "doughnut":
              break;
            case "column":
              !(function (e) {
                l(e),
                  a(e),
                  o(e),
                  d(e),
                  r(e),
                  (function (e) {
                    var t = e.element.getElementsByClassName("js-chart__axis-labels--x")[0].querySelectorAll(".js-chart__axis-label"),
                      n = L(t[t.length - 1]),
                      s = e.xAxisWidth / t.length;
                    n &&
                      (function (e, t, n) {
                        if (e.xAxisLabelRotation) return;
                        for (var s = 0; s < t.length; s++) Util.setAttributes(t[s], { x: t[s].getBBox().x + n });
                      })(e, t, 0.5 * s);
                    var i = (s * e.columnWidthPerc) / 100;
                    e.options.stacked ? (e.columnWidth = i) : (e.columnWidth = (i - e.columnGap * (e.options.datasets.length - 1)) / e.options.datasets.length);
                    e.columnDelta = (s - i) / 2;
                  })(e),
                  (function (e) {
                    var t = document.createElementNS("http://www.w3.org/2000/svg", "g");
                    t.setAttribute("class", "chart__dataset js-chart__dataset"),
                      (e.datasetScaled = []),
                      (function (e) {
                        (e.yZero = e.height - e.bottomDelta), e.yAxisInterval[0] < 0 && (e.yZero = e.height - e.bottomDelta + (e.yAxisHeight * e.yAxisInterval[0]) / (e.yAxisInterval[1] - e.yAxisInterval[0]));
                      })(e);
                    for (var n = 0; n < e.options.datasets.length; n++) {
                      var s = document.createElementNS("http://www.w3.org/2000/svg", "g");
                      s.setAttribute("class", "chart__set chart__set--" + (n + 1) + " js-chart__set"),
                        (e.datasetScaled[n] = JSON.parse(JSON.stringify(e.options.datasets[n].data))),
                        (e.datasetScaled[n] = c(e, e.datasetScaled[n])),
                        (e.datasetScaledFlat[n] = JSON.parse(JSON.stringify(e.datasetScaled[n]))),
                        !e.loaded && e.options.animate && u(e, n),
                        s.appendChild(
                          (function (e, t, n) {
                            for (var s = document.createElementNS("http://www.w3.org/2000/svg", "g"), i = 0; i < t.length; i++) {
                              var a = document.createElementNS("http://www.w3.org/2000/svg", "path"),
                                l = B(e, t[i], n, i, e.datasetScaledFlat),
                                o = e.options.column && e.options.column.radius ? "round" : "square";
                              "round" == o && e.options.stacked && n < e.options.datasets.length - 1 && (o = "square");
                              var r = "round" == o ? N(e, l) : v(l);
                              Util.setAttributes(a, { d: r, class: "chart__data-bar chart__data-bar--" + (n + 1) + " js-chart__data-bar js-chart__data-bar--" + (n + 1) }), s.appendChild(a);
                            }
                            return s;
                          })(e, e.datasetScaledFlat[n], n)
                        ),
                        t.appendChild(s),
                        s.appendChild(f(e, e.datasetScaled[n], n));
                    }
                    e.svg.appendChild(t);
                  })(e),
                  E(e);
              })(e);
              break;
            default:
              !(function (e) {
                l(e),
                  a(e),
                  o(e),
                  d(e),
                  r(e),
                  (function (e) {
                    var t = document.createElementNS("http://www.w3.org/2000/svg", "g");
                    t.setAttribute("class", "chart__dataset js-chart__dataset"), (e.datasetScaled = []);
                    for (var n = 0; n < e.options.datasets.length; n++) {
                      var s = document.createElementNS("http://www.w3.org/2000/svg", "g");
                      s.setAttribute("class", "chart__set chart__set--" + (n + 1) + " js-chart__set"),
                        (e.datasetScaled[n] = JSON.parse(JSON.stringify(e.options.datasets[n].data))),
                        (e.datasetScaled[n] = c(e, e.datasetScaled[n])),
                        (e.datasetScaledFlat[n] = JSON.parse(JSON.stringify(e.datasetScaled[n]))),
                        "area" == e.options.type && ((e.datasetAreaScaled[n] = h(e, e.datasetScaled[n])), (e.datasetAreaScaledFlat[n] = JSON.parse(JSON.stringify(e.datasetAreaScaled[n])))),
                        !e.loaded && e.options.animate && u(e, n),
                        s.appendChild(
                          (function (e, t, n, s) {
                            var i = e.options.smooth ? g(t, !1) : v(t),
                              a = document.createElementNS("http://www.w3.org/2000/svg", "g"),
                              l = document.createElementNS("http://www.w3.org/2000/svg", "path");
                            {
                              var o, r;
                              Util.setAttributes(l, { d: i, class: "chart__data-line chart__data-line--" + (s + 1) + " js-chart__data-line--" + (s + 1) }), "area" == e.options.type && ((o = e.options.smooth ? g(n, !0) : v(n)), (r = document.createElementNS("http://www.w3.org/2000/svg", "path")), Util.setAttributes(r, { d: o, class: "chart__data-fill chart__data-fill--" + (s + 1) + " js-chart__data-fill--" + (s + 1) }), a.appendChild(r));
                            }
                            return a.appendChild(l), a;
                          })(e, e.datasetScaledFlat[n], e.datasetAreaScaledFlat[n], n)
                        ),
                        s.appendChild(f(e, e.datasetScaled[n], n)),
                        t.appendChild(s);
                    }
                    e.svg.appendChild(t);
                  })(e),
                  E(e);
              })(e);
          }
        })(e),
        (function (e) {
          for (var t = '<div class="chart__sr-table sr-only">', n = 0; n < e.options.datasets.length; n++)
            t += (function (e, t) {
              var n = "<table " + (e.categories.length > t ? 'aria-label="' + e.categories.length[t].textContent + '"' : "") + "><thead><tr>";
              (n = e.options.xAxis && e.options.xAxis.legend ? n + '<th scope="col">' + e.options.xAxis.legend + "</th>" : n + '<th scope="col"></th>'), (n = (n = e.options.yAxis && e.options.yAxis.legend ? n + '<th scope="col">' + e.options.yAxis.legend + "</th>" : n + '<th scope="col"></th>') + "</thead><tbody>");
              for (var s = 1 < e.options.datasets[t].data[0].length, i = e.options.xAxis && e.options.xAxis.labels && 1 < e.options.xAxis.labels.length, a = 0; a < e.options.datasets[t].data.length; a++) {
                var l;
                (n += "<tr>"), (n = s ? n + '<td role="cell">' + e.options.datasets[t].data[a][0] + '</td><td role="cell">' + e.options.datasets[t].data[a][1] + "</td>" : ((l = i ? e.options.xAxis.labels[a] : a + 1), n + '<td role="cell">' + l + '</td><td role="cell">' + e.options.datasets[t].data[a] + "</td>")), (n += "</tr>");
              }
              return (n += "</tbody></table>");
            })(e, n);
          (t += "</div>"), e.element.insertAdjacentHTML("afterend", t);
        })(e),
        (function (e) {
          if (!e.options.animate) return;
          new IntersectionObserver(
            function (e, t) {
              e[0].isIntersecting &&
                ((function (e) {
                  "line" == e.options.type || "area" == e.options.type
                    ? (I(e, "line"), "area" == e.options.type && I(e, "fill"))
                    : "column" == e.options.type &&
                      (function (u) {
                        var m = null,
                          h = u.datasetScaledFlat,
                          g = u.datasetScaled,
                          p = function (e) {
                            var t = e - (m = m || e);
                            600 < t && (t = 600);
                            for (var n = [], s = 0; s < g.length; s++) {
                              var i = [],
                                a = u.element.getElementsByClassName("js-chart__data-bar--" + (s + 1)),
                                l = u.options.column && u.options.column.radius ? "round" : "square";
                              u.options.stacked && "round" == l && s < g.length - 1 && (l = "square");
                              for (var o = 0; o < g[s].length; o++) {
                                var r = Math.easeOutQuart(t, h[s][o][1], g[s][o][1] - h[s][o][1], 600);
                                i[o] = [g[s][o][0], r];
                                var d = B(u, i[o], s, o, n),
                                  c = "round" == l ? N(u, d) : v(d);
                                a[o].setAttribute("d", c);
                              }
                              n[s] = i;
                            }
                            t < 600 && window.requestAnimationFrame(p);
                          };
                        window.requestAnimationFrame(p);
                      })(e);
                })(this),
                t.unobserve(this.element));
            }.bind(e),
            { rootMargin: "0px 0px -200px 0px" }
          ).observe(e.element);
        })(e),
        (n = e),
        window.addEventListener("resize", function () {
          clearTimeout(n.eventIds.resize), (n.eventIds.resize = setTimeout(s, 300));
        }),
        (e.loaded = !0));
    }
    function a(e) {
      var t, n, s, i, a, l;
      e.options.xAxis &&
        e.options.xAxis.legend &&
        (((t = document.createElementNS("http://www.w3.org/2000/svg", "text")).textContent = e.options.xAxis.legend),
        Util.setAttributes(t, { class: "chart__axis-legend chart__axis-legend--x js-chart__axis-legend--x" }),
        e.svg.appendChild(t),
        L((n = e.element.getElementsByClassName("js-chart__axis-legend--x")[0])) && ((s = n.getBBox()), (i = e.width / 2 - s.width / 2), (a = e.height - e.bottomDelta), Util.setAttributes(n, { x: i, y: a }), (e.bottomDelta = e.bottomDelta + s.height + e.svgPadding))),
        e.options.xAxis && e.options.xAxis.labels && 1 < e.options.xAxis.labels.length
          ? ((l = e.options.xAxis.labels), (e.xAxisInterval = [0, e.options.xAxis.labels.length - 1]))
          : (l = (function (e) {
              var t = [],
                n = 0;
              if (e.options.xAxis && e.options.xAxis.range && e.options.xAxis.step) {
                n = Math.ceil((e.options.xAxis.range[1] - e.options.xAxis.range[0]) / e.options.xAxis.step);
                for (var s = 0; s <= n; s++) t.push(e.options.xAxis.range[0] + e.options.xAxis.step * s);
                e.xAxisInterval = [e.options.xAxis.range[0], e.options.xAxis.range[1]];
              } else if (!e.options.datasets[0].data[0].length || e.options.datasets[0].data[0].length < 2) {
                e.xAxisInterval = [0, e.options.datasets[0].data.length - 1];
                for (s = 0; s < e.options.datasets[0].data.length; s++) t.push(s);
              } else {
                for (var i = w(e, !1), a = C(e, !1), l = new _(i, a, 5), n = Math.ceil((l.getNiceUpperBound() - l.getNiceLowerBound()) / l.getTickSpacing()), s = 0; s <= n; s++) t.push(l.getNiceLowerBound() + l.getTickSpacing() * s);
                e.xAxisInterval = [l.getNiceLowerBound(), l.getNiceUpperBound()];
              }
              return t;
            })(e)),
        e.options.xAxis && e.options.xAxis.labelModifier && (l = b(l, e.options.xAxis.labelModifier));
      var o = document.createElementNS("http://www.w3.org/2000/svg", "g");
      Util.setAttributes(o, { class: "chart__axis-labels chart__axis-labels--x js-chart__axis-labels--x" });
      for (var r, d = 0; d < l.length; d++) {
        var c = document.createElementNS("http://www.w3.org/2000/svg", "text"),
          u = e.options.xAxis && e.options.xAxis.labels ? "chart__axis-label chart__axis-label--x js-chart__axis-label" : "is-hidden js-chart__axis-label";
        Util.setAttributes(c, { class: u, "alignment-baseline": "middle" }), (c.textContent = l[d]), o.appendChild(c);
      }
      e.options.xAxis && e.options.xAxis.line && ((r = document.createElementNS("http://www.w3.org/2000/svg", "line")), Util.setAttributes(r, { class: "chart__axis chart__axis--x js-chart__axis--x", "stroke-linecap": "square" }), o.appendChild(r));
      var m = l.length;
      "column" == e.options.type && (m += 1);
      for (d = 0; d < m; d++) {
        var h = document.createElementNS("http://www.w3.org/2000/svg", "line"),
          g = e.options.xAxis && e.options.xAxis.ticks ? "chart__tick chart__tick-x js-chart__tick-x" : "js-chart__tick-x";
        Util.setAttributes(h, { class: g, "stroke-linecap": "square" }), o.appendChild(h);
      }
      e.svg.appendChild(o);
    }
    function l(e) {
      var t, n, s, i, a, l;
      e.options.yAxis &&
        e.options.yAxis.legend &&
        (((t = document.createElementNS("http://www.w3.org/2000/svg", "text")).textContent = e.options.yAxis.legend), t.setAttribute("class", "chart__axis-legend chart__axis-legend--y js-chart__axis-legend--y"), e.svg.appendChild(t), L((n = e.element.getElementsByClassName("js-chart__axis-legend--y")[0])) && ((s = n.getBBox().height), (i = e.leftDelta + s / 2), (a = e.topDelta), Util.setAttributes(n, { x: i, y: a }), (e.leftDelta = e.leftDelta + s + e.svgPadding))),
        e.options.yAxis && e.options.yAxis.labels && 1 < e.options.yAxis.labels.length
          ? ((l = e.options.yAxis.labels), (e.yAxisInterval = [0, e.options.yAxis.labels.length - 1]))
          : (l = (function (e) {
              var t = [],
                n = 0;
              if (e.options.yAxis && e.options.yAxis.range && e.options.yAxis.step) {
                n = Math.ceil((e.options.yAxis.range[1] - e.options.yAxis.range[0]) / e.options.yAxis.step);
                for (var s = 0; s <= n; s++) t.push(e.options.yAxis.range[0] + e.options.yAxis.step * s);
                e.yAxisInterval = [e.options.yAxis.range[0], e.options.yAxis.range[1]];
              } else {
                var i = e.options.type && "column" == e.options.type && e.options.stacked;
                i &&
                  (function (e) {
                    e.datasetsSum = [];
                    for (var t = 0; t < e.options.datasets.length; t++) for (var n = 0; n < e.options.datasets[t].data.length; n++) e.datasetsSum[n] = 0 == t ? e.options.datasets[t].data[n] : e.datasetsSum[n] + e.options.datasets[t].data[n];
                  })(e);
                for (
                  var a = i
                      ? (function (e) {
                          var t = Math.min.apply(null, e.datasetsSum);
                          0 < t && (t = 0);
                          return t;
                        })(e)
                      : w(e, !0),
                    l = i
                      ? (function (e) {
                          var t = Math.max.apply(null, e.datasetsSum);
                          t < 0 && (t = 0);
                          return t;
                        })(e)
                      : C(e, !0),
                    o = new _(a, l, 5),
                    n = Math.ceil((o.getNiceUpperBound() - o.getNiceLowerBound()) / o.getTickSpacing()),
                    s = 0;
                  s <= n;
                  s++
                )
                  t.push(o.getNiceLowerBound() + o.getTickSpacing() * s);
                e.yAxisInterval = [o.getNiceLowerBound(), o.getNiceUpperBound()];
              }
              return t;
            })(e)),
        e.options.yAxis && e.options.yAxis.labelModifier && (l = b(l, e.options.yAxis.labelModifier));
      var o = document.createElementNS("http://www.w3.org/2000/svg", "g");
      Util.setAttributes(o, { class: "chart__axis-labels chart__axis-labels--y js-chart__axis-labels--y" });
      for (var r, d = l.length - 1; 0 <= d; d--) {
        var c = document.createElementNS("http://www.w3.org/2000/svg", "text"),
          u = e.options.yAxis && e.options.yAxis.labels ? "chart__axis-label chart__axis-label--y js-chart__axis-label" : "is-hidden js-chart__axis-label";
        Util.setAttributes(c, { class: u, "alignment-baseline": "middle" }), (c.textContent = l[d]), o.appendChild(c);
      }
      e.options.yAxis && e.options.yAxis.line && ((r = document.createElementNS("http://www.w3.org/2000/svg", "line")), Util.setAttributes(r, { class: "chart__axis chart__axis--y js-chart__axis--y", "stroke-linecap": "square" }), o.appendChild(r));
      for (var m = e.options.xAxis && e.options.xAxis.hasOwnProperty("guides") && !e.options.xAxis.guides, d = 1; d < l.length; d++) {
        var h = document.createElementNS("http://www.w3.org/2000/svg", "rect");
        Util.setAttributes(h, { class: "chart__guides js-chart__guides" }), m && Util.setAttributes(h, { class: "chart__guides js-chart__guides opacity-0" }), o.appendChild(h);
      }
      e.svg.appendChild(o);
    }
    function o(e) {
      var t = e.element.getElementsByClassName("js-chart__axis-labels--y")[0].querySelectorAll(".js-chart__axis-label");
      L(t[0]) ? ((e.yChartMaxWidth = y(t, "width")), (e.leftDelta = e.leftDelta + e.svgPadding + e.yChartMaxWidth + e.svgPadding)) : (e.leftDelta = e.leftDelta + e.svgPadding);
      var n = e.element.getElementsByClassName("js-chart__axis-labels--x")[0].querySelectorAll(".js-chart__axis-label");
      L(n[0]) && !L(t[0]) && (e.leftDelta = e.leftDelta + 0.5 * n[0].getBBox().width);
    }
    function r(e) {
      var t = e.element.getElementsByClassName("js-chart__axis-labels--y")[0].querySelectorAll(".js-chart__axis-label"),
        n = L(t[0]),
        s = 0;
      n && (s = 0.5 * t[0].getBBox().height), (e.topDelta = e.topDelta + s + e.svgPadding), (e.yAxisHeight = e.height - e.topDelta - e.bottomDelta);
      for (var i = e.yAxisHeight / (t.length - 1), a = e.element.getElementsByClassName("js-chart__guides"), l = e.xAxisWidth + " " + 2 * (e.xAxisWidth + i), o = 0; o < t.length; o++) {
        var r = 0;
        n && (r = t[o].getBBox().width), Util.setAttributes(t[o], { x: e.leftDelta - r - 2 * e.svgPadding, y: e.topDelta + i * o }), a[o] && Util.setAttributes(a[o], { x: e.leftDelta, y: e.topDelta + i * o, height: i, width: e.xAxisWidth, "stroke-dasharray": l });
      }
      var d = e.element.getElementsByClassName("js-chart__axis--y");
      0 < d.length && Util.setAttributes(d[0], { x1: e.leftDelta, x2: e.leftDelta, y1: e.topDelta, y2: e.topDelta + e.yAxisHeight });
      var c,
        u,
        m,
        h = e.element.getElementsByClassName("js-chart__axis-legend--y");
      0 < h.length && L(h[0]) && ((s = (c = h[0].getBBox()).height), (u = c.y + 0.5 * (e.yAxisHeight + c.width)), (m = c.x + s / 4), Util.setAttributes(h[0], { y: u, x: m, transform: "rotate(-90 " + (c.x + s) + " " + (u + s / 2) + ")" }));
    }
    function d(e) {
      var t = e.element.getElementsByClassName("js-chart__axis-labels--x")[0].querySelectorAll(".js-chart__axis-label"),
        n = e.element.getElementsByClassName("js-chart__tick-x"),
        s = 0,
        i = L(t[t.length - 1]);
      i && (s = t[t.length - 1].getBBox().width), "column" != e.options.type ? (e.rightDelta = e.rightDelta + 0.5 * s + e.svgPadding) : (e.rightDelta = e.rightDelta + 4), (e.xAxisWidth = e.width - e.leftDelta - e.rightDelta);
      var a = y(t, "height"),
        l = y(t, "width"),
        o = e.xAxisWidth / (t.length - 1);
      "column" == e.options.type && (o = e.xAxisWidth / t.length);
      var r = 0,
        d = 0;
      i && (d = t[0].getBBox().height);
      for (var c = 0; c < t.length; c++) {
        var u = 0;
        i && (u = t[c].getBBox().width), Util.setAttributes(t[c], { y: e.height - e.bottomDelta - d / 2, x: e.leftDelta + o * c - u / 2 }), Util.setAttributes(n[c], { y1: e.height - e.bottomDelta - a - e.svgPadding, y2: e.height - e.bottomDelta - a - e.svgPadding + 5, x1: e.leftDelta + o * c, x2: e.leftDelta + o * c }), (r = r + u + 4);
      }
      "column" == e.options.type && n[t.length] && Util.setAttributes(n[t.length], { y1: e.height - e.bottomDelta - a - e.svgPadding, y2: e.height - e.bottomDelta - a - e.svgPadding + 5, x1: e.leftDelta + o * t.length, x2: e.leftDelta + o * t.length }),
        r >= e.xAxisWidth
          ? ((e.xAxisLabelRotation = !0),
            (function (e, t, n) {
              for (var s = 0; s < e.length; s++) {
                var i = e[s].getBBox(),
                  a = parseFloat(e[s].getAttribute("x")) + i.width / 2,
                  l = parseFloat(e[s].getAttribute("y")) - n;
                Util.setAttributes(e[s], { y: parseFloat(e[s].getAttribute("y")) - n, transform: "rotate(-45 " + a + " " + l + ")" }), t[s].setAttribute("transform", "translate(0 -" + n + ")");
              }
              t[e.length] && t[e.length].setAttribute("transform", "translate(0 -" + n + ")");
            })(t, n, l - a),
            (a = l))
          : (e.xAxisLabelRotation = !1),
        (e.bottomDelta = e.bottomDelta + e.svgPadding + a);
      var m = e.element.getElementsByClassName("js-chart__axis--x");
      0 < m.length && Util.setAttributes(m[0], { x1: e.leftDelta, x2: e.width - e.rightDelta, y1: e.height - e.bottomDelta, y2: e.height - e.bottomDelta });
      var h = e.element.getElementsByClassName("js-chart__axis-legend--x");
      0 < h.length && L(h[0]) && h[0].setAttribute("x", e.leftDelta + 0.5 * (e.xAxisWidth - h[0].getBBox().width));
    }
    function c(e, t) {
      for (
        var n =
            1 < t[0].length
              ? t
              : (function (e) {
                  for (var t = [], n = 0; n < e.length; n++) t.push([n, e[n]]);
                  return t;
                })(t),
          s = e.xAxisWidth / (n.length - 1) - e.xAxisWidth / n.length,
          i = 0;
        i < n.length;
        i++
      ) {
        var a = e.leftDelta + (e.xAxisWidth * (n[i][0] - e.xAxisInterval[0])) / (e.xAxisInterval[1] - e.xAxisInterval[0]),
          l = e.height - e.bottomDelta - (e.yAxisHeight * (n[i][1] - e.yAxisInterval[0])) / (e.yAxisInterval[1] - e.yAxisInterval[0]);
        "column" == e.options.type && (a -= i * s), (n[i] = [a, l]);
      }
      return n;
    }
    function v(e) {
      for (var t = "", n = 0; n < e.length; n++) t = 0 == n ? "M " + e[0][0] + "," + e[0][1] : t + " L " + e[n][0] + "," + e[n][1];
      return t;
    }
    function u(e, t) {
      for (var n = p(e), s = 0; s < e.datasetScaledFlat[t].length; s++) e.datasetScaledFlat[t][s] = [e.datasetScaled[t][s][0], n];
      "area" == e.options.type && (e.datasetAreaScaledFlat[t] = h(e, e.datasetScaledFlat[t]));
    }
    function g(e, t) {
      var n = "",
        s = e.length,
        i = JSON.parse(JSON.stringify(e));
      t && ((s -= 3), i.splice(-3, 3));
      for (var a, l, o, r, d, c = 0; c < s; c++) n = 0 == c ? "M " + e[0][0] + "," + e[0][1] : n + " " + ((a = e[c]), (d = r = void 0), (r = m((o = i)[(l = c) - 1], o[l - 2], a)), (d = m(a, o[l - 1], o[l + 1], !0)), "C " + r[0] + "," + r[1] + " " + d[0] + "," + d[1] + " " + a[0] + "," + a[1]);
      if (t) for (var u = s; u < e.length; u++) n = n + " L " + e[u][0] + "," + e[u][1];
      return n;
    }
    function m(e, t, n, s) {
      var i,
        a,
        l,
        o,
        r = ((i = t || e), (l = (a = n || e)[0] - i[0]), (o = a[1] - i[1]), { length: Math.sqrt(Math.pow(l, 2) + Math.pow(o, 2)), angle: Math.atan2(o, l) }),
        d = r.angle + (s ? Math.PI : 0),
        c = 0.2 * r.length;
      return [e[0] + Math.cos(d) * c, e[1] + Math.sin(d) * c];
    }
    function h(e, t) {
      var n = JSON.parse(JSON.stringify(t)),
        s = n[0],
        i = n[n.length - 1],
        a = p(e);
      return n.push([i[0], a]), n.push([e.leftDelta, a]), n.push([e.leftDelta, s[1]]), n;
    }
    function p(e) {
      var t = e.height - e.bottomDelta;
      return e.options.fillOrigin && (t = e.height - e.bottomDelta - (e.yAxisHeight * (0 - e.yAxisInterval[0])) / (e.yAxisInterval[1] - e.yAxisInterval[0])), e.options.type && "column" == e.options.type && (t = e.yZero), t;
    }
    function f(e, t, n) {
      var s = document.createElementNS("http://www.w3.org/2000/svg", "g"),
        i = 0;
      "column" == e.options.type && (i = (0.5 * e.xAxisWidth) / t.length);
      for (var a = 0; a < t.length; a++) {
        var l = document.createElementNS("http://www.w3.org/2000/svg", "circle");
        Util.setAttributes(l, { class: "chart__marker js-chart__marker chart__marker--" + (n + 1), cx: t[a][0] + i, cy: t[a][1], r: 2, "data-set": n, "data-index": a }), s.appendChild(l);
      }
      return s;
    }
    function b(e, t) {
      for (var n = 0; n < e.length; n++) e[n] = t(e[n]);
      return e;
    }
    function y(e, t) {
      if (!L(e[0])) return 0;
      for (var n = 0, s = 0; s < e.length; s++) {
        var i = e[s].getBBox()[t];
        n < i && (n = i);
      }
      return n;
    }
    function w(e, t) {
      for (var n = [], s = 0; s < e.options.datasets.length; s++)
        n.push(
          (function (e, t) {
            for (var n, s, i = 1 < e[0].length, a = 0; a < e.length; a++) (s = i ? (t ? e[a][1] : e[a][0]) : e[a]), (0 == a || s < n) && (n = s);
            return n;
          })(e.options.datasets[s].data, t)
        );
      return Math.min.apply(null, n);
    }
    function C(e, t) {
      for (var n = [], s = 0; s < e.options.datasets.length; s++)
        n.push(
          (function (e, t) {
            for (var n, s, i = 1 < e[0].length, a = 0; a < e.length; a++) (s = i ? (t ? e[a][1] : e[a][0]) : e[a]), (0 == a || n < s) && (n = s);
            return n;
          })(e.options.datasets[s].data, t)
        );
      return Math.max.apply(null, n);
    }
    function _(e, t, n) {
      var s,
        i,
        a,
        l,
        o = n || 10;
      function r() {
        (i = d(t - e, !1)), (s = d(i / (o - 1), !0)), (a = Math.floor(e / s) * s), (l = Math.ceil(t / s) * s);
      }
      function d(e, t) {
        var n = Math.floor(Math.log(e) * Math.LOG10E),
          s = e / Math.pow(10, n),
          i = t ? (s < 1.5 ? 1 : s < 3 ? 2 : s < 7 ? 5 : 10) : s <= 1 ? 1 : s <= 2 ? 2 : s <= 5 ? 5 : 10;
        return i * Math.pow(10, n);
      }
      r(),
        (this.setMaxTicks = function (e) {
          (o = e), r();
        }),
        (this.getNiceUpperBound = function () {
          return l;
        }),
        (this.getNiceLowerBound = function () {
          return a;
        }),
        (this.getTickSpacing = function () {
          return s;
        });
    }
    function E(e) {
      if (U) {
        (e.markers = []), (e.bars = []);
        for (var t, n, s = e.element.getElementsByClassName("js-chart__set"), i = 0; i < s.length; i++) (e.markers[i] = s[i].querySelectorAll(".js-chart__marker")), e.options.type && "column" == e.options.type && (e.bars[i] = s[i].querySelectorAll(".js-chart__data-bar"));
        e.options.yIndicator && ((t = document.createElementNS("http://www.w3.org/2000/svg", "line")), Util.setAttributes(t, { x1: 0, y1: e.topDelta, x2: 0, y2: e.topDelta + e.yAxisHeight, transform: "translate(" + e.leftDelta + " " + e.topDelta + ")", class: "chart__y-indicator js-chart__y-indicator is-hidden" }), e.svg.insertBefore(t, e.element.getElementsByClassName("js-chart__dataset")[0]), (e.interLine = e.element.getElementsByClassName("js-chart__y-indicator")[0])),
          e.tooltipOn && ((n = document.createElement("div")).setAttribute("class", "chart__tooltip js-chart__tooltip is-hidden " + e.tooltipClasses), e.element.appendChild(n), (e.tooltip = e.element.getElementsByClassName("js-chart__tooltip")[0])),
          (function (e) {
            if (!e.options.yIndicator && !e.tooltipOn) return;
            if (
              ((e.chartArea = e.element.getElementsByClassName("js-chart__axis-labels--y")[0]),
              (e.eventIds.hover = function (e) {
                switch (e.type) {
                  case "mouseenter":
                    x(this, e);
                    break;
                  case "mousemove":
                  case "dragging":
                    var t = this;
                    t.hoverId = window.requestAnimationFrame
                      ? window.requestAnimationFrame(function () {
                          x(t, e);
                        })
                      : setTimeout(function () {
                          x(t, e);
                        });
                    break;
                  case "mouseleave":
                  case "dragEnd":
                    !(function (e) {
                      e.hoverId && (window.requestAnimationFrame ? window.cancelAnimationFrame(e.hoverId) : clearTimeout(e.hoverId), (e.hoverId = !1));
                      e.tooltipOn && Util.addClass(e.tooltip, "is-hidden");
                      e.options.yIndicator && Util.addClass(e.interLine, "is-hidden");
                      A(e, !1),
                        k(e, !1),
                        (e.selectedMarker = !1),
                        (function (e) {
                          if (!e.options.externalData) return;
                          for (var t = 0; t < e.options.datasets.length; t++) e.extDataX[t][0] && (e.extDataX[t][0].innerHTML = e.extDataXInit[t][0]), e.extDataY[t][0] && (e.extDataY[t][0].innerHTML = e.extDataYInit[t][0]);
                        })(e),
                        (e.hovering = !1);
                    })(this);
                }
              }.bind(e)),
              e.chartArea.addEventListener("mouseenter", e.eventIds.hover),
              e.chartArea.addEventListener("mousemove", e.eventIds.hover),
              e.chartArea.addEventListener("mouseleave", e.eventIds.hover),
              !SwipeContent)
            )
              return;
            new SwipeContent(e.element), e.element.addEventListener("dragStart", e.eventIds.hover), e.element.addEventListener("dragging", e.eventIds.hover), e.element.addEventListener("dragEnd", e.eventIds.hover);
          })(e);
      }
    }
    function x(e, t) {
      var n, s, i, a, l, o, r, d, c;
      e.hovering ||
        ((e.options.yIndicator || e.tooltipOn) &&
          !(e.hovering = !0) !==
            (n = (function (e, t) {
              if (e.markers[0].length < 1) return !1;
              for (var n = (t.detail.x ? t.detail.x : t.clientX) - e.svg.getBoundingClientRect().left, s = 0, i = Math.abs(e.markers[0][0].getBBox().x - n), a = 1; a < e.markers[0].length; a++) {
                var l = Math.abs(e.markers[0][a].getBBox().x - n);
                l < i && ((i = l), (s = a));
              }
              return s;
            })(e, t)) &&
          (n !== e.selectedMarker &&
            (A(e, !1),
            k(e, !1),
            (e.selectedMarker = n),
            A(e, !0),
            k(e, !0),
            (s = e.markers[0][e.selectedMarker].getBBox()),
            e.options.yIndicator && (Util.removeClass(e.interLine, "is-hidden"), e.interLine.setAttribute("transform", "translate(" + (s.x + s.width / 2) + " 0)")),
            e.tooltipOn &&
              (Util.removeClass(e.tooltip, "is-hidden"),
              (c = (d = e).markers[0][d.selectedMarker]),
              (d.tooltip.innerHTML = (function (e, t, n) {
                var s = "";
                {
                  var i;
                  s = e.options.tooltip.customHTML ? e.options.tooltip.customHTML(t, e.options, n) : ((i = 1 < e.options.datasets[n].data[t].length), e.options.xAxis && e.options.xAxis.labels && 1 < e.options.xAxis.labels.length ? (s = e.options.xAxis.labels[t] + " - ") : i && (s = e.options.datasets[n].data[t][0] + " - "), i ? s + e.options.datasets[n].data[t][1] : s + e.options.datasets[n].data[t]);
                }
                return s;
              })(d, c.getAttribute("data-index"), c.getAttribute("data-set"))),
              (a = (i = e).markers[0][i.selectedMarker]),
              (l = a.getBoundingClientRect()),
              (o = a.getBBox()),
              (r = i.svg.getBoundingClientRect()),
              "column" == i.options.type
                ? (function (e, t, n, s) {
                    (e.tooltip.style.left = s.x + n.width / 2 + "px"),
                      (e.tooltip.style.right = "auto"),
                      (e.tooltip.style.transform = "translateX(-50%) translateY(-100%)"),
                      e.tooltipPosition
                        ? "top" == e.tooltipPosition
                          ? ((e.tooltip.style.top = e.topDelta + e.tooltip.getBoundingClientRect().height + 5 + "px"), (e.tooltip.style.bottom = "auto"))
                          : ((e.tooltip.style.bottom = e.bottomDelta + 5 + "px"), (e.tooltip.style.top = "auto"), (e.tooltip.style.transform = "translateX(-50%)"))
                        : parseInt(t.getAttribute("cy")) > e.yZero
                        ? ((e.tooltip.style.top = s.y + s.height + 6 + "px"), (e.tooltip.style.transform = "translateX(-50%)"))
                        : (e.tooltip.style.top = s.y - 6 + "px");
                  })(i, a, l, o)
                : (function (e, t, n, s, i) {
                    t.left - s <= i / 2 ? ((e.tooltip.style.left = n.x + n.width + 2 + "px"), (e.tooltip.style.right = "auto")) : ((e.tooltip.style.left = "auto"), (e.tooltip.style.right = i - n.x + 2 + "px")), (e.tooltip.style.transform = "translateY(-100%)");
                    e.tooltipPosition ? ("top" == e.tooltipPosition ? ((e.tooltip.style.top = e.topDelta + e.tooltip.getBoundingClientRect().height + 5 + "px"), (e.tooltip.style.bottom = "auto")) : ((e.tooltip.style.top = "auto"), (e.tooltip.style.bottom = e.bottomDelta + 5 + "px"), (e.tooltip.style.transform = ""))) : (e.tooltip.style.top = n.y + "px");
                  })(i, l, o, r.left, r.width))),
          (function (e) {
            if (!e.extDataX || !e.extDataY) return;
            var t = e.markers[0][e.selectedMarker];
            if (!t) return;
            for (var n = t.getAttribute("data-index"), s = 1 < e.options.datasets[0].data[0].length, i = 0; i < e.options.datasets.length; i++)
              !(function (e, t, n, s) {
                if (!e.extDataX[n] || !e.extDataX[n][0]) return;
                var i = "";
                e.options.externalData.customXHTML ? (i = e.options.externalData.customXHTML(t, e.options, n)) : e.options.xAxis && e.options.xAxis.labels && 1 < e.options.xAxis.labels.length ? (i = e.options.xAxis.labels[t]) : s && (htmlContent = e.options.datasets[n].data[t][0]);
                e.extDataX[n][0].innerHTML = i;
              })(e, n, i, s),
                (function (e, t, n, s) {
                  if (!e.extDataY[n] || !e.extDataY[n][0]) return;
                  var i = "";
                  i = e.options.externalData.customYHTML ? e.options.externalData.customYHTML(t, e.options, n) : s ? e.options.datasets[n].data[t][1] : e.options.datasets[n].data[t];
                  e.extDataY[n][0].innerHTML = i;
                })(e, n, i, s);
          })(e),
          (e.hovering = !1)));
    }
    function A(e, t) {
      for (var n = 0; n < e.markers.length; n++) e.markers[n] && e.markers[n][e.selectedMarker] && Util.toggleClass(e.markers[n][e.selectedMarker], e.selectedMarkerClass, t);
    }
    function k(e, t) {
      if (e.options.type && "column" == e.options.type) for (var n = 0; n < e.bars.length; n++) e.bars[n] && e.bars[n][e.selectedMarker] && Util.toggleClass(e.bars[n][e.selectedMarker], e.selectedBarClass, t);
    }
    function I(r, d) {
      var c = null,
        u = r.datasetScaledFlat,
        m = r.datasetScaled;
      "fill" == d && ((u = r.datasetAreaScaledFlat), (m = r.datasetAreaScaled));
      var h = function (e) {
        var t = e - (c = c || e);
        600 < t && (t = 600);
        for (var n = 0; n < m.length; n++) {
          for (var s = [], i = r.element.getElementsByClassName("js-chart__data-" + d + "--" + (n + 1))[0], a = 0; a < m[n].length; a++) {
            var l = Math.easeOutQuart(t, u[n][a][1], m[n][a][1] - u[n][a][1], 600);
            s[a] = [m[n][a][0], l];
          }
          var o = r.options.smooth ? g(s, "fill" == d) : v(s);
          i.setAttribute("d", o);
        }
        t < 600 && window.requestAnimationFrame(h);
      };
      window.requestAnimationFrame(h);
    }
    function L(e) {
      return e && 0 < e.getClientRects().length;
    }
    function s(e, t, n) {
      for (var s = 0; s < t.length; s++) (n[s] = []), t[s][0] && (n[s][0] = t[s][0].innerHTML);
    }
    function B(e, t, n, s, i) {
      var a = e.columnDelta + n * (e.columnWidth + e.columnGap),
        l = 0;
      return (
        e.options.stacked &&
          ((a = e.columnDelta),
          (l = (function (e, t, n, s) {
            for (var i = 0, a = 0; a < n; a++) t[a] && t[a][s] && (i += e.height - e.bottomDelta - t[a][s][1]);
            return i;
          })(e, i, n, s))),
        [
          [t[0] + a, e.yZero - l],
          [t[0] + a, t[1] - l],
          [t[0] + a + e.columnWidth, t[1] - l],
          [t[0] + a + e.columnWidth, e.yZero - l],
        ]
      );
    }
    function N(e, t) {
      var n = parseInt(e.options.column.radius),
        s = "0,0,1",
        i = "-",
        a = ",",
        l = t[1][1] + n;
      e.yAxisInterval[0] < 0 && t[1][1] > e.yZero && ((s = "0,0,0"), (i = ","), (a = "-"), (l = t[1][1] - n));
      var o = "M " + t[0][0] + " " + t[0][1];
      return (o = (o = (o = (o = (o = o + " V " + l) + " a " + n + "," + n + "," + s + "," + n + i + n) + " H " + (t[2][0] - n)) + " a " + n + "," + n + "," + s + "," + n + a + n) + " V " + t[3][1]);
    }
    (n.defaults = { element: "", type: "line", xAxis: {}, yAxis: {}, datasets: [], tooltip: { enabled: !1, classes: !1, customHTM: !1 }, yIndicator: !0, padding: 10 }), (window.Chart = n);
    var U = "IntersectionObserver" in window && "IntersectionObserverEntry" in window && "intersectionRatio" in window.IntersectionObserverEntry.prototype;
  })(),
  (function () {
    var e = document.getElementsByClassName("js-billing-checkbox");
    if (0 < e.length) {
      var t = document.getElementsByClassName("js-billing-info");
      if (0 == t.length) return;
      n(e[0], t[0]),
        e[0].addEventListener("change", function () {
          n(e[0], t[0]);
        });
    }
    function n(e, t) {
      Util.toggleClass(t, "is-visible", !e.checked);
    }
  })(),
  (function () {
    function e(a) {
      var l = a.getElementsByClassName("js-comments__vote-label");
      a.addEventListener("click", function () {
        var e,
          t,
          n,
          s,
          i = "true" == a.getAttribute("aria-pressed");
        a.setAttribute("aria-pressed", !i),
          Util.toggleClass(a, "comments__vote-btn--pressed", !i),
          (function (e, t) {
            if (0 == e.length) return;
            var n = parseInt(e[0].textContent);
            e[0].textContent = t ? n - 1 : n + 1;
          })(l, i),
          (e = a),
          (n = i),
          (s = new CustomEvent("newVote", { detail: { count: 0 != (t = l).length && parseInt(t[0].textContent), upVote: !n } })),
          e.dispatchEvent(s);
      });
    }
    var t = document.getElementsByClassName("js-comments__vote-btn");
    if (0 < t.length) for (var n = 0; n < t.length; n++) e(t[n]);
  })(),
  (function () {
    function e(e) {
      var t;
      (this.options = Util.extend(DatePicker.defaults, e)),
        (this.element = this.options.element),
        (this.inputStart = this.element.getElementsByClassName("js-date-range__text--start")[0]),
        (this.inputEnd = this.element.getElementsByClassName("js-date-range__text--end")[0]),
        (this.trigger = this.element.getElementsByClassName("js-date-range__trigger")[0]),
        (this.triggerLabel = this.trigger.getAttribute("aria-label")),
        (this.datePicker = this.element.getElementsByClassName("js-date-picker")[0]),
        (this.body = this.datePicker.getElementsByClassName("js-date-picker__dates")[0]),
        (this.navigation = this.datePicker.getElementsByClassName("js-date-picker__month-nav")[0]),
        (this.heading = this.datePicker.getElementsByClassName("js-date-picker__month-label")[0]),
        (this.pickerVisible = !1),
        (this.dateIndexes = [(t = this.options.dateFormat.toLowerCase().replace(/-/g, "")).indexOf("d"), t.indexOf("m"), t.indexOf("y")]),
        (this.dateSelected = []),
        (this.selectedDay = []),
        (this.selectedMonth = []),
        (this.selectedYear = []),
        (this.dateToSelect = 0),
        (this.firstFocusable = !1),
        (this.lastFocusable = !1),
        (this.dateValueStartEl = this.element.getElementsByClassName("js-date-range__value--start")),
        (this.dateValueEndEl = this.element.getElementsByClassName("js-date-range__value--end")),
        0 < this.dateValueStartEl.length && (this.dateValueStartElLabel = this.dateValueStartEl[0].textContent),
        0 < this.dateValueEndEl.length && (this.dateValueEndElLabel = this.dateValueEndEl[0].textContent),
        (this.triggerLabelWrapper = this.trigger.getElementsByClassName("js-date-range__trigger-label")),
        (this.selectedStartClass = "date-picker__date--selected js-date-picker__date--range-start"),
        (this.selectedEndClass = "date-picker__date--selected date-picker__date--range-end js-date-picker__date--range-end"),
        (this.inBetweenClass = "date-picker__date--range"),
        (this.mouseMoving = !1),
        (this.predefOptions = this.element.previousElementSibling),
        (function (e) {
          n(e.inputStart), n(e.inputEnd);
          var t = document.createElement("div");
          t.setAttribute("aria-live", "polite"), Util.addClass(t, "sr-only js-date-range__sr-live"), e.element.appendChild(t), (e.srLiveReagionM = e.element.getElementsByClassName("js-date-range__sr-live")[0]);
        })(this),
        i(this),
        (function (r) {
          r.trigger &&
            r.trigger.addEventListener("click", function (e) {
              var t, n;
              e.preventDefault(), (r.pickerVisible = !1), (t = r).pickerVisible ? c(t) : (i(t), d(t, n)), r.trigger.setAttribute("aria-expanded", "true");
            });
          r.navigation.addEventListener("click", function (e) {
            e.preventDefault();
            var t = e.target.closest(".js-date-picker__month-nav-btn");
            t && (Util.hasClass(t, "js-date-picker__month-nav-btn--prev") ? o : l)(r, !0);
          }),
            window.addEventListener("keydown", function (e) {
              if ((e.keyCode && 27 == e.keyCode) || (e.key && "escape" == e.key.toLowerCase())) {
                if (!r.pickerVisible) return;
                document.activeElement.closest(".js-date-picker") && r.trigger.focus(), c(r);
              }
            }),
            window.addEventListener("click", function (e) {
              e.target.closest(".js-date-picker") || e.target.closest(".js-date-range__trigger") || !r.pickerVisible || c(r);
            }),
            r.body.addEventListener("keydown", function (e) {
              var t = r.currentDay;
              (e.keyCode && 40 == e.keyCode) || (e.key && "arrowdown" == e.key.toLowerCase())
                ? y((t += 7), r)
                : (e.keyCode && 39 == e.keyCode) || (e.key && "arrowright" == e.key.toLowerCase())
                ? y((t += 1), r)
                : (e.keyCode && 37 == e.keyCode) || (e.key && "arrowleft" == e.key.toLowerCase())
                ? y(--t, r)
                : (e.keyCode && 38 == e.keyCode) || (e.key && "arrowup" == e.key.toLowerCase())
                ? y((t -= 7), r)
                : (e.keyCode && 35 == e.keyCode) || (e.key && "end" == e.key.toLowerCase())
                ? (e.preventDefault(), y((t = t + 6 - v(r.currentYear, r.currentMonth, t)), r))
                : (e.keyCode && 36 == e.keyCode) || (e.key && "home" == e.key.toLowerCase())
                ? (e.preventDefault(), y((t -= v(r.currentYear, r.currentMonth, t)), r))
                : (e.keyCode && 34 == e.keyCode) || (e.key && "pagedown" == e.key.toLowerCase())
                ? (e.preventDefault(), l(r), B(r))
                : ((e.keyCode && 33 == e.keyCode) || (e.key && "pageup" == e.key.toLowerCase())) && (e.preventDefault(), o(r), B(r));
            }),
            r.datePicker.addEventListener("keydown", function (e) {
              ((e.keyCode && 9 == e.keyCode) || (e.key && "Tab" == e.key)) &&
                (function (e, t) {
                  t.firstFocusable == document.activeElement && e.shiftKey && (e.preventDefault(), t.lastFocusable.focus());
                  t.lastFocusable != document.activeElement || e.shiftKey || (e.preventDefault(), t.firstFocusable.focus());
                })(e, r);
            }),
            r.body.addEventListener("click", function (e) {
              e.preventDefault();
              var t,
                n,
                s,
                i,
                a,
                l,
                o = e.target.closest("button");
              o &&
                (1 == r.dateToSelect && ((i = o), (a = [(s = r).currentYear, s.currentMonth, parseInt(i.textContent)]), (l = [s.selectedYear[0], s.selectedMonth[0], s.selectedDay[0]]), L(a, l)) && (r.dateToSelect = 0),
                (r.dateSelected[r.dateToSelect] = !0),
                (r.selectedDay[r.dateToSelect] = parseInt(o.innerText)),
                (r.selectedMonth[r.dateToSelect] = r.currentMonth),
                (r.selectedYear[r.dateToSelect] = r.currentYear),
                0 == r.dateToSelect
                  ? (((n = r).inputStart.value = f(n, 0)),
                    (r.dateToSelect = 1),
                    (function (e, t) {
                      (e.dateSelected[1] = !1), (e.selectedDay[1] = !1), (e.selectedMonth[1] = !1), (e.selectedYear[1] = !1), (e.inputEnd.value = "");
                      var n = e.element.getElementsByClassName("js-date-picker__date--range-start");
                      0 < n.length && Util.removeClass(n[0], e.selectedStartClass + " date-picker__date--range-start");
                      var s = e.element.getElementsByClassName("js-date-picker__date--range-end");
                      0 < s.length && Util.removeClass(s[0], e.selectedEndClass);
                      I(e), Util.addClass(t, e.selectedStartClass);
                    })(r, o))
                  : (((t = r).inputEnd.value = f(t, 1)), (r.dateToSelect = 0), c(r)),
                C(r),
                _(r),
                x(r));
            }),
            r.body.addEventListener("mousemove", function (e) {
              var t = e.target.closest(".js-date-picker__date");
              t && r.dateSelected[0] && !r.dateSelected[1] && A(r, t);
            }),
            r.body.addEventListener("mouseleave", function (e) {
              r.dateSelected[1] || (I(r), N(r));
            }),
            r.inputStart.addEventListener("focusout", function (e) {
              s(r, r.inputStart);
            }),
            r.inputEnd.addEventListener("focusout", function (e) {
              s(r, r.inputEnd);
            });
        })(this),
        U(this),
        (function (t) {
          if (!t.predefOptions || !Util.hasClass(t.predefOptions, "js-date-range-select")) return;
          var n = t.predefOptions.querySelector("select");
          if (!n) return;
          "custom" == n.options[n.selectedIndex].value && Util.removeClass(t.element, "is-hidden");
          n.addEventListener("change", function (e) {
            "custom" == n.options[n.selectedIndex].value ? (Util.removeClass(t.element, "is-hidden"), U(t), t.trigger.focus()) : Util.addClass(t.element, "is-hidden");
          });
        })(this);
    }
    function n(e) {
      e.setAttribute("tabindex", "-1");
      var t = e.closest(".js-date-range__input");
      t && (Util.addClass(t, "sr-only"), (t.style.display = "block"));
    }
    function s(e, t) {
      var n = r(e, t.value);
      !n || isNaN(new Date(n).getTime()) ? (t.value = "") : i(e);
    }
    function i(e) {
      t(e, 0), t(e, 1), C(e), _(e), x(e);
    }
    function t(e, t) {
      var n,
        s = !1,
        i = 0 == t ? e.inputStart.value : e.inputEnd.value;
      (e.dateSelected[t] = !1), "" != i && ((n = r(e, i)), (e.dateSelected[t] = !0), (s = n)), 0 == t && ((e.currentDay = u(s)), (e.currentMonth = m(s)), (e.currentYear = h(s))), (e.selectedDay[t] = !!e.dateSelected[t] && u(s)), (e.selectedMonth[t] = !!e.dateSelected[t] && m(s)), (e.selectedYear[t] = !!e.dateSelected[t] && h(s));
    }
    function u(e) {
      return e ? ((t = parseInt(e.split("-")[2])), isNaN(t) ? u(!1) : t) : new Date().getDate();
      var t;
    }
    function m(e) {
      return e ? ((t = parseInt(e.split("-")[1]) - 1), isNaN(t) ? m(!1) : t) : new Date().getMonth();
      var t;
    }
    function h(e) {
      return e ? ((t = parseInt(e.split("-")[0])), isNaN(t) ? h(!1) : t) : new Date().getFullYear();
      var t;
    }
    function l(e, t) {
      (e.currentYear = 11 === e.currentMonth ? e.currentYear + 1 : e.currentYear), (e.currentMonth = (e.currentMonth + 1) % 12), (e.currentDay = a(e)), d(e, t), (e.srLiveReagionM.textContent = e.options.months[e.currentMonth] + " " + e.currentYear);
    }
    function o(e, t) {
      (e.currentYear = 0 === e.currentMonth ? e.currentYear - 1 : e.currentYear), (e.currentMonth = 0 === e.currentMonth ? 11 : e.currentMonth - 1), (e.currentDay = a(e)), d(e, t), (e.srLiveReagionM.textContent = e.options.months[e.currentMonth] + " " + e.currentYear);
    }
    function a(e) {
      return e.currentDay > g(e.currentYear, e.currentMonth) ? 1 : e.currentDay;
    }
    function g(e, t) {
      return 32 - new Date(e, t, 32).getDate();
    }
    function d(e, t) {
      var n = v(e.currentYear, e.currentMonth, "01");
      (e.body.innerHTML = ""), (e.heading.innerHTML = e.options.months[e.currentMonth] + " " + e.currentYear);
      for (var s, i, a = 1, l = "", o = 0; o < 6; o++)
        for (var r = 0; r < 7; r++)
          if (0 === o && r < n) l += "<li></li>";
          else {
            if (a > g(e.currentYear, e.currentMonth)) break;
            var d = "",
              c = "-1";
            a === e.currentDay && (c = "0"),
              e.dateSelected[0] || e.dateSelected[1] || m() != e.currentMonth || h() != e.currentYear || a != u() || (d += " date-picker__date--today"),
              e.dateSelected[0] && a === e.selectedDay[0] && e.currentYear === e.selectedYear[0] && e.currentMonth === e.selectedMonth[0] && (d = d + "  " + e.selectedStartClass),
              e.dateSelected[1] && a === e.selectedDay[1] && e.currentYear === e.selectedYear[1] && e.currentMonth === e.selectedMonth[1] && (d = d + "  " + e.selectedEndClass),
              (l = l + '<li><button class="date-picker__date' + d + ' js-date-picker__date" tabindex="' + c + '">' + a + "</button></li>"),
              a++;
          }
      (e.body.innerHTML = l),
        e.pickerVisible || Util.addClass(e.datePicker, "date-picker--is-visible"),
        (e.pickerVisible = !0),
        t || e.body.querySelector('button[tabindex="0"]').focus(),
        w(e),
        e.dateSelected[1] &&
          (0 < (s = e.element.getElementsByClassName("js-date-picker__date--range-end")).length
            ? k(e, s[0])
            : (function (e) {
                var t = !1,
                  n = !1;
                (e.currentYear < e.selectedYear[1] || (e.currentYear == e.selectedYear[1] && e.currentMonth <= e.selectedMonth[1])) && (t = !0);
                (e.currentYear > e.selectedYear[0] || (e.currentYear == e.selectedYear[0] && e.currentMonth >= e.selectedMonth[0])) && (n = !0);
                return t && n;
              })(e) && ((i = e.element.getElementsByClassName("js-date-picker__date")), k(e, i[i.length - 1]))),
        p(e, !0);
    }
    function p(e, t) {
      e.triggerLabelWrapper.length < 1 || e.triggerLabelWrapper[0].children.length < 2 || (t ? (Util.addClass(e.triggerLabelWrapper[0].children[0], "is-hidden"), Util.removeClass(e.triggerLabelWrapper[0].children[1], "is-hidden"), U(e)) : e.dateSelected[0] || e.dateSelected[1] || (Util.addClass(e.triggerLabelWrapper[0].children[1], "is-hidden"), Util.removeClass(e.triggerLabelWrapper[0].children[0], "is-hidden")));
    }
    function c(e) {
      Util.removeClass(e.datePicker, "date-picker--is-visible"), (e.pickerVisible = !1), (e.firstFocusable = !1), (e.lastFocusable = !1), e.trigger && e.trigger.setAttribute("aria-expanded", "false"), document.activeElement.closest(".js-date-picker") && e.trigger.focus(), p(e, !1);
    }
    function v(e, t, n) {
      var s = new Date(e, t, n).getDay() - 1;
      return s < 0 && (s = 6), s;
    }
    function f(e, t) {
      var n = [];
      return (n[e.dateIndexes[0]] = b(e.selectedDay[t])), (n[e.dateIndexes[1]] = b(e.selectedMonth[t] + 1)), (n[e.dateIndexes[2]] = e.selectedYear[t]), n[0] + e.options.dateSeparator + n[1] + e.options.dateSeparator + n[2];
    }
    function r(e, t) {
      var n = t.split(e.options.dateSeparator);
      return !(n.length < 3) && n[e.dateIndexes[2]] + "-" + n[e.dateIndexes[1]] + "-" + n[e.dateIndexes[0]];
    }
    function b(e) {
      return e < 10 ? "0" + e : e;
    }
    function y(e, t) {
      var n = g(t.currentYear, t.currentMonth);
      if (n < e) (t.currentDay = e - n), l(t, !1), B(t);
      else if (e < 1) {
        var s = 0 == t.currentMonth ? 11 : t.currentMonth - 1;
        (t.currentDay = g(t.currentYear, s) + e), o(t, !1), B(t);
      } else {
        (t.currentDay = e), t.body.querySelector('button[tabindex="0"]').setAttribute("tabindex", "-1");
        for (var i = t.body.getElementsByTagName("button"), a = 0; a < i.length; a++)
          if (i[a].textContent == t.currentDay) {
            i[a].setAttribute("tabindex", "0"), i[a].focus();
            break;
          }
        w(t), B(t);
      }
    }
    function w(e) {
      var t = e.datePicker.querySelectorAll('[href], input:not([disabled]), select:not([disabled]), textarea:not([disabled]), button:not([disabled]), iframe, object, embed, [tabindex]:not([tabindex="-1"]), [contenteditable], audio[controls], video[controls], summary');
      !(function (e, t) {
        for (var n = 0; n < e.length; n++) if ((e[n].offsetWidth || e[n].offsetHeight || e[n].getClientRects().length) && "-1" != e[n].getAttribute("tabindex")) return (t.firstFocusable = e[n]);
      })(t, e),
        (function (e, t) {
          for (var n = e.length - 1; 0 <= n; n--) if ((e[n].offsetWidth || e[n].offsetHeight || e[n].getClientRects().length) && "-1" != e[n].getAttribute("tabindex")) return (t.lastFocusable = e[n]);
        })(t, e);
    }
    function C(e) {
      var t;
      e.trigger && ((t = ""), e.selectedYear[0] && e.selectedMonth[0] && e.selectedDay[0] && (t = t + ", start date selected is " + new Date(e.selectedYear[0], e.selectedMonth[0], e.selectedDay[0]).toDateString()), e.selectedYear[1] && e.selectedMonth[1] && e.selectedDay[1] && (t = t + ", end date selected is " + new Date(e.selectedYear[1], e.selectedMonth[1], e.selectedDay[1]).toDateString()), e.trigger.setAttribute("aria-label", e.triggerLabel + t));
    }
    function _(e) {
      0 < e.dateValueStartEl.length && E(e, 0, e.dateValueStartEl[0], e.dateValueStartElLabel), 0 < e.dateValueEndEl.length && E(e, 1, e.dateValueEndEl[0], e.dateValueEndElLabel);
    }
    function E(e, t, n, s) {
      e.selectedYear[t] && e.selectedMonth[t] && e.selectedDay[t] ? (n.textContent = f(e, t)) : (n.textContent = s);
    }
    function x(e) {
      var t = !1;
      e.dateSelected[0] && !e.dateSelected[1] && (t = "Start date selected is " + new Date(e.selectedYear[0], e.selectedMonth[0], e.selectedDay[0]).toDateString() + ", select end date"), t && (e.srLiveReagionM.textContent = t);
    }
    function A(e, t) {
      e.mouseMoving ||
        ((e.mouseMoving = !0),
        window.requestAnimationFrame(function () {
          I(e), k(e, t), N(e), (e.mouseMoving = !1);
        }));
    }
    function k(e, t) {
      var n, s;
      t && (L([e.currentYear, e.currentMonth, parseInt(t.textContent)], [e.selectedYear[0], e.selectedMonth[0], e.selectedDay[0]]) || (Util.hasClass(t, "js-date-picker__date--range-start") ? Util.addClass(t, "date-picker__date--range-start") : (Util.hasClass(t, "js-date-picker__date--range-end") || Util.addClass(t, e.inBetweenClass), !(n = t.closest("li").previousElementSibling) || ((s = n.querySelector("button")) && k(e, s)))));
    }
    function I(e) {
      for (var t = e.element.getElementsByClassName(e.inBetweenClass); t[0]; ) Util.removeClass(t[0], e.inBetweenClass);
    }
    function L(e, t) {
      return new Date(e[0], e[1], e[2]) < new Date(t[0], t[1], t[2]);
    }
    function B(e) {
      e.dateSelected[0] && !e.dateSelected[1] && A(e, e.element.querySelector('.js-date-picker__date[tabindex="0"]'));
    }
    function N(e) {
      var t;
      e.dateSelected[0] && (0 != e.datePicker.getElementsByClassName(e.inBetweenClass).length || (0 < (t = e.datePicker.getElementsByClassName("date-picker__date--range-start")).length && Util.removeClass(t[0], "date-picker__date--range-start")));
    }
    function U(e) {
      (e.datePicker.style.left = "0px"), (e.datePicker.style.right = "auto"), e.datePicker.getBoundingClientRect().right > window.innerWidth && ((e.datePicker.style.left = "auto"), (e.datePicker.style.right = "0px"));
    }
    (e.defaults = { element: "", months: ["January", "February", "March", "April", "May", "June", "July", "August", "September", "October", "November", "December"], dateFormat: "d-m-y", dateSeparator: "/" }), (window.DateRange = e);
    var S,
      j,
      T = document.getElementsByClassName("js-date-range");
    if (0 < T.length)
      for (var M = 0; M < T.length; M++)
        (j = void 0),
          (j = { element: T[(S = M)] }),
          T[S].getAttribute("data-date-format") && (j.dateFormat = T[S].getAttribute("data-date-format")),
          T[S].getAttribute("data-date-separator") && (j.dateSeparator = T[S].getAttribute("data-date-separator")),
          T[S].getAttribute("data-months") &&
            (j.months = T[S].getAttribute("data-months")
              .split(",")
              .map(function (e) {
                return e.trim();
              })),
          new e(j);
  })(),
  (function () {
    var t = function (e) {
      (this.options = Util.extend(t.defaults, e)),
        (this.element = this.options.element),
        (this.area = this.element.getElementsByClassName("js-ddf__area")),
        (this.input = this.element.getElementsByClassName("js-ddf__input")),
        (this.label = this.element.getElementsByClassName("js-ddf__label")),
        (this.labelEnd = this.element.getElementsByClassName("js-ddf__files-counter")),
        (this.labelEndMessage = 0 < this.labelEnd.length && this.labelEnd[0].innerHTML.split("%")),
        (this.droppedFiles = []),
        (this.lastDroppedFiles = []),
        (this.options.acceptFile = []),
        (this.progress = !1),
        (this.progressObj = []),
        (this.progressCompleteClass = "ddf__progress--complete"),
        (function (e) {
          if (e.options.showFiles) {
            if (((e.filesList = e.element.getElementsByClassName("js-ddf__list")), 0 == e.filesList.length)) return;
            (e.fileItems = e.filesList[0].getElementsByClassName("js-ddf__item")),
              0 < e.fileItems.length && Util.addClass(e.fileItems[0], "is-hidden"),
              (function (a) {
                a.filesList[0].addEventListener("click", function (e) {
                  var t, n, s, i;
                  e.target.closest(".js-ddf__remove-btn") &&
                    (e.preventDefault(), (t = e.target.closest(".js-ddf__item")), (n = Util.getIndexInArray(a.filesList[0].getElementsByClassName("js-ddf__item"), t)), (s = a.droppedFiles.splice(a.droppedFiles.length - n, 1)), a.progress && a.progress.length > a.droppedFiles.length - n && a.progress.splice(), 0 <= (i = a.lastDroppedFiles.length - n) && i < a.lastDroppedFiles.length - 1 && a.lastDroppedFiles.splice(a.lastDroppedFiles.length - n, 1), t.remove(), o(a, "fileRemoved", s));
                });
              })(e);
          } else {
            if (0 == e.label.length) return;
            e.options.upload && (e.progress = e.element.getElementsByClassName("js-ddf__progress"));
          }
        })(this),
        l(this, 0, 1, !1),
        (function (e) {
          {
            var t;
            0 < e.input.length &&
              (t = e.input[0].getAttribute("accept")) &&
              (e.options.acceptFile = t.split(",").map(function (e) {
                return e.trim();
              }));
          }
          (function (t) {
            if (0 == t.input.length) return;
            t.input[0].addEventListener("change", function (e) {
              "" != t.input[0].value && (s(t, t.input[0].files), (t.input[0].value = ""), i(t));
            });
          })(e),
            (function (e) {
              e.element.addEventListener("dragenter", n.bind(e)), e.element.addEventListener("dragover", n.bind(e)), e.element.addEventListener("dragleave", n.bind(e)), e.element.addEventListener("drop", n.bind(e));
            })(e);
        })(this);
    };
    function n(e) {
      switch (e.type) {
        case "dragenter":
        case "dragover":
          a(e), Util.addClass(this.area[0], "ddf__area--file-hover");
          break;
        case "dragleave":
          a(e), Util.removeClass(this.area[0], "ddf__area--file-hover");
          break;
        case "drop":
          a(e), s(this, e.dataTransfer.files), i(this);
      }
    }
    function s(e, t) {
      (e.lastDroppedFiles = []),
        e.options.replaceFiles && (e.droppedFiles = []),
        Array.prototype.push.apply(e.lastDroppedFiles, t),
        (function (e) {
          e.options.maxSize &&
            (function (e) {
              for (var t = [], n = e.lastDroppedFiles.length - 1; 0 <= n; n--) {
                var s;
                e.lastDroppedFiles[n].size > 1e3 * e.options.maxSize && ((s = e.lastDroppedFiles.splice(n, 1)), t.push(s[0].name));
              }
              0 < t.length && o(e, "rejectedWeight", t);
            })(e);
          0 < e.options.acceptFile.length &&
            (function (e) {
              for (var t = [], n = e.lastDroppedFiles.length - 1; 0 <= n; n--) {
                var s;
                !(function (e, t) {
                  for (var n = e.lastDroppedFiles[t].type.split("/"), s = n[0] + "/*", i = 1 < n.length && n[1], a = !1, l = 0; l < e.options.acceptFile.length; l++) {
                    if (e.lastDroppedFiles[t].type == e.options.acceptFile[l] || s == e.options.acceptFile[l] || (i && i == e.options.acceptFile[l])) {
                      a = !0;
                      break;
                    }
                    if (
                      i &&
                      (function (e, t) {
                        if ("." + e == t) return !0;
                        for (var n = !1, s = e.split("+"), i = 0; i < s.length; i++)
                          if ("." + s[i] == t) {
                            n = !0;
                            break;
                          }
                        return n;
                      })(i, e.options.acceptFile[l])
                    ) {
                      a = !0;
                      break;
                    }
                  }
                  return a;
                })(e, n) && ((s = e.lastDroppedFiles.splice(n, 1)), t.push(s[0].name));
              }
              0 < t.length && o(e, "rejectedFormat", t);
            })(e);
        })(e),
        (e.droppedFiles = e.droppedFiles.concat(e.lastDroppedFiles)),
        e.options.maxFiles &&
          (function (e) {
            if (e.options.maxFiles >= e.droppedFiles.length) return;
            var t = [];
            for (; e.droppedFiles.length > e.options.maxFiles; ) {
              var n = e.droppedFiles.pop();
              e.lastDroppedFiles.pop(), t.push(n.name);
            }
            0 < t.length && o(e, "rejectedNumber", t);
          })(e);
    }
    function i(e) {
      e.options.showFiles
        ? (function (e) {
            if (!e.fileItems || 0 == e.fileItems.length) return;
            var t = e.fileItems[0].cloneNode(!0),
              n = "";
            Util.removeClass(t, "is-hidden");
            for (var s = 0; s < e.lastDroppedFiles.length; s++) (t.getElementsByClassName("js-ddf__file-name")[0].textContent = e.lastDroppedFiles[s].name), (n = t.outerHTML + n);
            e.options.replaceFiles ? ((n = e.fileItems[0].outerHTML + n), (e.filesList[0].innerHTML = n)) : e.fileItems[0].insertAdjacentHTML("afterend", n);
            e.options.upload &&
              (function (e) {
                e.progress = [];
                for (var t = e.droppedFiles.length - e.lastDroppedFiles.length, n = 0; n < e.lastDroppedFiles.length; n++) e.progress[n] = e.fileItems[e.droppedFiles.length - t - n].getElementsByClassName("js-ddf__progress")[0];
                l(e, 0, e.lastDroppedFiles.length, !0);
              })(e);
            Util.toggleClass(e.filesList[0], "is-hidden", 0 == e.droppedFiles.length);
          })(e)
        : ((function (e) {
            e.progress && e.progress[0] && (e.progressObj[0].setProgressBarValue(0), Util.toggleClass(e.progress[0], "is-hidden", 0 == e.droppedFiles.length), Util.removeClass(e.progress[0], e.progressCompleteClass));
            {
              var t;
              0 < e.droppedFiles.length && e.labelEndMessage && ((t = e.labelEnd.innerHTML), 3 < e.labelEndMessage.length && (t = 1 < e.droppedFiles.length ? e.labelEndMessage[0] + e.labelEndMessage[2] + e.labelEndMessage[3] : e.labelEndMessage[0] + e.labelEndMessage[1] + e.labelEndMessage[3]), (e.labelEnd[0].innerHTML = t.replace("{n}", e.droppedFiles.length)));
            }
          })(e),
          Util.addClass(e.area[0], "ddf__area--file-dropped")),
        Util.removeClass(e.area[0], "ddf__area--file-hover"),
        o(e, "filesUploaded", !1);
    }
    function a(e) {
      e.preventDefault(), e.stopPropagation();
    }
    function l(n, e, t, s) {
      if (((n.progressObj = []), n.progress && 0 != n.progress.length))
        for (var i = e; i < t; i++)
          !(function (t) {
            n.progressObj.push(new CProgressBar(n.progress[t])),
              s && Util.removeClass(n.progress[t], "is-hidden"),
              n.progress[t].addEventListener("updateProgress", function (e) {
                100 == e.detail.value && Util.addClass(n.progress[t], n.progressCompleteClass);
              });
          })(i);
    }
    function o(e, t, n) {
      var s = new CustomEvent(t, { detail: n });
      e.element.dispatchEvent(s);
    }
    (t.defaults = { element: "", maxFiles: !1, maxSize: !1, showFiles: !1, replaceFiles: !0, upload: !1 }), (window.Ddf = t);
  })(),
  (function () {
    function e(e) {
      (this.element = e),
        (this.list = this.element.getElementsByTagName("ul")[0]),
        (this.imgs = this.list.children),
        (this.gestureHint = this.element.getElementsByClassName("drag-gallery__gesture-hint")),
        (this.galleryWidth = n(this)),
        (this.translate = 0),
        (this.dragStart = !1),
        (this.dragMStart = !1),
        (this.dragTimeMStart = !1),
        (this.dragTimeMEnd = !1),
        (this.dragMSpeed = !1),
        (this.dragAnimId = !1),
        (function (t) {
          (function (t) {
            new SwipeContent(t.element),
              t.element.addEventListener("dragStart", function (e) {
                var n;
                window.cancelAnimationFrame(t.dragAnimId),
                  Util.addClass(t.element, "drag-gallery--is-dragging"),
                  (t.dragStart = e.detail.x),
                  (t.dragMStart = e.detail.x),
                  (t.dragTimeMStart = new Date().getTime()),
                  (t.dragTimeMEnd = !1),
                  (t.dragMSpeed = !1),
                  (n = t).element.addEventListener("dragEnd", function e(t) {
                    n.element.removeEventListener("dragEnd", e),
                      Util.removeClass(n.element, "drag-gallery--is-dragging"),
                      (function (s) {
                        if (d) return;
                        var e = new Date().getTime();
                        s.dragMSpeed = (0.95 * (s.dragStart - s.dragMStart)) / (e - s.dragTimeMStart);
                        var i = !1;
                        s.dragAnimId = window.requestAnimationFrame(function e(t) {
                          var n = t - (i = i || t);
                          (i = t), Math.abs(s.dragMSpeed) < 0.01 ? (s.dragAnimId = !1) : ((s.translate = Math.round(s.translate + s.dragMSpeed * n)), a(s), l(s), (s.dragMSpeed = 0.95 * s.dragMSpeed), (s.dragAnimId = window.requestAnimationFrame(e)));
                        });
                      })(n),
                      (n.dragStart = !1);
                  });
              }),
              t.element.addEventListener("dragging", function (e) {
                t.dragStart && (Math.abs(e.detail.x - t.dragStart) < 5 || ((t.translate = Math.round(e.detail.x - t.dragStart + t.translate)), (t.dragStart = e.detail.x), a(t), l(t)));
              });
          })(t),
            t.element.addEventListener("update-gallery-width", function (e) {
              (t.galleryWidth = n(t)), a(t), l(t);
            }),
            r &&
              (function (e) {
                for (var t = 0; t < e.imgs.length; t++) {
                  new IntersectionObserver(i.bind(e.imgs[t]), { threshold: [0, 0.1] }).observe(e.imgs[t]);
                }
              })(t);
          !d &&
            0 < t.gestureHint.length &&
            (function (e) {
              new IntersectionObserver(
                function (e, t) {
                  0 < e[0].intersectionRatio.toFixed(1) && (Util.addClass(this, "drag-gallery__gesture-hint--animate"), t.unobserve(this));
                }.bind(e.gestureHint[0]),
                { threshold: [0, 1] }
              ).observe(e.gestureHint[0]);
            })(t);
          !(function (t) {
            t.element.setAttribute("tabindex", 0),
              t.element.addEventListener("keyup", function (e) {
                (e.keyCode && 39 == e.keyCode) || (e.key && "arrowright" == e.key.toLowerCase()) ? s(t, "right") : ((e.keyCode && 37 == e.keyCode) || (e.key && "arrowleft" == e.key.toLowerCase())) && s(t, "left");
              });
          })(t);
        })(this);
    }
    function n(e) {
      return e.list.scrollWidth - e.list.offsetWidth;
    }
    function s(e, t) {
      var n = parseFloat(window.getComputedStyle(e.imgs[0]).marginRight) + e.imgs[0].offsetWidth;
      (e.translate = "right" == t ? e.translate - n : e.translate + n), a(e), l(e);
    }
    function a(e) {
      0 < e.translate && ((e.translate = 0), (e.dragMSpeed = 0)), Math.abs(e.translate) > e.galleryWidth && ((e.translate = -1 * e.galleryWidth), (e.dragMSpeed = 0));
    }
    function l(e) {
      (e.list.style.transform = "translateX(" + e.translate + "px)"), (e.list.style.msTransform = "translateX(" + e.translate + "px)");
    }
    function i(e, t) {
      0 < e[0].intersectionRatio.toFixed(1) && (Util.addClass(this, "drag-gallery__item--visible"), t.unobserve(this));
    }
    var t,
      o = document.getElementsByClassName("js-drag-gallery"),
      r = "IntersectionObserver" in window && "IntersectionObserverEntry" in window && "intersectionRatio" in window.IntersectionObserverEntry.prototype,
      d = Util.osHasReducedMotion();
    if (0 < o.length) {
      for (var c = [], u = 0; u < o.length; u++) (t = u), (r && !d) || Util.addClass(o[t], "drag-gallery--anim-off"), c.push(new e(o[t]));
      var m = !1,
        h = new CustomEvent("update-gallery-width");
      function g() {
        for (var e = 0; e < c.length; e++) c[e].element.dispatchEvent(h);
      }
      window.addEventListener("resize", function () {
        clearTimeout(m), (m = setTimeout(g, 500));
      });
    }
  })(),
  (function () {
    var e = document.getElementsByClassName("js-dr-nav-control");
    0 < e.length &&
      (function (n) {
        var e,
          t,
          s,
          i = n.getElementsByTagName("circle");
        0 < i.length && ((e = n), (t = i[0]), (s = (2 * Math.PI * t.getAttribute("r")).toFixed(2)), t.setAttribute("stroke-dashoffset", s), t.setAttribute("stroke-dasharray", s), Util.addClass(e, "dr-nav-control--ready-to-animate"));
        var a = n.getAttribute("aria-controls"),
          l = document.getElementById(a);
        l &&
          l.addEventListener("drawerIsClose", function (e) {
            var t;
            (e.detail && (!e.detail || e.detail.closest('.js-dr-nav-control[aria-controls="' + a + '"]'))) || ((t = n), Util.removeClass(t, "anim-menu-btn--state-b"));
          });
      })(e[0]);
  })(),
  (function () {
    function e(e) {
      (this.element = e), (this.trigger = this.element.getElementsByClassName("js-dropdown__trigger")[0]), (this.dropdown = this.element.getElementsByClassName("js-dropdown__menu")[0]), (this.triggerFocus = !1), (this.dropdownFocus = !1), (this.hideInterval = !1), (this.dropdownSubElements = this.element.getElementsByClassName("js-dropdown__sub-wrapper")), (this.prevFocus = !1), this.addDropdownEvents();
    }
    (e.prototype.addDropdownEvents = function () {
      var t = this;
      this.placeElement(),
        this.element.addEventListener("placeDropdown", function (e) {
          t.placeElement();
        }),
        this.initElementEvents(this.trigger, this.triggerFocus),
        this.initElementEvents(this.dropdown, this.dropdownFocus),
        this.initSublevels();
    }),
      (e.prototype.placeElement = function () {
        var e = this.trigger.getBoundingClientRect(),
          t = window.innerWidth < e.left + parseInt(getComputedStyle(this.dropdown).getPropertyValue("width")) ? "right: 0px; left: auto;" : "left: 0px; right: auto;";
        this.dropdown.setAttribute("style", t);
      }),
      (e.prototype.initElementEvents = function (e, t) {
        var n = this;
        e.addEventListener("mouseenter", function () {
          n.showDropdown();
        }),
          e.addEventListener("focus", function () {
            n.showDropdown();
          }),
          e.addEventListener("mouseleave", function () {
            n.hideDropdown();
          }),
          e.addEventListener("focusout", function () {
            n.hideDropdown();
          });
      }),
      (e.prototype.showDropdown = function () {
        this.hideInterval && clearInterval(this.hideInterval), this.showLevel(this.dropdown, !0);
      }),
      (e.prototype.hideDropdown = function () {
        var n = this;
        this.hideInterval && clearInterval(this.hideInterval),
          (this.hideInterval = setTimeout(function () {
            var e = document.activeElement.closest(".js-dropdown"),
              t = e && e == n.element;
            n.triggerFocus || n.dropdownFocus || t || (n.hideLevel(n.dropdown), n.hideSubLevels(), (n.prevFocus = !1));
          }, 300));
      }),
      (e.prototype.initSublevels = function () {
        for (var o = this, e = this.element.getElementsByClassName("js-dropdown__menu"), t = 0; t < e.length; t++) {
          e[t].children;
          new menuAim({
            menu: e[t],
            activate: function (e) {
              var t = e.getElementsByClassName("js-dropdown__menu")[0];
              t && (Util.addClass(e.querySelector("a"), "dropdown__item--hover"), o.showLevel(t));
            },
            deactivate: function (e) {
              var t = e.getElementsByClassName("dropdown__menu")[0];
              t && (Util.removeClass(e.querySelector("a"), "dropdown__item--hover"), o.hideLevel(t));
            },
            submenuSelector: ".js-dropdown__sub-wrapper",
          });
        }
        this.element.addEventListener("keydown", function (e) {
          ((e.keyCode && 9 == e.keyCode) || (e.key && "Tab" == e.key)) && (o.prevFocus = document.activeElement);
        }),
          this.element.addEventListener("keyup", function (e) {
            if ((e.keyCode && 9 == e.keyCode) || (e.key && "Tab" == e.key)) {
              var t = document.activeElement,
                n = t.closest(".js-dropdown__menu"),
                s = t.nextElementSibling;
              if ((n && !Util.hasClass(n, "dropdown__menu--is-visible") && o.showLevel(n), s && !Util.hasClass(s, "dropdown__menu--is-visible") && o.showLevel(s), !o.prevFocus)) return;
              var i = o.prevFocus.closest(".js-dropdown__menu"),
                a = o.prevFocus.nextElementSibling;
              if (!i) return;
              if (n && n == i) return void (a && o.hideLevel(a));
              if (a && n && n == a) return;
              if (s && i && s == i) return;
              var l = n.parentNode.closest(".js-dropdown__menu");
              if (l && l == i) return void (a && o.hideLevel(a));
              i && Util.hasClass(i, "dropdown__menu--is-visible") && o.hideLevel(i);
            }
          });
      }),
      (e.prototype.hideSubLevels = function () {
        var e = this.dropdown.getElementsByClassName("dropdown__menu--is-visible");
        if (0 != e.length) {
          for (; e[0]; ) this.hideLevel(e[0]);
          for (var t = this.dropdown.getElementsByClassName("dropdown__item--hover"); t[0]; ) Util.removeClass(t[0], "dropdown__item--hover");
        }
      }),
      (e.prototype.showLevel = function (e, t) {
        var n;
        null == t && (Util.removeClass(e, "dropdown__menu--left"), (n = e.getBoundingClientRect()), window.innerWidth - n.right < 5 && n.left + window.scrollX > 2 * n.width && Util.addClass(e, "dropdown__menu--left")), Util.addClass(e, "dropdown__menu--is-visible"), Util.removeClass(e, "dropdown__menu--is-hidden");
      }),
      (e.prototype.hideLevel = function (t) {
        Util.hasClass(t, "dropdown__menu--is-visible") &&
          (Util.removeClass(t, "dropdown__menu--is-visible"),
          Util.addClass(t, "dropdown__menu--is-hidden"),
          t.addEventListener("animationend", function e() {
            t.removeEventListener("animationend", e), Util.removeClass(t, "dropdown__menu--is-hidden dropdown__menu--left");
          }));
      }),
      (window.Dropdown = e);
    var t = document.getElementsByClassName("js-dropdown");
    if (0 < t.length) for (var n = 0; n < t.length; n++) new e(t[n]);
  })(),
  (function () {
    var n,
      s,
      i,
      e,
      a = document.getElementsByClassName("js-f-header");
    function t(e) {
      return e.offsetWidth || e.offsetHeight || e.getClientRects().length;
    }
    function l() {
      !t(n) && Util.hasClass(a[0], "f-header--expanded") && n.click();
    }
    0 < a.length &&
      ((n = a[0].getElementsByClassName("js-anim-menu-btn")[0]),
      (s = (function () {
        for (var e = a[0].getElementsByClassName("f-header__nav")[0].querySelectorAll('[href], input:not([disabled]), select:not([disabled]), textarea:not([disabled]), button:not([disabled]), iframe, object, embed, [tabindex]:not([tabindex="-1"]), [contenteditable], audio[controls], video[controls], summary'), t = !1, n = 0; n < e.length; n++)
          if (e[n].offsetWidth || e[n].offsetHeight || e[n].getClientRects().length) {
            t = e[n];
            break;
          }
        return t;
      })()),
      (i = !1),
      n.addEventListener("anim-menu-btn-clicked", function (e) {
        var t;
        (t = e.detail), Util.toggleClass(document.getElementsByClassName("f-header__nav")[0], "f-header__nav--is-visible", t), Util.toggleClass(a[0], "f-header--expanded", t), n.setAttribute("aria-expanded", t), t ? s.focus() : i && (i.focus(), (i = !1));
      }),
      window.addEventListener("keyup", function (e) {
        ((e.keyCode && 27 == e.keyCode) || (e.key && "escape" == e.key.toLowerCase())) && "true" == n.getAttribute("aria-expanded") && t(n) && (i = n).click(), ((e.keyCode && 9 == e.keyCode) || (e.key && "tab" == e.key.toLowerCase())) && "true" == n.getAttribute("aria-expanded") && t(n) && !document.activeElement.closest(".js-f-header") && n.click();
      }),
      (e = !1),
      window.addEventListener("resize", function () {
        clearTimeout(e), (e = setTimeout(l, 500));
      }));
  })(),
  (function () {
    function e(e) {
      var t;
      (this.element = e),
        (this.triggers = document.querySelectorAll('[aria-controls="' + this.element.getAttribute("id") + '"]')),
        (this.list = this.element.getElementsByClassName("js-float-sidenav__list")[0]),
        (this.anchors = this.list.querySelectorAll('a[href^="#"]')),
        (this.sections = (function (e) {
          for (var t = [], n = 0; n < e.anchors.length; n++) {
            var s = document.getElementById(e.anchors[n].getAttribute("href").replace("#", ""));
            s && t.push(s);
          }
          return t;
        })(this)),
        (this.sectionsContainer = document.getElementsByClassName("js-float-sidenav-target")),
        (this.firstFocusable = (function (e) {
          for (var t = e.element.querySelectorAll('[href], input:not([disabled]), select:not([disabled]), textarea:not([disabled]), button:not([disabled]), iframe, object, embed, [tabindex]:not([tabindex="-1"]), [contenteditable], audio[controls], video[controls], summary'), n = !1, s = 0; s < t.length; s++)
            if (t[s].offsetWidth || t[s].offsetHeight || t[s].getClientRects().length) {
              n = t[s];
              break;
            }
          return n;
        })(this)),
        (this.selectedTrigger = null),
        (this.showClass = "float-sidenav--is-visible"),
        (this.clickScrolling = !1),
        (this.intervalID = !1),
        (function (s) {
          if (!s.triggers) return;
          for (var e = 0; e < s.triggers.length; e++)
            s.triggers[e].addEventListener("click", function (e) {
              var n, t;
              (n = s),
                (t = e).preventDefault(),
                (n.selectedTrigger = t.target),
                t.target.setAttribute("aria-expanded", "true"),
                Util.addClass(n.element, n.showClass),
                n.element.addEventListener("transitionend", function e(t) {
                  n.element.removeEventListener("transitionend", e), n.firstFocusable.focus();
                });
            });
          s.element.addEventListener("click", function (e) {
            (e.target.closest(".js-float-sidenav__close-btn") || Util.hasClass(e.target, "js-float-sidenav")) && l(s, e);
          }),
            window.addEventListener("keyup", function (e) {
              ((e.keyCode && 27 == e.keyCode) || (e.key && "escape" == e.key.toLowerCase())) && l(s, e), ((e.keyCode && 9 == e.keyCode) || (e.key && "tab" == e.key.toLowerCase())) && (document.activeElement.closest(".js-float-sidenav") || l(s, e, !0));
            });
        })((t = this)),
        (function (a) {
          a.list.addEventListener("click", function (e) {
            var t,
              n,
              s,
              i = e.target.closest('a[href^="#"]');
            i && !Util.hasClass(i, "float-sidenav__link--selected") && (a.clickScrolling ? e.preventDefault() : ((a.clickScrolling = !0), o(a, i), l(a, !1, !0), (t = document.documentElement.offsetHeight), (n = window.innerHeight), (s = window.scrollY || window.pageYOffset || document.body.scrollTop + ((document.documentElement && document.documentElement.scrollTop) || 0)), t - 2 <= n + s && window.dispatchEvent(new CustomEvent("scroll"))));
          });
        })(t),
        s
          ? (function (s) {
              for (
                var e = new IntersectionObserver(
                    function (e, t) {
                      e.forEach(function (e) {
                        var t = e.intersectionRatio.toFixed(1);
                        s.clickScrolling || n(s), s.sectionsContainer && e.target == s.sections[0] && 0 == t && 0 < s.sections[0].getBoundingClientRect().top && i(s);
                      }),
                        Util.toggleClass(s.element, "float-sidenav--on-target", 0 != s.list.getElementsByClassName("float-sidenav__link--selected").length);
                    },
                    { rootMargin: "0px 0px -50% 0px" }
                  ),
                  t = 0;
                t < s.sections.length;
                t++
              )
                e.observe(s.sections[t]);
              {
                s.sectionsContainer &&
                  new IntersectionObserver(
                    function (e, t) {
                      e.forEach(function (e) {
                        var t,
                          n = e.intersectionRatio.toFixed(1);
                        e.target.getBoundingClientRect().top < 0 && (0 == n ? i(s) : ((t = s), Util.addClass(t.element, "float-sidenav--on-target"), 0 == t.list.getElementsByClassName("float-sidenav__link--selected").length && Util.addClass(t.anchors[t.anchors.length - 1], "float-sidenav__link--selected")));
                      });
                    },
                    { threshold: [0, 0.1, 1] }
                  ).observe(s.sectionsContainer[0]);
              }
              s.element.addEventListener("float-sidenav-scroll", function (e) {
                s.clickScrolling || n(s), (s.clickScrolling = !1);
              });
            })(t)
          : Util.addClass(t.element, "float-sidenav--on-target");
    }
    function l(e, t, n) {
      Util.hasClass(e.element, e.showClass) && (t && t.preventDefault(), Util.removeClass(e.element, e.showClass), e.selectedTrigger && (e.selectedTrigger.setAttribute("aria-expanded", "false"), n || e.selectedTrigger.focus(), (e.selectedTrigger = !1)));
    }
    function o(e, t) {
      if (s) {
        for (var n = 0; n < e.anchors.length; n++) Util.removeClass(e.anchors[n], "float-sidenav__link--selected");
        t && Util.addClass(t, "float-sidenav__link--selected");
      }
    }
    function i(e) {
      e.clickScrolling || o(e, !1), Util.removeClass(e.element, "float-sidenav--on-target");
    }
    function n(s) {
      s.intervalID ||
        (s.intervalID = setTimeout(function () {
          for (var e = window.innerHeight / 2, t = -1, n = 0; n < s.sections.length; n++) {
            s.sections[n].getBoundingClientRect().top < e && (t = n);
          }
          -1 < t && o(s, s.anchors[t]), (s.intervalID = !1);
        }, 100));
    }
    var t = document.getElementsByClassName("js-float-sidenav"),
      s = "IntersectionObserver" in window && "IntersectionObserverEntry" in window && "intersectionRatio" in window.IntersectionObserverEntry.prototype,
      a = [];
    if (0 < t.length) {
      for (var r = 0; r < t.length; r++) a.push(new e(t[r]));
      var d = !1,
        c = new CustomEvent("float-sidenav-scroll");
      function u() {
        for (var e = 0; e < a.length; e++) a[e].element.dispatchEvent(c);
      }
      window.addEventListener("scroll", function () {
        clearTimeout(d), (d = setTimeout(u, 100));
      });
    }
  })(),
  (function () {
    function e(e) {
      (this.element = e), (this.link = this.element.getElementsByClassName("footnotes__back-link")[0]), (this.contentLink = document.getElementById(this.link.getAttribute("href").replace("#", ""))), this.initFootnote();
    }
    (e.prototype.initFootnote = function () {
      Util.setAttributes(this.contentLink, { "aria-label": "Footnote: " + this.element.getElementsByClassName("js-footnote__label")[0].textContent, "data-tooltip-class": "tooltip--lg tooltip--sticky", "data-tooltip-describedby": "false", title: this.getFootnoteContent() }), new Tooltip(this.contentLink);
    }),
      (e.prototype.getFootnoteContent = function () {
        var e = this.element.cloneNode(!0);
        return e.removeChild(e.getElementsByClassName("footnotes__back-link")[0]), e.innerHTML;
      });
    var t = document.getElementsByClassName("js-footnotes__item");
    if (0 < t.length) for (var n = 0; n < t.length; n++) new e(t[n]);
  })(),
  (function () {
    function e(e) {
      var t;
      (this.element = e),
        (this.items = this.element.children),
        (t = this).element.addEventListener("keydown", function (e) {
          (e.keyCode && 40 == e.keyCode) || (e.key && "arrowdown" == e.key.toLowerCase()) ? n(t, 1) : ((e.keyCode && 38 == e.keyCode) || (e.key && "arrowup" == e.key.toLowerCase())) && n(t, -1);
        });
    }
    function n(e, t) {
      var n = document.activeElement,
        s = Util.getIndexInArray(e.items, n.closest("li"));
      s < 0 || ((s += t) < 0 && (s = e.items.length - 1), s >= e.items.length && (s = 0), Util.moveFocus(e.items[s].getElementsByTagName(n.tagName)[0]));
    }
    var t = document.getElementsByClassName("js-full-screen-select");
    if (0 < t.length) for (var s = 0; s < t.length; s++) new e(t[s]);
  })(),
  (function () {
    function e(e) {
      (this.element = e),
        (this.modifiedImg = this.element.getElementsByClassName("js-compare-slider__img--modified")[0]),
        (this.handle = this.element.getElementsByClassName("js-compare-slider__handle")[0]),
        (this.keyboardHandle = this.element.getElementsByClassName("js-compare-slider__input-handle")[0]),
        (this.captions = this.element.getElementsByClassName("js-compare-slider__caption")),
        (this.dragStart = !1),
        (this.animating = !1),
        (this.leftPosition = 50),
        (this.sliderWidth = n(this)),
        (function (t) {
          {
            o
              ? Util.addClass(t.element, "compare-slider--reduced-motion compare-slider--in-viewport")
              : l
              ? new IntersectionObserver(
                  function (e, t) {
                    0 < e[0].intersectionRatio.toFixed(1) && (Util.addClass(this.element, "compare-slider--in-viewport"), t.unobserve(this.element));
                  }.bind(t),
                  { threshold: [0, 0.3] }
                ).observe(t.element)
              : Util.addClass(t.element, "compare-slider--in-viewport");
          }
          new SwipeContent(t.element),
            t.element.addEventListener("dragStart", function (e) {
              var n;
              e.detail.origin.closest(".js-compare-slider__handle") &&
                (Util.addClass(t.element, "compare-slider--is-dragging"),
                t.dragStart ||
                  ((t.dragStart = e.detail.x),
                  (n = t),
                  document.addEventListener("click", function e(t) {
                    document.removeEventListener("click", e), Util.removeClass(n.element, "compare-slider--is-dragging"), a(n, t.detail.x - n.dragStart), (n.dragStart = !1);
                  })));
            }),
            t.element.addEventListener("mousemove", function (e) {
              s(t, e);
            }),
            t.element.addEventListener("touchmove", function (e) {
              s(t, e);
            }),
            t.element.addEventListener("mouseleave", function (e) {
              i(t, e);
            }),
            t.element.addEventListener("touchend", function (e) {
              i(t, e);
            }),
            window.addEventListener("resize", function () {
              t.sliderWidth = n(t);
            }),
            t.keyboardHandle.addEventListener("change", function (e) {
              (t.leftPosition = Number(t.keyboardHandle.value)), a(t, 0);
            });
        })(this);
    }
    function n(e) {
      return e.element.offsetWidth;
    }
    function s(e, t) {
      var n;
      e.dragStart && ((n = t.pageX || t.touches[0].pageX), e.animating || Math.abs(n - e.dragStart) < 5 || ((e.animating = !0), a(e, n - e.dragStart), (e.dragStart = n)));
    }
    function i(e, t) {
      e.dragStart && (t.pageX < e.element.offsetLeft && ((e.leftPosition = 0), a(e, 0)), t.pageX > e.element.offsetLeft + e.element.offsetWidth && ((e.leftPosition = 100), a(e, 0)));
    }
    function a(e, t) {
      var n = (100 * t) / e.sliderWidth;
      isNaN(n) ||
        ((e.leftPosition = Number((e.leftPosition + n).toFixed(2))),
        e.leftPosition < 0 && (e.leftPosition = 0),
        100 < e.leftPosition && (e.leftPosition = 100),
        (e.keyboardHandle.value = e.leftPosition),
        (e.handle.style.left = e.leftPosition + "%"),
        (e.modifiedImg.style.width = e.leftPosition + "%"),
        (function (e) {
          for (var t = 0; t < e.captions.length; t++) {
            var n = 0 == t ? e.captions[t].offsetLeft - e.modifiedImg.offsetLeft - e.modifiedImg.offsetWidth : e.modifiedImg.offsetLeft + e.modifiedImg.offsetWidth - e.captions[t].offsetLeft - e.captions[t].offsetWidth;
            Util.toggleClass(e.captions[t], "compare-slider__caption--is-hidden", n < 10);
          }
        })(e),
        (e.animating = !1));
    }
    var t = document.getElementsByClassName("js-compare-slider"),
      l = "IntersectionObserver" in window && "IntersectionObserverEntry" in window && "intersectionRatio" in window.IntersectionObserverEntry.prototype,
      o = Util.osHasReducedMotion();
    if (0 < t.length) for (var r = 0; r < t.length; r++) new e(t[r]);
  })(),
  (function () {
    var e,
      t,
      s = document.getElementsByClassName("js-header-v3");
    if (0 < s.length) {
      for (var i = s[0].getElementsByClassName("js-toggle-menu")[0], n = s[0].getElementsByClassName("js-toggle-search"), a = s[0].getElementsByClassName("header-v3__nav")[0], l = !1, o = !1, r = Util.getChildrenByClassName(a.getElementsByClassName("header-v3__nav-list")[0], "header-v3__nav-item"), d = 0; d < r.length; d++) (e = r[d]), (t = d), (e.style.transitionDelay = parseFloat(t / 20 + 0.1).toFixed(2) + "s");
      i.addEventListener("switch-icon-clicked", function (e) {
        !(function (e) {
          Util.addClass(a, "header-v3__nav--is-visible"), Util.addClass(i, "switch-icon--disabled"), i.setAttribute("aria-expanded", e);
          var n = e ? window.innerHeight : 0,
            t = e ? 0 : window.innerHeight;
          (a.style.height = t + "px"),
            setTimeout(function () {
              (a.style.height = n + "px"), Util.toggleClass(a, "header-v3__nav--animate-children", e);
            }, 50),
            a.addEventListener("transitionend", function e(t) {
              "height" === t.propertyName &&
                (0 < n
                  ? (function () {
                      for (var e = s[0].getElementsByClassName("header-v3__nav")[0].querySelectorAll('[href], input:not([disabled]), select:not([disabled]), textarea:not([disabled]), button:not([disabled]), iframe, object, embed, [tabindex]:not([tabindex="-1"]), [contenteditable], audio[controls], video[controls], summary'), t = !1, n = 0; n < e.length; n++)
                        if (e[n].offsetWidth || e[n].offsetHeight || e[n].getClientRects().length) {
                          t = e[n];
                          break;
                        }
                      return t;
                    })().focus()
                  : (Util.removeClass(a, "header-v3__nav--is-visible header-v3__nav--animate-children"), o && (o.focus(), (o = !1))),
                a.removeEventListener("transitionend", e),
                a.removeAttribute("style"),
                Util.removeClass(i, "switch-icon--disabled"));
            }),
            Util.toggleClass(s[0], "header-v3--expanded", e);
        })(e.detail);
      }),
        0 < n.length &&
          n[0].addEventListener("switch-icon-clicked", function (e) {
            var t;
            (t = e.detail),
              Util.addClass(n[0], "switch-icon--disabled"),
              Util.toggleClass(s[0], "header-v3--show-search", t),
              n[0].setAttribute("aria-expanded", t),
              s[0].addEventListener("transitionend", function e() {
                s[0].removeEventListener("transitionend", e), Util.removeClass(n[0], "switch-icon--disabled"), t ? s[0].getElementsByClassName("header-v3__nav-item--search-form")[0].getElementsByTagName("input")[0].focus() : l && (l.focus(), (l = !1));
              }),
              Util.toggleClass(s[0], "header-v3--expanded", t);
          }),
        window.addEventListener("keyup", function (e) {
          ((e.keyCode && 27 == e.keyCode) || (e.key && "escape" == e.key.toLowerCase())) && ("true" == i.getAttribute("aria-expanded") && m(i) && (o = i).click(), 0 < n.length && "true" == n[0].getAttribute("aria-expanded") && m(n[0]) && ((l = n[0]), n[0].click())), ((e.keyCode && 9 == e.keyCode) || (e.key && "tab" == e.key.toLowerCase())) && "true" == i.getAttribute("aria-expanded") && m(i) && !document.activeElement.closest(".js-header-v3") && i.click();
        });
      var c = !1;
      function u() {
        m(i) || "true" != i.getAttribute("aria-expanded") || i.click(), 0 < n.length && !m(n[0]) && "true" == n[0].getAttribute("aria-expanded") && n[0].click();
      }
      function m(e) {
        return e.offsetWidth || e.offsetHeight || e.getClientRects().length;
      }
      window.addEventListener("resize", function () {
        clearTimeout(c), (c = setTimeout(u, 300));
      });
    }
  })(),
  (function () {
    function e(e) {
      (this.element = e),
        (this.items = Util.getChildrenByClassName(this.element, "menu-bar__item")),
        (this.mobHideItems = this.element.getElementsByClassName("menu-bar__item--hide")),
        (this.moreItemsTrigger = this.element.getElementsByClassName("js-menu-bar__trigger")),
        (function (t) {
          (function (e) {
            for (var t = !1, n = 0; n < e.items.length; n++) 0 == n || t ? e.items[n].setAttribute("tabindex", "0") : e.items[n].setAttribute("tabindex", "-1"), (t = 0 == n && 0 < e.moreItemsTrigger.length);
          })(t),
            (function (e) {
              if (0 == e.mobHideItems.length) return 0 < e.moreItemsTrigger.length && e.element.removeChild(e.moreItemsTrigger[0]);
              if (0 == e.moreItemsTrigger.length) return;
              var t = "";
              e.menuControlId = "submenu-bar-" + Date.now();
              for (var n = 0; n < e.mobHideItems.length; n++) {
                var s = e.mobHideItems[n].cloneNode(!0),
                  i = s.getElementsByTagName("svg")[0],
                  a = s.getElementsByClassName("menu-bar__label")[0];
                i.setAttribute("class", "icon menu__icon"), (t = t + '<li role="menuitem"><span class="menu__content js-menu__content">' + i.outerHTML + "<span>" + a.innerHTML + "</span></span></li>");
              }
              Util.setAttributes(e.moreItemsTrigger[0], { role: "button", "aria-expanded": "false", "aria-controls": e.menuControlId, "aria-haspopup": "true" });
              var l = document.createElement("menu"),
                o = e.element.getAttribute("data-menu-class");
              Util.setAttributes(l, { id: e.menuControlId, class: "menu js-menu " + o }), (l.innerHTML = t), document.body.appendChild(l), (e.subMenu = l), (e.subItems = l.getElementsByTagName("li")), (e.menuInstance = new Menu(e.subMenu));
            })(t),
            n(t),
            Util.addClass(t.element, "menu-bar--loaded"),
            t.element.addEventListener("update-menu-bar", function (e) {
              n(t), t.menuInstance && t.menuInstance.toggleMenu(!1, !1);
            }),
            0 < t.moreItemsTrigger.length &&
              (t.moreItemsTrigger[0].addEventListener("keydown", function (e) {
                if ((e.keyCode && 13 == e.keyCode) || (e.key && "enter" == e.key.toLowerCase())) {
                  if (!t.menuInstance) return;
                  (t.menuInstance.selectedTrigger = t.moreItemsTrigger[0]), t.menuInstance.toggleMenu(!Util.hasClass(t.subMenu, "menu--is-visible"), !0);
                }
              }),
              t.subMenu.addEventListener("keydown", function (e) {
                ((e.keyCode && 27 == e.keyCode) || (e.key && "escape" == e.key.toLowerCase())) && t.menuInstance && t.menuInstance.toggleMenu(!1, !0);
              }));
          t.element.addEventListener("keydown", function (e) {
            (e.keyCode && 39 == e.keyCode) || (e.key && "arrowright" == e.key.toLowerCase()) ? l(t.items, e, "next") : ((e.keyCode && 37 == e.keyCode) || (e.key && "arrowleft" == e.key.toLowerCase())) && l(t.items, e, "prev");
          });
        })(this);
    }
    function n(e) {
      var t = getComputedStyle(e.element, ":before").getPropertyValue("content").replace(/\'|"/g, "");
      Util.toggleClass(e.element, "menu-bar--collapsed", "collapsed" == t);
    }
    function l(e, t, n, s) {
      t.preventDefault();
      var i = void 0 !== s ? s : Util.getIndexInArray(e, t.target),
        a = "next" == n ? i + 1 : i - 1;
      a < 0 && (a = e.length - 1), a > e.length - 1 && (a = 0), null === e[a].offsetParent ? l(e, t, n, a) : Util.moveFocus(e[a]);
    }
    var t = document.getElementsByClassName("js-menu-bar");
    if (0 < t.length) {
      for (var s, i, a = 0, o = [], r = 0; r < t.length; r++) {
        var d = getComputedStyle(t[r], ":before").getPropertyValue("content");
        d && "" != d && "none" != d && (o.push(new e(t[r])), (a += 1));
      }
      function c() {
        for (var e = 0; e < t.length; e++) t[e].dispatchEvent(i);
      }
      0 < a &&
        ((s = !1),
        (i = new CustomEvent("update-menu-bar")),
        window.addEventListener("resize", function (e) {
          clearTimeout(s), (s = setTimeout(c, 150));
        }),
        window.addEventListener("click", function (s) {
          o.forEach(function (e) {
            var t, n;
            (t = e), (n = s.target), !t.menuInstance || t.moreItemsTrigger[0].contains(n) || t.subMenu.contains(n) || t.menuInstance.toggleMenu(!1, !1);
          });
        }));
    }
  })(),
  (function () {
    function e(e) {
      (this.element = e), (this.modalContent = this.element.getElementsByClassName("js-modal-video__content")[0]), (this.media = this.element.getElementsByClassName("js-modal-video__media")[0]), (this.contentIsIframe = "iframe" == this.media.tagName.toLowerCase()), (this.modalIsOpen = !1), this.initModalVideo();
    }
    (e.prototype.initModalVideo = function () {
      var t = this;
      this.addLoadListener(),
        this.element.addEventListener("modalIsOpen", function (e) {
          (t.modalIsOpen = !0), t.media.setAttribute("src", e.detail.closest("[aria-controls]").getAttribute("data-url"));
        }),
        this.element.addEventListener("modalIsClose", function (e) {
          (t.modalIsOpen = !1), Util.addClass(t.element, "modal--is-loading"), t.media.setAttribute("src", "");
        });
    }),
      (e.prototype.addLoadListener = function () {
        var e = this;
        this.contentIsIframe
          ? (this.media.onload = function () {
              e.revealContent();
            })
          : this.media.addEventListener("loadedmetadata", function () {
              e.revealContent();
            });
      }),
      (e.prototype.revealContent = function () {
        this.modalIsOpen && (Util.removeClass(this.element, "modal--is-loading"), this.contentIsIframe ? this.media.contentWindow.focus() : this.media.focus());
      });
    var t = document.getElementsByClassName("js-modal-video__media");
    if (0 < t.length) for (var n = 0; n < t.length; n++) new e(t[n].closest(".js-modal"));
  })(),
  (function () {
    function e(e) {
      var t;
      (this.element = e),
        (this.select = this.element.getElementsByTagName("select")[0]),
        (this.optGroups = this.select.getElementsByTagName("optgroup")),
        (this.options = this.select.getElementsByTagName("option")),
        (this.selectId = this.select.getAttribute("id")),
        (this.trigger = !1),
        (this.dropdown = !1),
        (this.customOptions = !1),
        (this.arrowIcon = this.element.getElementsByTagName("svg")),
        (this.label = document.querySelector('[for="' + this.selectId + '"]')),
        (this.selectedOptCounter = 0),
        (this.optionIndex = 0),
        (this.noSelectText = this.element.getAttribute("data-no-select-text") || "Select"),
        (this.multiSelectText = this.element.getAttribute("data-multi-select-text") || "{n} items selected"),
        (this.nMultiSelect = this.element.getAttribute("data-n-multi-select") || 1),
        (this.noUpdateLabel = this.element.getAttribute("data-update-text") && "off" == this.element.getAttribute("data-update-text")),
        (this.insetLabel = this.element.getAttribute("data-inset-label") && "on" == this.element.getAttribute("data-inset-label")),
        (t = this).element.insertAdjacentHTML(
          "beforeend",
          (function (e) {
            var t = e.element.getAttribute("data-trigger-class") ? " " + e.element.getAttribute("data-trigger-class") : "",
              n = l(e),
              s = 0 < e.selectedOptCounter ? " multi-select__button--active" : "",
              i = '<button class="js-multi-select__button multi-select__button' + t + s + '" aria-label="' + n[1] + '" aria-expanded="false" aria-controls="' + e.selectId + '-dropdown"><span aria-hidden="true" class="js-multi-select__label multi-select__label">' + n[0] + "</span>";
            0 < e.arrowIcon.length && e.arrowIcon[0].outerHTML && (i += e.arrowIcon[0].outerHTML);
            return i + "</button>";
          })(t) +
            (function (e) {
              var t = '<div class="js-multi-select__dropdown multi-select__dropdown" aria-describedby="' + e.selectId + '-description" id="' + e.selectId + '-dropdown">';
              if (
                ((t += (function (e) {
                  return e.label ? '<p class="sr-only" id="' + e.selectId + '-description">' + e.label.textContent + "</p>" : "";
                })(e)),
                0 < e.optGroups.length)
              )
                for (var n = 0; n < e.optGroups.length; n++) {
                  var s = e.optGroups[n].getElementsByTagName("option"),
                    i = '<li><span class="multi-select__item multi-select__item--optgroup">' + e.optGroups[n].getAttribute("label") + "</span></li>";
                  t = t + '<ul class="multi-select__list" role="listbox" aria-multiselectable="true">' + i + o(e, s) + "</ul>";
                }
              else t = t + '<ul class="multi-select__list" role="listbox" aria-multiselectable="true">' + o(e, e.options) + "</ul>";
              return t;
            })(t)
        ),
        (t.dropdown = t.element.getElementsByClassName("js-multi-select__dropdown")[0]),
        (t.trigger = t.element.getElementsByClassName("js-multi-select__button")[0]),
        (t.customOptions = t.dropdown.getElementsByClassName("js-multi-select__option")),
        Util.addClass(t.select, "is-hidden"),
        0 < t.arrowIcon.length && (t.arrowIcon[0].style.display = "none"),
        (function (t) {
          (function (n) {
            n.dropdown.addEventListener("change", function (e) {
              var t = e.target.closest(".js-multi-select__option");
              t && s(n, t);
            }),
              n.dropdown.addEventListener("click", function (e) {
                var t = e.target.closest(".js-multi-select__option");
                t && Util.hasClass(e.target, "js-multi-select__option") && s(n, t);
              });
          })(t),
            t.trigger.addEventListener("click", function (e) {
              e.preventDefault(), i(t, !1);
            }),
            t.label &&
              t.label.addEventListener("click", function () {
                Util.moveFocus(t.trigger);
              });
          t.dropdown.addEventListener("keydown", function (e) {
            (e.keyCode && 38 == e.keyCode) || (e.key && "arrowup" == e.key.toLowerCase()) ? n(t, "prev", e) : ((e.keyCode && 40 == e.keyCode) || (e.key && "arrowdown" == e.key.toLowerCase())) && n(t, "next", e);
          });
        })(this);
    }
    function i(t, e) {
      var n,
        s,
        i,
        a = e || ("true" == t.trigger.getAttribute("aria-expanded") ? "false" : "true");
      t.trigger.setAttribute("aria-expanded", a),
        "true" == a &&
          ((n = (i = (s = t).dropdown.querySelector('[aria-selected="true"]')) ? i.getElementsByClassName("js-multi-select__checkbox")[0] : s.dropdown.getElementsByClassName("js-multi-select__option")[0].getElementsByClassName("js-multi-select__checkbox")[0]),
          Util.moveFocus(n),
          t.dropdown.addEventListener("transitionend", function e() {
            Util.moveFocus(n), t.dropdown.removeEventListener("transitionend", e);
          }),
          (function (e) {
            var t = e.trigger.getBoundingClientRect();
            Util.toggleClass(e.dropdown, "multi-select__dropdown--right", window.innerWidth < t.left + e.dropdown.offsetWidth);
            var n = window.innerHeight - t.bottom < t.top;
            Util.toggleClass(e.dropdown, "multi-select__dropdown--up", n);
            var s = n ? t.top - 20 : window.innerHeight - t.bottom - 20;
            e.dropdown.setAttribute("style", "max-height: " + s + "px; width: " + t.width + "px;");
          })(t));
    }
    function n(e, t, n) {
      n.preventDefault();
      var s = Util.getIndexInArray(e.customOptions, document.activeElement.closest(".js-multi-select__option"));
      (s = "next" == t ? s + 1 : s - 1) < 0 && (s = e.customOptions.length - 1), s >= e.customOptions.length && (s = 0), Util.moveFocus(e.customOptions[s].getElementsByClassName("js-multi-select__checkbox")[0]);
    }
    function s(e, t) {
      t.hasAttribute("aria-selected") && "true" == t.getAttribute("aria-selected") ? (t.setAttribute("aria-selected", "false"), a(e, t.getAttribute("data-index"), !1)) : (t.setAttribute("aria-selected", "true"), a(e, t.getAttribute("data-index"), !0));
      var n,
        s,
        i = l(e);
      (e.trigger.getElementsByClassName("js-multi-select__label")[0].innerHTML = i[0]), Util.toggleClass(e.trigger, "multi-select__button--active", 0 < e.selectedOptCounter), (n = e), (s = i[1]), n.trigger.setAttribute("aria-label", s);
    }
    function a(e, t, n) {
      (e.options[t].selected = n), e.select.dispatchEvent(new CustomEvent("change", { bubbles: !0 }));
    }
    function l(e) {
      var t = '<span class="multi-select__term">' + e.noSelectText + "</span>";
      if (e.noUpdateLabel) return [t, e.noSelectText];
      for (var n = "", s = "", i = (e.selectedOptCounter = 0); i < e.options.length; i++) e.options[i].selected && (0 != e.selectedOptCounter && (n += ", "), (n = n + "" + e.options[i].text), (e.selectedOptCounter = e.selectedOptCounter + 1));
      return e.selectedOptCounter > e.nMultiSelect ? ((n = '<span class="multi-select__details">' + e.multiSelectText.replace("{n}", e.selectedOptCounter) + "</span>"), (s = e.multiSelectText.replace("{n}", e.selectedOptCounter) + ", " + e.noSelectText)) : 0 < e.selectedOptCounter ? ((s = n + ", " + e.noSelectText), (n = '<span class="multi-select__details">' + n + "</span>")) : ((n = t), (s = e.noSelectText)), e.insetLabel && 0 < e.selectedOptCounter && (n = t + n), [n, s];
    }
    function o(e, t) {
      for (var n = "", s = 0; s < t.length; s++) {
        var i = t[s].hasAttribute("selected") ? ' aria-selected="true"' : ' aria-selected="false"',
          a = t[s].hasAttribute("selected") ? "checked" : "",
          n =
            n +
            '<li class="js-multi-select__option" role="option" data-value="' +
            t[s].value +
            '" ' +
            i +
            ' data-label="' +
            t[s].text +
            '" data-index="' +
            e.optionIndex +
            '"><input aria-hidden="true" class="checkbox js-multi-select__checkbox" type="checkbox" id="' +
            e.selectId +
            "-" +
            t[s].value +
            "-" +
            e.optionIndex +
            '" ' +
            a +
            '><label class="multi-select__item multi-select__item--option" aria-hidden="true" for="' +
            e.selectId +
            "-" +
            t[s].value +
            "-" +
            e.optionIndex +
            '"><span>' +
            t[s].text +
            "</span></label></li>";
        e.optionIndex = e.optionIndex + 1;
      }
      return n;
    }
    var t = document.getElementsByClassName("js-multi-select");
    if (0 < t.length) {
      for (var r = [], d = 0; d < t.length; d++) r.push(new e(t[d]));
      window.addEventListener("keyup", function (e) {
        ((e.keyCode && 27 == e.keyCode) || (e.key && "escape" == e.key.toLowerCase())) &&
          r.forEach(function (e) {
            var t;
            (t = e), document.activeElement.closest(".js-multi-select") && t.trigger.focus(), i(e, "false");
          });
      }),
        window.addEventListener("click", function (s) {
          r.forEach(function (e) {
            var t, n;
            (t = e), (n = s.target), t.element.contains(n) || i(t, "false");
          });
        });
    }
  })(),
  (function () {
    function e(e) {
      (this.element = e),
        (this.panel = this.element.getElementsByClassName("js-off-canvas__panel")[0]),
        (this.trigger = document.querySelectorAll('[aria-controls="' + this.panel.getAttribute("id") + '"]')[0]),
        (this.svgAnim = this.trigger.getElementsByTagName("circle")),
        (function (t) {
          n &&
            (t.trigger.addEventListener("click", function (e) {
              t.trigger.style.setProperty("pointer-events", "none");
            }),
            t.panel.addEventListener("openPanel", function (e) {
              t.trigger.style.setProperty("pointer-events", "none");
            }),
            t.panel.addEventListener("transitionend", function (e) {
              "visibility" == e.propertyName && t.trigger.style.setProperty("pointer-events", "");
            }));
          {
            var e;
            0 < t.svgAnim.length && ((e = (2 * Math.PI * t.svgAnim[0].getAttribute("r")).toFixed(2)), t.svgAnim[0].setAttribute("stroke-dashoffset", e), t.svgAnim[0].setAttribute("stroke-dasharray", e), Util.addClass(t.trigger, "offnav-control--ready-to-animate"));
          }
          t.panel.addEventListener("closePanel", function (e) {
            ("key" != e.detail && "close-btn" != e.detail) || t.trigger.click();
          });
        })(this);
    }
    var t = document.getElementsByClassName("js-off-canvas--nav"),
      n = Util.cssSupports("transition");
    if (0 < t.length) for (var s = 0; s < t.length; s++) new e(t[s]);
  })(),
  (function () {
    var t = function (e) {
      (this.options = Util.extend(t.defaults, e)),
        (this.element = this.options.element),
        (this.input = this.element.getElementsByClassName("js-password-strength__input")),
        (this.reqs = this.element.getElementsByClassName("js-password-strength__req")),
        (this.strengthSection = this.element.getElementsByClassName("js-password-strength__meter-wrapper")),
        (this.strengthValue = this.element.getElementsByClassName("js-password-strength__value")),
        (this.strengthMeter = this.element.getElementsByClassName("js-password-strength__meter")),
        (this.passwordInteracted = !1),
        (this.reqMetClass = "password-strength__req--met"),
        (this.reqNoMetClass = "password-strength__req--no-met"),
        (function (e) {
          e.checkStrength = !0;
          var t = e.element.getAttribute("data-check-strength");
          t && "off" == t && (e.checkStrength = !1);
        })(this),
        (function (e) {
          e.checkStrength || (e.strengthLabels = !1);
          e.strengthLabels = ["Bad", "Weak", "Good", "Strong"];
          var t = e.element.getAttribute("data-strength-labels");
          if (t) {
            var n = t.split(",");
            if (n.length < 4) return;
            e.strengthLabels = n.map(function (e) {
              return e.trim();
            });
          }
        })(this),
        (function (e) {
          if (0 == e.input.length) return;
          n(e),
            i(e),
            a(e),
            (function (s) {
              s.input[0].addEventListener("input", function (e) {
                n(s), i(s), a(s);
              }),
                s.input[0].addEventListener("blur", function e(t) {
                  s.input[0].removeEventListener("blur", e), (s.passwordInteracted = !0);
                  for (var n = 0; n < s.reqs.length; n++) Util.hasClass(s.reqs[n], s.reqMetClass) || Util.addClass(s.reqs[n], s.reqNoMetClass);
                });
            })(e);
        })(this);
    };
    function n(e) {
      0 != e.strengthSection.length && Util.toggleClass(e.strengthSection[0], "is-hidden", 0 == e.input[0].value.length);
    }
    function i(e) {
      var t, n, s, i;
      e.checkStrength &&
        zxcvbn &&
        ((t = zxcvbn(e.input[0].value)),
        0 < e.strengthValue.length && (1 <= t.score ? (e.strengthValue[0].textContent = e.strengthLabels[t.score - 1]) : (e.strengthValue[0].textContent = e.strengthLabels[0])),
        0 < e.strengthMeter.length &&
          (0 == (n = t.score) && 0 < e.input[0].value.length && (n = 1),
          (e.strengthMeter[0].firstElementChild.style.width = n / 0.04 + "%"),
          (i = (s = e).strengthMeter[0].className.split(" ").filter(function (e) {
            return 0 !== e.lastIndexOf("password-strength__meter--fill-", 0);
          })),
          (s.strengthMeter[0].className = i.join(" ").trim()),
          1 <= t.score ? Util.addClass(e.strengthMeter[0], "password-strength__meter--fill-" + t.score) : Util.addClass(e.strengthMeter[0], "password-strength__meter--fill-1")));
    }
    function a(e) {
      for (var t = 0; t < e.reqs.length; t++) {
        var n = e.reqs[t].getAttribute("data-password-req"),
          s = !1,
          s = e.options[n]
            ? e.options[n](e.input[0].value)
            : (function (e, t) {
                var n;
                switch (!0) {
                  case "uppercase" == t.trim():
                    n = e.toLowerCase() != e;
                    break;
                  case "lowercase" == t.trim():
                    n = e.toUpperCase() != e;
                    break;
                  case "number" == t.trim():
                    n = /\d/.test(e);
                    break;
                  case 0 == t.indexOf("length:"):
                    var s = t.split(":");
                    (n = e.length >= parseInt(s[1])), 2 < s.length && n && (n = e.length <= parseInt(s[2]));
                    break;
                  case "special" == t.trim():
                    n = /[!@#$%^&*=~`'"|/\?\_\-\,\;\.\:\(\)\{\}\[\]\+\>\<\\]/.test(e);
                    break;
                  case "letter" == t.trim():
                    n = /[a-zA-Z]/.test(e);
                    break;
                  default:
                    n = !1;
                }
                return n;
              })(e.input[0].value, n);
        Util.toggleClass(e.reqs[t], e.reqMetClass, s), e.passwordInteracted && Util.toggleClass(e.reqs[t], e.reqNoMetClass, !s);
      }
    }
    (t.defaults = { element: !1 }), (window.PasswordStrength = t);
    var e = document.getElementsByClassName("js-password-strength");
    if (0 < e.length) for (var s = 0; s < e.length; s++) new t({ element: e[s] });
  })(),
  (function () {
    var e = document.getElementsByClassName("js-p-table-v2");
    if (0 < e.length) {
      for (var t = 0; t < e.length; t++)
        !(function (t) {
          var e = t.getElementsByClassName("js-p-table-v2__switch");
          0 < e.length &&
            e[0].addEventListener("change", function (e) {
              Util.toggleClass(t, "p-table-v2--monthly-plan", "monthly" == e.target.value);
            });
          var n = t.getElementsByClassName("js-p-table-v2__select"),
            s = t.getElementsByClassName("js-p-table-v2__btn-volume");
          {
            var i;
            0 < n.length &&
              0 < s.length &&
              (a((i = s[0].querySelectorAll("[data-value]")), n[0].value),
              n[0].addEventListener("change", function (e) {
                a(i, n[0].value);
              }));
          }
        })(e[t]);
      function a(e, t) {
        for (var n = 0; n < e.length; n++) e[n].getAttribute("data-value") == t ? e[n].removeAttribute("style") : e[n].setAttribute("style", "display: none;");
      }
    }
  })(),
  (function () {
    var n = document.getElementsByClassName("js-p-table--has-switch");
    if (0 < n.length) {
      for (var s = 0; s < n.length; s++)
        !(function () {
          var t, e;
          (t = n[s]),
            (e = t.getElementsByClassName("js-p-table__switch")[0]) &&
              e.addEventListener("change", function (e) {
                Util.toggleClass(t, "p-table--yearly", "yearly" == e.target.value);
              });
        })();
    }
  })(),
  (function () {
    function e(e) {
      (this.element = e),
        (this.cta = this.element.getElementsByClassName("js-product-v3__cta")),
        (this.ctaClone = this.element.getElementsByClassName("js-product-v3__cta-clone")),
        (this.ctaVisible = !1),
        (this.sectionVisible = !1),
        (this.cloneDelta = "200px"),
        (this.quantity = this.element.getElementsByClassName("js-product-v3__input")),
        (this.quantityClone = this.element.getElementsByClassName("js-product-v3__input-clone")),
        (function (e) {
          if (0 == e.ctaClone.length) return;
          {
            0 < e.cta.length &&
              s &&
              new IntersectionObserver(
                function (e) {
                  e[0].isIntersecting ? ((this.ctaVisible = !0), Util.removeClass(this.ctaClone[0], "product-v3__cta-clone--is-visible")) : this.sectionVisible && ((this.ctaVisible = !1), Util.addClass(this.ctaClone[0], "product-v3__cta-clone--is-visible"));
                }.bind(e),
                { threshold: [0, 1] }
              ).observe(e.cta[0]);
          }
          {
            s &&
              new IntersectionObserver(
                function (e) {
                  e[0].isIntersecting ? (this.sectionVisible = !0) : ((this.sectionVisible = !1), Util.removeClass(this.ctaClone[0], "product-v3__cta-clone--is-visible"));
                }.bind(e),
                { rootMargin: "0px 0px -" + e.cloneDelta + " 0px" }
              ).observe(e.element);
          }
          0 < e.quantity.length &&
            0 < e.quantityClone.length &&
            (function (e) {
              e.quantity[0].addEventListener("change", function () {
                e.quantityClone[0].value = t(e, parseInt(e.quantity[0].value));
              }),
                e.quantityClone[0].addEventListener("change", function () {
                  e.quantity[0].value = t(e, parseInt(e.quantityClone[0].value));
                });
            })(e);
        })(this);
    }
    function t(e, t) {
      var n = e.quantity[0].getAttribute("min"),
        s = e.quantity[0].getAttribute("max");
      return n && t < parseInt(n) && (t = n), s && t > parseInt(s) && (t = s), t;
    }
    var n = document.getElementsByClassName("js-product-v3"),
      s = "IntersectionObserver" in window && "IntersectionObserverEntry" in window && "intersectionRatio" in window.IntersectionObserverEntry.prototype;
    if (0 < n.length) for (var i = 0; i < n.length; i++) new e(n[i]);
  })(),
  (function () {
    function e(e) {
      var a;
      (this.element = e),
        (this.rangeWrapper = this.element.getElementsByClassName("slider__range")),
        (this.rangeInput = this.element.getElementsByClassName("slider__input")),
        (this.rangeMin = this.rangeInput[0].getAttribute("min")),
        (this.rangeMax = this.rangeInput[0].getAttribute("max")),
        (this.sliderWidth = window.getComputedStyle(this.element.getElementsByClassName("slider__range")[0]).getPropertyValue("width")),
        (this.thumbWidth = getComputedStyle(this.element).getPropertyValue("--slide-thumb-size")),
        (function (e) {
          var t = Util.cssSupports("--color-value", "red");
          (!Util.cssSupports("-ms-ime-align", "auto") && t) || Util.addClass(e.element, "slider--ms-fallback");
        })((a = this)),
        l(a),
        a.element.addEventListener("updateRange", function (e) {
          var t, n, s, i;
          (t = a), (n = e.detail), (s = 0 == n ? 1 : 0), (i = parseFloat(t.rangeInput[s].value)), ((0 == n && t.rangeInput[0].value >= i) || (1 == n && t.rangeInput[1].value <= i)) && ((t.rangeInput[n].value = i), t.element.dispatchEvent(new CustomEvent("inputRangeLimit", { detail: n }))), l(a);
        }),
        a.element.addEventListener("update-slider-multi-value", function (e) {
          (a.sliderWidth = window.getComputedStyle(a.element.getElementsByClassName("slider__range")[0]).getPropertyValue("width")), l(a);
        });
    }
    function l(e) {
      var t = parseInt(((e.rangeInput[0].value - e.rangeMin) / (e.rangeMax - e.rangeMin)) * 100),
        n = parseInt(((e.rangeInput[1].value - e.rangeMin) / (e.rangeMax - e.rangeMin)) * 100),
        s = "calc(" + t + "*(" + e.sliderWidth + " - 0.5*" + e.thumbWidth + ")/100)",
        i = "calc(" + n + "*(" + e.sliderWidth + " - 0.5*" + e.thumbWidth + ")/100)";
      e.rangeWrapper[0].style.setProperty("--slider-fill-value-start", s), e.rangeWrapper[0].style.setProperty("--slider-fill-value-end", i);
    }
    var t,
      n = document.getElementsByClassName("js-slider");
    if (0 < n.length) {
      for (var s, i, a = [], o = 0; o < n.length; o++) 1 < n[(t = o)].getElementsByClassName("slider__input").length && a.push(new e(n[t]));
      function r() {
        for (var e = 0; e < a.length; e++) a[e].element.dispatchEvent(i);
      }
      0 < a.length &&
        ((s = !1),
        (i = new CustomEvent("update-slider-multi-value")),
        window.addEventListener("resize", function () {
          clearTimeout(s), (s = setTimeout(r, 500));
        }));
    }
  })(),
  (function () {
    var n = function (e) {
      var t;
      (this.options = Util.extend(n.defaults, e)),
        (this.element = this.options.element),
        (this.list = this.element.getElementsByClassName("js-slideshow-pm__list")[0]),
        (this.items = this.list.getElementsByClassName("js-slideshow-pm__item")),
        (this.controls = this.element.getElementsByClassName("js-slideshow-pm__control")),
        (this.selectedSlide = 0),
        (this.autoplayId = !1),
        (this.autoplayPaused = !1),
        (this.navigation = !1),
        (this.navCurrentLabel = !1),
        (this.ariaLive = !1),
        (this.moveFocus = !1),
        (this.animating = !1),
        (this.supportAnimation = Util.cssSupports("transition")),
        (this.itemWidth = !1),
        (this.itemMargin = !1),
        (this.containerWidth = !1),
        (this.resizeId = !1),
        (this.firstFocusable = !1),
        (this.lastFocusable = !1),
        (function (e) {
          e.element.getElementsByClassName("slideshow-pm__item--selected").length < 1 && Util.addClass(e.items[0], "slideshow-pm__item--selected");
          (e.selectedSlide = Util.getIndexInArray(e.items, e.element.getElementsByClassName("slideshow-pm__item--selected")[0])),
            c(e),
            u(e),
            a(e, 0, e.selectedSlide),
            m(e),
            b ||
              (function (e) {
                e.list.style.width = (e.items.length + 1) * (e.itemMargin + e.itemWidth) + "px";
                for (var t = 0; t < e.items.length; t++) e.items[t].style.width = e.itemWidth + "px";
              })(e);
          setTimeout(function () {
            Util.addClass(e.list, "slideshow-pm__list--has-transition");
          }, 50);
          for (var t = 0; t < e.items.length; t++) t == e.selectedSlide ? e.items[t].removeAttribute("aria-hidden") : e.items[t].setAttribute("aria-hidden", "true");
          var n = document.createElement("div");
          Util.setAttributes(n, { class: "sr-only js-slideshow-pm__aria-live", "aria-live": "polite", "aria-atomic": "true" }), e.element.appendChild(n), (e.ariaLive = n);
        })(this),
        (function (n) {
          if (n.options.navigation) {
            var e = document.createElement("ol"),
              t = "";
            e.setAttribute("class", "slideshow-pm__navigation");
            for (var s = 0; s < n.items.length; s++) {
              var i = s == n.selectedSlide ? 'class="slideshow-pm__nav-item slideshow-pm__nav-item--selected js-slideshow-pm__nav-item"' : 'class="slideshow-pm__nav-item js-slideshow-pm__nav-item"',
                a = s == n.selectedSlide ? '<span class="sr-only js-slideshow-pm__nav-current-label">Current Item</span>' : "";
              t = t + "<li " + i + '><button class="reset"><span class="sr-only">' + (s + 1) + "</span>" + a + "</button></li>";
            }
            (e.innerHTML = t),
              (n.navCurrentLabel = e.getElementsByClassName("js-slideshow-pm__nav-current-label")[0]),
              n.element.appendChild(e),
              (n.navigation = n.element.getElementsByClassName("js-slideshow-pm__nav-item")),
              e.addEventListener("click", function (e) {
                r(n, e, !0);
              }),
              e.addEventListener("keyup", function (e) {
                r(n, e, "enter" == e.key.toLowerCase());
              });
          }
          0 < n.controls.length &&
            (n.controls[0].addEventListener("click", function (e) {
              e.preventDefault(), n.showPrev(), d(n);
            }),
            n.controls[1].addEventListener("click", function (e) {
              e.preventDefault(), n.showNext(!1), d(n);
            }));
          n.options.prewNav &&
            n.element.addEventListener("click", function (e) {
              var t = e.target.closest(".js-slideshow-pm__item");
              t && !Util.hasClass(t, "slideshow-pm__item--selected") && n.showItem(Util.getIndexInArray(n.items, t));
            });
          n.options.swipe &&
            (new SwipeContent(n.element),
            n.element.addEventListener("swipeLeft", function (e) {
              n.showNext(!1);
            }),
            n.element.addEventListener("swipeRight", function (e) {
              n.showPrev();
            }));
          n.options.autoplay &&
            (n.startAutoplay(),
            n.element.addEventListener("mouseenter", function (e) {
              n.pauseAutoplay(), (n.autoplayPaused = !0);
            }),
            n.element.addEventListener("focusin", function (e) {
              n.pauseAutoplay(), (n.autoplayPaused = !0);
            }),
            n.element.addEventListener("mouseleave", function (e) {
              (n.autoplayPaused = !1), n.startAutoplay();
            }),
            n.element.addEventListener("focusout", function (e) {
              (n.autoplayPaused = !1), n.startAutoplay();
            }));
          (function (i) {
            0 < i.controls.length &&
              (i.controls[0].addEventListener("keydown", function (e) {
                ((e.keyCode && 9 == e.keyCode) || (e.key && "Tab" == e.key)) && e.shiftKey && l(i);
              }),
              i.controls[1].addEventListener("keydown", function (e) {
                ((e.keyCode && 9 == e.keyCode) || (e.key && "Tab" == e.key)) && e.shiftKey && 0 == i.selectedSlide && l(i);
              }));
            i.element.addEventListener("keydown", function (e) {
              var t, n, s;
              ((e.keyCode && 9 == e.keyCode) || (e.key && "Tab" == e.key)) &&
                ((t = e.target.closest(".js-slideshow-pm__item")) && Util.hasClass(t, "slideshow-pm__item--selected")
                  ? ((n = i), (s = e).shiftKey && n.firstFocusable && s.target == n.firstFocusable ? (s.preventDefault(), Util.moveFocus(n.element)) : !s.shiftKey && n.lastFocusable && s.target == n.lastFocusable && (s.preventDefault(), 0 != n.selectedSlide ? n.controls[0].getElementsByTagName("button")[0].focus() : n.controls[1].getElementsByTagName("button")[0].focus()))
                  : (t || (Util.hasClass(e.target, "js-slideshow-pm") && !e.shiftKey)) && o(i));
            }),
              window.addEventListener("keyup", function (e) {
                ((e.keyCode && 9 == e.keyCode) || (e.key && "Tab" == e.key)) && (e.target.closest(".js-slideshow-prew__item") || (Util.hasClass(e.target, "js-slideshow-prew") && !e.shiftKey)) && o(i);
              });
          })(n),
            window.addEventListener("resize", function (e) {
              n.pauseAutoplay(),
                clearTimeout(n.resizeId),
                (n.resizeId = setTimeout(function () {
                  var e;
                  (e = n),
                    Util.removeClass(e.list, "slideshow-pm__list--has-transition"),
                    setTimeout(function () {
                      c(e), u(e), Util.addClass(e.list, "slideshow-pm__list--has-transition");
                    }, 30),
                    setTimeout(function () {
                      n.startAutoplay();
                    }, 60);
                }, 250));
            });
        })(this),
        (t = this).list.addEventListener("transitionend", function () {
          setTimeout(function () {
            i(t);
          }, 100);
        }),
        Util.addClass(this.element, "slideshow-pm--js-loaded");
    };
    function l(e) {
      event.preventDefault(), e.lastFocusable ? e.lastFocusable.focus() : Util.moveFocus(e.element);
    }
    function o(e) {
      event.preventDefault(), e.firstFocusable ? e.firstFocusable.focus() : 0 < e.controls.length ? (0 == e.selectedSlide ? e.controls[1].getElementsByTagName("button")[0].focus() : e.controls[0].getElementsByTagName("button")[0].focus()) : e.options.navigation && e.navigation.getElementsByClassName("js-slideshow-pm__nav-item")[0].getElementsByTagName("button")[0].focus();
    }
    function i(e) {
      e.moveFocus && Util.moveFocus(e.items[e.selectedSlide]), e.items[e.selectedSlide].removeAttribute("aria-hidden"), (e.animating = !1), (e.moveFocus = !1), e.startAutoplay();
    }
    function r(e, t, n) {
      var s = t.target.closest(".js-slideshow-pm__nav-item");
      n && s && !Util.hasClass(s, "slideshow-pm__nav-item--selected") && (e.showItem(Util.getIndexInArray(e.navigation, s)), (e.moveFocus = !0), d(e));
    }
    function t(e, t, n, s) {
      (e.animating && e.supportAnimation) || (s && (t < 0 ? (t = e.items.length - 1) : t >= e.items.length && (t = 0)), t < 0 || t >= e.items.length || ((e.animating = !0), Util.removeClass(e.items[e.selectedSlide], "slideshow-pm__item--selected"), e.items[e.selectedSlide].setAttribute("aria-hidden", "true"), Util.addClass(e.items[t], "slideshow-pm__item--selected"), a(e, t, e.selectedSlide), (e.selectedSlide = t), u(e), e.pauseAutoplay(), m(e), y || i(e)));
    }
    function d(e) {
      e.ariaLive.innerHTML = "Item " + (e.selectedSlide + 1) + " of " + e.items.length;
    }
    function c(e) {
      var t = window.getComputedStyle(e.items[e.selectedSlide]);
      (e.itemWidth = parseFloat(t.getPropertyValue("width"))), (e.itemMargin = parseFloat(t.getPropertyValue("margin-right"))), (e.containerWidth = parseFloat(window.getComputedStyle(e.element).getPropertyValue("width")));
    }
    function u(e) {
      var t = parseInt((e.itemWidth + e.itemMargin) * e.selectedSlide * -1 + 0.5 * (e.containerWidth - e.itemWidth));
      (e.list.style.transform = "translateX(" + t + "px)"), (e.list.style.msTransform = "translateX(" + t + "px)");
    }
    function a(e, t, n) {
      e.navigation && (Util.removeClass(e.navigation[n], "slideshow-pm__nav-item--selected"), Util.addClass(e.navigation[t], "slideshow-pm__nav-item--selected"), e.navCurrentLabel.parentElement.removeChild(e.navCurrentLabel), e.navigation[t].getElementsByTagName("button")[0].appendChild(e.navCurrentLabel)), 0 < e.controls.length && (Util.toggleClass(e.controls[0], "slideshow-pm__control--active", 0 != t), Util.toggleClass(e.controls[1], "slideshow-pm__control--active", t != e.items.length - 1));
    }
    function m(e) {
      var t = e.items[e.selectedSlide].querySelectorAll('[href], input:not([disabled]), select:not([disabled]), textarea:not([disabled]), button:not([disabled]), iframe, object, embed, [tabindex]:not([tabindex="-1"]), [contenteditable], audio[controls], video[controls], summary');
      !(function (e, t) {
        e.firstFocusable = !1;
        for (var n = 0; n < t.length; n++) if (t[n].offsetWidth || t[n].offsetHeight || t[n].getClientRects().length) return (e.firstFocusable = t[n]);
      })(e, t),
        (function (e, t) {
          e.lastFocusable = !1;
          for (var n = t.length - 1; 0 <= n; n--) if (t[n].offsetWidth || t[n].offsetHeight || t[n].getClientRects().length) return (e.lastFocusable = t[n]);
        })(e, t);
    }
    (n.prototype.showNext = function (e) {
      t(this, this.selectedSlide + 1, 0, e);
    }),
      (n.prototype.showPrev = function () {
        t(this, this.selectedSlide - 1);
      }),
      (n.prototype.showItem = function (e) {
        t(this, e);
      }),
      (n.prototype.startAutoplay = function () {
        var e = this;
        !this.options.autoplay ||
          this.autoplayId ||
          this.autoplayPaused ||
          (e.autoplayId = setInterval(function () {
            e.showNext(!0);
          }, e.options.autoplayInterval));
      }),
      (n.prototype.pauseAutoplay = function () {
        this.options.autoplay && (clearInterval(this.autoplayId), (this.autoplayId = !1));
      }),
      (n.defaults = { element: "", navigation: !0, autoplay: !1, autoplayInterval: 5e3, prewNav: !1, swipe: !1 }),
      (window.SlideshowPrew = n);
    var e,
      s,
      h,
      g,
      p,
      v,
      f = document.getElementsByClassName("js-slideshow-pm"),
      b = Util.cssSupports("align-items", "stretch"),
      y = Util.cssSupports("transition");
    if (0 < f.length)
      for (var w = 0; w < f.length; w++)
        (v = p = g = h = s = void 0),
          (s = !f[(e = w)].getAttribute("data-navigation") || "off" != f[e].getAttribute("data-navigation")),
          (h = !(!f[e].getAttribute("data-autoplay") || "on" != f[e].getAttribute("data-autoplay"))),
          (g = f[e].getAttribute("data-autoplay-interval") ? f[e].getAttribute("data-autoplay-interval") : 5e3),
          (p = !(!f[e].getAttribute("data-pm-nav") || "on" != f[e].getAttribute("data-pm-nav"))),
          (v = !(!f[e].getAttribute("data-swipe") || "on" != f[e].getAttribute("data-swipe"))),
          new n({ element: f[e], navigation: s, autoplay: h, autoplayInterval: g, swipe: v, prewNav: p });
  })(),
  (function () {
    var i = function (e) {
      var t, n, s;
      (this.options = ((t = i.defaults), ((s = {}).element = void 0 !== (n = e).element ? n.element : t.element), (s.navigation = void 0 !== n.navigation ? n.navigation : t.navigation), (s.autoplay = void 0 !== n.autoplay ? n.autoplay : t.autoplay), (s.autoplayInterval = void 0 !== n.autoplayInterval ? n.autoplayInterval : t.autoplayInterval), (s.swipe = void 0 !== n.swipe ? n.swipe : t.swipe), s)),
        (this.element = this.options.element),
        (this.items = this.element.getElementsByClassName("js-slideshow__item")),
        (this.controls = this.element.getElementsByClassName("js-slideshow__control")),
        (this.selectedSlide = 0),
        (this.autoplayId = !1),
        (this.autoplayPaused = !1),
        (this.navigation = !1),
        (this.navCurrentLabel = !1),
        (this.ariaLive = !1),
        (this.moveFocus = !1),
        (this.animating = !1),
        (this.supportAnimation = Util.cssSupports("transition")),
        (this.animationOff = !Util.hasClass(this.element, "slideshow--transition-fade") && !Util.hasClass(this.element, "slideshow--transition-slide") && !Util.hasClass(this.element, "slideshow--transition-prx")),
        (this.animationType = Util.hasClass(this.element, "slideshow--transition-prx") ? "prx" : "slide"),
        (this.animatingClass = "slideshow--is-animating"),
        (function (e) {
          e.element.getElementsByClassName("slideshow__item--selected").length < 1 && Util.addClass(e.items[0], "slideshow__item--selected");
          e.selectedSlide = Util.getIndexInArray(e.items, e.element.getElementsByClassName("slideshow__item--selected")[0]);
          var t = document.createElement("div");
          Util.setAttributes(t, { class: "sr-only js-slideshow__aria-live", "aria-live": "polite", "aria-atomic": "true" }), e.element.appendChild(t), (e.ariaLive = t);
        })(this),
        (function (t) {
          if (t.options.navigation) {
            if (0 == t.element.getElementsByClassName("js-slideshow__navigation").length) {
              var e = document.createElement("ol"),
                n = "",
                s = "slideshow__navigation js-slideshow__navigation";
              t.items.length <= 1 && (s += " is-hidden"), e.setAttribute("class", s);
              for (var i = 0; i < t.items.length; i++) {
                var a = i == t.selectedSlide ? 'class="slideshow__nav-item slideshow__nav-item--selected js-slideshow__nav-item"' : 'class="slideshow__nav-item js-slideshow__nav-item"',
                  l = i == t.selectedSlide ? '<span class="sr-only js-slideshow__nav-current-label">Current Item</span>' : "";
                n = n + "<li " + a + '><button class="reset"><span class="sr-only">' + (i + 1) + "</span>" + l + "</button></li>";
              }
              (e.innerHTML = n), t.element.appendChild(e);
            }
            (t.navCurrentLabel = t.element.getElementsByClassName("js-slideshow__nav-current-label")[0]), (t.navigation = t.element.getElementsByClassName("js-slideshow__nav-item"));
            var o = t.element.getElementsByClassName("js-slideshow__navigation")[0];
            o.addEventListener("click", function (e) {
              c(t, e, !0);
            }),
              o.addEventListener("keyup", function (e) {
                c(t, e, "enter" == e.key.toLowerCase());
              });
          }
          0 < t.controls.length &&
            (t.items.length <= 1 && (Util.addClass(t.controls[0], "is-hidden"), Util.addClass(t.controls[1], "is-hidden")),
            t.controls[0].addEventListener("click", function (e) {
              e.preventDefault(), t.showPrev(), h(t);
            }),
            t.controls[1].addEventListener("click", function (e) {
              e.preventDefault(), t.showNext(), h(t);
            }));
          t.options.swipe &&
            (new SwipeContent(t.element),
            t.element.addEventListener("swipeLeft", function (e) {
              t.showNext();
            }),
            t.element.addEventListener("swipeRight", function (e) {
              t.showPrev();
            }));
          t.options.autoplay &&
            (t.startAutoplay(),
            t.element.addEventListener("mouseenter", function (e) {
              t.pauseAutoplay(), (t.autoplayPaused = !0);
            }),
            t.element.addEventListener("focusin", function (e) {
              t.pauseAutoplay(), (t.autoplayPaused = !0);
            }),
            t.element.addEventListener("mouseleave", function (e) {
              (t.autoplayPaused = !1), t.startAutoplay();
            }),
            t.element.addEventListener("focusout", function (e) {
              (t.autoplayPaused = !1), t.startAutoplay();
            }));
          var r = t.element.getAttribute("id");
          if (r)
            for (var d = document.querySelectorAll('[data-controls="' + r + '"]'), i = 0; i < d.length; i++)
              !(function () {
                var n, s;
                (n = t),
                  (s = d[i]).addEventListener("click", function (e) {
                    var t = s.getAttribute("data-index");
                    t && t != n.selectedSlide + 1 && (e.preventDefault(), u(n, t - 1, !1));
                  });
              })();
          t.element.addEventListener("selectNewItem", function (e) {
            if (e.detail) {
              if (e.detail - 1 == t.selectedSlide) return;
              u(t, e.detail - 1, !1);
            }
          });
        })(this),
        (function (t) {
          for (var e = 0; e < t.items.length; e++)
            !(function (e) {
              t.items[e].addEventListener("animationend", function () {
                a(t, t.items[e]);
              }),
                t.items[e].addEventListener("transitionend", function () {
                  a(t, t.items[e]);
                });
            })(e);
        })(this);
    };
    function c(e, t, n) {
      var s = Util.hasClass(t.target, "js-slideshow__nav-item") ? t.target : t.target.closest(".js-slideshow__nav-item");
      n && s && !Util.hasClass(s, "slideshow__nav-item--selected") && (e.showItem(Util.getIndexInArray(e.navigation, s)), (e.moveFocus = !0), h(e));
    }
    function a(e, t) {
      setTimeout(function () {
        Util.hasClass(t, "slideshow__item--selected") && (e.moveFocus && Util.moveFocus(t), m(e, "newItemVisible", e.selectedSlide), (e.moveFocus = !1)), Util.removeClass(t, "slideshow__item--" + e.animationType + "-out-left slideshow__item--" + e.animationType + "-out-right slideshow__item--" + e.animationType + "-in-left slideshow__item--" + e.animationType + "-in-right"), t.removeAttribute("aria-hidden"), (e.animating = !1), Util.removeClass(e.element, e.animatingClass);
      }, 100);
    }
    function u(e, t, n) {
      var s, i, a, l, o, r, d, c;
      e.items.length <= 1 ||
        (e.animating && e.supportAnimation) ||
        ((e.animating = !0),
        Util.addClass(e.element, e.animatingClass),
        t < 0 ? (t = e.items.length - 1) : t >= e.items.length && (t = 0),
        (s = (function (e, t, n, s) {
          var i = "";
          i = t ? ("next" == t ? "slideshow__item--" + e.animationType + "-out-right" : "slideshow__item--" + e.animationType + "-out-left") : s < n ? "slideshow__item--" + e.animationType + "-out-left" : "slideshow__item--" + e.animationType + "-out-right";
          return i;
        })(e, n, e.selectedSlide, t)),
        (i = (function (e, t, n, s) {
          var i = "";
          i = t ? ("next" == t ? "slideshow__item--" + e.animationType + "-in-right" : "slideshow__item--" + e.animationType + "-in-left") : s < n ? "slideshow__item--" + e.animationType + "-in-left" : "slideshow__item--" + e.animationType + "-in-right";
          return i;
        })(e, n, e.selectedSlide, t)),
        e.animationOff || Util.addClass(e.items[e.selectedSlide], s),
        Util.removeClass(e.items[e.selectedSlide], "slideshow__item--selected"),
        e.items[e.selectedSlide].setAttribute("aria-hidden", "true"),
        e.animationOff ? Util.addClass(e.items[t], "slideshow__item--selected") : Util.addClass(e.items[t], i + " slideshow__item--selected"),
        (l = t),
        (o = (a = e).selectedSlide),
        a.navigation && (Util.removeClass(a.navigation[o], "slideshow__nav-item--selected"), Util.addClass(a.navigation[l], "slideshow__nav-item--selected"), a.navCurrentLabel.parentElement.removeChild(a.navCurrentLabel), a.navigation[l].getElementsByTagName("button")[0].appendChild(a.navCurrentLabel)),
        (e.selectedSlide = t),
        e.pauseAutoplay(),
        e.startAutoplay(),
        (d = t),
        (c = (r = e).items[d].getAttribute("data-theme")) ? (r.navigation && r.navigation[0].parentElement.setAttribute("data-theme", c), r.controls[0] && r.controls[0].parentElement.setAttribute("data-theme", c)) : (r.navigation && r.navigation[0].parentElement.removeAttribute("data-theme"), r.controls[0] && r.controls[0].parentElement.removeAttribute("data-theme")),
        m(e, "newItemSelected", e.selectedSlide),
        e.animationOff && ((e.animating = !1), Util.removeClass(e.element, e.animatingClass)));
    }
    function m(e, t, n) {
      var s = new CustomEvent(t, { detail: n });
      e.element.dispatchEvent(s);
    }
    function h(e) {
      e.ariaLive.innerHTML = "Item " + (e.selectedSlide + 1) + " of " + e.items.length;
    }
    (i.prototype.showNext = function () {
      u(this, this.selectedSlide + 1, "next");
    }),
      (i.prototype.showPrev = function () {
        u(this, this.selectedSlide - 1, "prev");
      }),
      (i.prototype.showItem = function (e) {
        u(this, e, !1);
      }),
      (i.prototype.startAutoplay = function () {
        var e = this;
        !this.options.autoplay ||
          this.autoplayId ||
          this.autoplayPaused ||
          (e.autoplayId = setInterval(function () {
            e.showNext();
          }, e.options.autoplayInterval));
      }),
      (i.prototype.pauseAutoplay = function () {
        this.options.autoplay && (clearInterval(this.autoplayId), (this.autoplayId = !1));
      }),
      (i.defaults = { element: "", navigation: !0, autoplay: !1, autoplayInterval: 5e3, swipe: !1 }),
      (window.Slideshow = i);
    var e,
      t,
      n,
      s,
      l,
      o = document.getElementsByClassName("js-slideshow");
    if (0 < o.length)
      for (var r = 0; r < o.length; r++)
        (l = s = n = t = void 0), (t = !o[(e = r)].getAttribute("data-navigation") || "off" != o[e].getAttribute("data-navigation")), (n = !(!o[e].getAttribute("data-autoplay") || "on" != o[e].getAttribute("data-autoplay"))), (s = o[e].getAttribute("data-autoplay-interval") ? o[e].getAttribute("data-autoplay-interval") : 5e3), (l = !(!o[e].getAttribute("data-swipe") || "on" != o[e].getAttribute("data-swipe"))), new i({ element: o[e], navigation: t, autoplay: n, autoplayInterval: s, swipe: l });
  })(),
  (function () {
    function e(e) {
      (this.element = e),
        (this.contentTarget = document.getElementsByClassName("js-sticky-sharebar-target")),
        (this.showClass = "sticky-sharebar--on-target"),
        (this.threshold = "50%"),
        (function (e) {
          if (e.contentTarget.length < 1) return Util.addClass(e.element, e.showClass);
          n
            ? (function (n) {
                new IntersectionObserver(
                  function (e, t) {
                    Util.toggleClass(n.element, n.showClass, e[0].isIntersecting);
                  },
                  { rootMargin: "0px 0px -" + n.threshold + " 0px" }
                ).observe(n.contentTarget[0]);
              })(e)
            : Util.addClass(e.element, e.showClass);
        })(this);
    }
    var t = document.getElementsByClassName("js-sticky-sharebar"),
      n = "IntersectionObserver" in window && "IntersectionObserverEntry" in window && "intersectionRatio" in window.IntersectionObserverEntry.prototype;
    if (0 < t.length) for (var s = 0; s < t.length; s++) new e(t[s]);
  })(),
  (function () {
    var i = function (e) {
      var t, n, s;
      (this.options = Util.extend(i.defaults, e)),
        (this.element = this.options.element),
        (this.items = this.element.getElementsByClassName("js-svg-slideshow__item")),
        (this.controls = this.element.getElementsByClassName("js-svg-slideshow__control")),
        (this.selectedSlide = 0),
        (this.autoplayId = !1),
        (this.autoplayPaused = !1),
        (this.navigation = !1),
        (this.navCurrentLabel = !1),
        (this.ariaLive = !1),
        (this.animating = !1),
        (this.animatingClass = "svg-slideshow--is-animating"),
        (this.masks = this.element.getElementsByClassName("js-svg-slideshow__mask")),
        (this.maskNext = a(this, "next")),
        (this.maskPrev = a(this, "prev")),
        (this.maskId = ((t = 0), (n = 1e4), (t = Math.ceil(t)), (n = Math.floor(n)), Math.floor(Math.random() * (n - t)) + t)),
        (function (e) {
          for (var t = 0; t < e.items.length; t++)
            !(function (e, t, n) {
              for (var s = t.getElementsByTagName("img")[0], i = s.getAttribute("src"), a = s.getAttribute("alt"), l = e.masks[0].getAttribute("viewBox").split(" "), o = '<image height="' + l[3] + 'px" width="' + l[2] + 'px" clip-path="url(#img-slide-' + e.maskId + "-" + n + ')" xlink:href="' + i + '" href="' + i + '"></image>', r = '<svg aria-hidden="true" viewBox="0 0 ' + l[2] + " " + l[3] + '"><defs><clipPath id="img-slide-' + e.maskId + "-" + n + '">', d = 0; d < e.maskNext.length; d++)
                r = r + '<path d="' + e.maskNext[d][e.maskNext[d].length - 1] + '"></path>';
              (r = r + "</clipPath></defs>" + o + "</svg>"), (t.innerHTML = s.outerHTML + r), a && t.setAttribute("aria-label", a);
            })(e, e.items[t], t);
          e.element.getElementsByClassName("svg-slideshow__item--selected").length < 1 && Util.addClass(e.items[0], "svg-slideshow__item--selected");
          e.selectedSlide = Util.getIndexInArray(e.items, e.element.getElementsByClassName("svg-slideshow__item--selected")[0]);
          var n = document.createElement("div");
          Util.setAttributes(n, { class: "sr-only js-svg-slideshow__aria-live", "aria-live": "polite", "aria-atomic": "true" }), e.element.appendChild(n), (e.ariaLive = n);
        })(this),
        (function (t) {
          if (t.options.navigation) {
            var e = document.createElement("ol"),
              n = "";
            e.setAttribute("class", "svg-slideshow__navigation");
            for (var s = 0; s < t.items.length; s++) {
              var i = s == t.selectedSlide ? 'class="svg-slideshow__nav-item svg-slideshow__nav-item--selected js-svg-slideshow__nav-item"' : 'class="svg-slideshow__nav-item js-svg-slideshow__nav-item"',
                a = s == t.selectedSlide ? '<span class="sr-only js-svg-slideshow__nav-current-label">Current Item</span>' : "";
              n = n + "<li " + i + '><button class="reset"><span class="sr-only">' + (s + 1) + "</span>" + a + "</button></li>";
            }
            (e.innerHTML = n),
              (t.navCurrentLabel = e.getElementsByClassName("js-svg-slideshow__nav-current-label")[0]),
              t.element.appendChild(e),
              (t.navigation = t.element.getElementsByClassName("js-svg-slideshow__nav-item")),
              e.addEventListener("click", function (e) {
                o(t, e, !0);
              }),
              e.addEventListener("keyup", function (e) {
                o(t, e, "enter" == e.key.toLowerCase());
              });
          }
          0 < t.controls.length &&
            (t.controls[0].addEventListener("click", function (e) {
              e.preventDefault(), l(t, t.selectedSlide - 1, "prev", !0);
            }),
            t.controls[1].addEventListener("click", function (e) {
              e.preventDefault(), l(t, t.selectedSlide + 1, "next", !0);
            }));
          t.options.swipe &&
            (new SwipeContent(t.element),
            t.element.addEventListener("swipeLeft", function (e) {
              l(t, t.selectedSlide + 1, "next");
            }),
            t.element.addEventListener("swipeRight", function (e) {
              l(t, t.selectedSlide - 1, "prev");
            }));
          t.options.autoplay &&
            (d(t),
            t.element.addEventListener("mouseenter", function (e) {
              c(t), (t.autoplayPaused = !0);
            }),
            t.element.addEventListener("focusin", function (e) {
              c(t), (t.autoplayPaused = !0);
            }),
            t.element.addEventListener("mouseleave", function (e) {
              (t.autoplayPaused = !1), d(t);
            }),
            t.element.addEventListener("focusout", function (e) {
              (t.autoplayPaused = !1), d(t);
            }));
          r(t, t.selectedSlide);
        })(this),
        (s = this),
        Util.addClass(s.element, "svg-slideshow--loaded");
    };
    function a(e, t) {
      for (var n = [], s = "next" == t ? 0 : 1, i = e.masks[s].getElementsByTagName("g"), a = 0; a < i.length; a++) {
        n[a] = [];
        for (var l = i[a].getElementsByTagName("path"), o = 0; o < l.length; o++) n[a].push(l[o].getAttribute("d"));
      }
      return n;
    }
    function l(e, t, n, s) {
      var i, a, l;
      e.animating ||
        ((e.animating = !0),
        Util.addClass(e.element, e.animatingClass),
        t < 0 ? (t = e.items.length - 1) : t >= e.items.length && (t = 0),
        (a = t),
        (l = (i = e).selectedSlide),
        i.navigation && (Util.removeClass(i.navigation[l], "svg-slideshow__nav-item--selected"), Util.addClass(i.navigation[a], "svg-slideshow__nav-item--selected"), i.navCurrentLabel.parentElement.removeChild(i.navCurrentLabel), i.navigation[a].getElementsByTagName("button")[0].appendChild(i.navCurrentLabel)),
        (function (e, t, n, s) {
          for (var i = e.items[t].getElementsByTagName("path"), a = "next" == s ? e.maskNext : e.maskPrev, l = 0; l < i.length; l++) i[l].setAttribute("d", a[l][0]);
          Util.addClass(e.items[t], "svg-slideshow__item--animating"),
            (function (e, t, n, s) {
              if (g || !p) {
                for (var i = 0; i < e.length; i++) e[i].setAttribute("d", t[i][t[i].length - 1]);
                return s();
              }
              for (i = 0; i < e.length; i++) {
                var a = 100 * i,
                  l = i == e.length - 1 && s;
                !(function (e, t, n, s, i) {
                  var a = 3 == t.length ? [{ value: [t[0], t[1]] }, { value: [t[1], t[2]] }] : [{ value: [t[0], t[1]] }];
                  anime({
                    targets: e,
                    d: a,
                    easing: "easeOutQuad",
                    duration: s,
                    delay: n,
                    complete: function () {
                      i && i();
                    },
                  });
                })(e[i], t[i], a, n, l);
              }
            })(i, a, e.options.transitionDuration, function () {
              e.items[n].setAttribute("aria-hidden", "true"), e.items[t].removeAttribute("aria-hidden"), Util.addClass(e.items[t], "svg-slideshow__item--selected"), Util.removeClass(e.items[t], "svg-slideshow__item--animating"), Util.removeClass(e.items[n], "svg-slideshow__item--selected"), (e.selectedSlide = t), (e.animating = !1), Util.removeClass(e.element, e.animatingClass), c(e), d(e);
            });
        })(e, t, e.selectedSlide, n),
        s &&
          (function (e, t) {
            var n = "Item " + (t + 1) + " of " + e.items.length,
              s = e.items[t].getAttribute("aria-label");
            s && (n = n + " " + s);
            e.ariaLive.innerHTML = n;
          })(e, t),
        r(e, t));
    }
    function o(e, t, n) {
      var s,
        i = t.target.closest(".js-svg-slideshow__nav-item");
      n && i && !Util.hasClass(i, "svg-slideshow__nav-item--selected") && l(e, (s = Util.getIndexInArray(e.navigation, i)), e.selectedSlide < s ? "next" : "prev", !0);
    }
    function r(e, t) {
      var n = e.items[t].getAttribute("data-theme");
      n ? (e.navigation && e.navigation[0].parentElement.setAttribute("data-theme", n), e.controls[0] && e.controls[0].parentElement.setAttribute("data-theme", n)) : (e.navigation && e.navigation[0].parentElement.removeAttribute("data-theme"), e.controls[0] && e.controls[0].parentElement.removeAttribute("data-theme"));
    }
    function d(e) {
      !e.options.autoplay ||
        e.autoplayId ||
        e.autoplayPaused ||
        (e.autoplayId = setInterval(function () {
          l(e, e.selectedSlide + 1, "next");
        }, e.options.autoplayInterval));
    }
    function c(e) {
      e.options.autoplay && (clearInterval(e.autoplayId), (e.autoplayId = !1));
    }
    var e,
      t,
      n,
      s,
      u,
      m,
      h = document.getElementsByClassName("js-svg-slideshow"),
      g = Util.osHasReducedMotion(),
      p = window.Map;
    if (0 < h.length)
      for (var v = 0; v < h.length; v++)
        (m = u = s = n = t = void 0),
          (t = !h[(e = v)].getAttribute("data-navigation") || "off" != h[e].getAttribute("data-navigation")),
          (n = !(!h[e].getAttribute("data-autoplay") || "on" != h[e].getAttribute("data-autoplay"))),
          (s = h[e].getAttribute("data-autoplay-interval") ? h[e].getAttribute("data-autoplay-interval") : 5e3),
          (u = !(!h[e].getAttribute("data-swipe") || "on" != h[e].getAttribute("data-swipe"))),
          (m = h[e].getAttribute("data-transition-duration") ? h[e].getAttribute("data-transition-duration") : 400),
          new i({ element: h[e], navigation: t, autoplay: n, autoplayInterval: s, swipe: u, transitionDuration: m });
  })(),
  (function () {
    function e(e) {
      (this.element = e),
        (this.list = this.element.getElementsByClassName("js-toc__list")[0]),
        (this.content = document.getElementsByClassName("js-toc-conten")[0]),
        (this.anchors = this.list.querySelectorAll('a[href^="#"]')),
        (this.sections = (function (e) {
          for (var t = [], n = 0; n < e.anchors.length; n++) {
            var s = document.getElementById(e.anchors[n].getAttribute("href").replace("#", ""));
            s && t.push(s);
          }
          return t;
        })(this)),
        (this.clickScrolling = !1),
        (this.intervalID = !1),
        (function (n) {
          n.list.addEventListener("click", function (e) {
            var t = e.target.closest('a[href^="#"]');
            t && ((n.clickScrolling = !0), i(n, t));
          });
          for (
            var e = new IntersectionObserver(
                function (e, t) {
                  e.forEach(function (e) {
                    n.clickScrolling ||
                      (function (s) {
                        s.intervalID && clearInterval(s.intervalID);
                        s.intervalID = setTimeout(function () {
                          for (var e = window.innerHeight / 2, t = -1, n = 0; n < s.sections.length; n++) {
                            s.sections[n].getBoundingClientRect().top < e && (t = n);
                          }
                          -1 < t && i(s, s.anchors[t]), (s.intervalID = !1);
                        }, 100);
                      })(n);
                  });
                },
                { threshold: [0, 0.1], rootMargin: "0px 0px -70% 0px" }
              ),
              t = 0;
            t < n.sections.length;
            t++
          )
            e.observe(n.sections[t]);
          n.element.addEventListener("toc-scroll", function (e) {
            n.clickScrolling = !1;
          });
        })(this);
    }
    function i(e, t) {
      if (t) {
        for (var n = 0; n < e.anchors.length; n++) Util.removeClass(e.anchors[n], "toc__link--selected");
        Util.addClass(t, "toc__link--selected");
      }
    }
    var t = document.getElementsByClassName("js-toc"),
      n = "IntersectionObserver" in window && "IntersectionObserverEntry" in window && "intersectionRatio" in window.IntersectionObserverEntry.prototype,
      s = [];
    if (0 < t.length && n) {
      for (var a = 0; a < t.length; a++) s.push(new e(t[a]));
      var l = !1,
        o = new CustomEvent("toc-scroll");
      function r() {
        for (var e = 0; e < s.length; e++) s[e].element.dispatchEvent(o);
      }
      window.addEventListener("scroll", function () {
        clearTimeout(l), (l = setTimeout(r, 100));
      });
    }
  })(),
  (function () {
    function e(e) {
      (this.element = e),
        (this.form = this.element.getElementsByClassName("js-adv-filter__form")),
        (this.resultsList = this.element.getElementsByClassName("js-adv-filter__gallery")[0]),
        (this.resultsCount = this.element.getElementsByClassName("js-adv-filter__results-count")),
        (function (i) {
          0 < i.form.length &&
            (i.form[0].addEventListener("reset", function (e) {
              setTimeout(function () {
                var e;
                !(function (e) {
                  var t = e.element.getElementsByClassName("js-select");
                  if (0 < t.length) for (var n = 0; n < t.length; n++) t[n].dispatchEvent(new CustomEvent("select-updated"));
                  var s = e.element.getElementsByClassName("js-slider");
                  if (0 < s.length) for (n = 0; n < s.length; n++) s[n].dispatchEvent(new CustomEvent("slider-updated"));
                })(i),
                  (e = i).form[0].dispatchEvent(new CustomEvent("change")),
                  e.resultsList.dispatchEvent(new CustomEvent("update-filter-results"));
              });
            }),
            i.form[0].addEventListener("change", function (e) {
              var t = e.target.closest(".js-adv-filter__item");
              if (t) a(0, t);
              else if (Util.is(e.target, ".js-adv-filter__form")) for (var n = i.form[0].getElementsByClassName("js-adv-filter__item"), s = 0; s < n.length; s++) a(0, n[s]);
            }));
          0 < i.resultsCount.length &&
            i.resultsList.addEventListener("filter-selection-updated", function (e) {
              !(function (e) {
                for (var t = e.resultsList.children, n = 0, s = 0; s < t.length; s++)
                  !(function (e) {
                    return e.offsetWidth || e.offsetHeight || e.getClientRects().length;
                  })(t[s]) || (n += 1);
                e.resultsCount[0].textContent = n;
              })(i);
            });
        })(this);
    }
    function a(e, t) {
      var n,
        s,
        i,
        a,
        l,
        o = t.getElementsByClassName("js-adv-filter__selection");
      0 != o.length &&
        (0 < (n = t.getElementsByTagName("select")).length
          ? (o[0].textContent = (function (e, t) {
              {
                if (t.multiple) {
                  for (var n = "", s = 0, i = 0; i < t.options.length; i++) t.options[i].selected && ((n = n + "" + t.options[i].text), (s += 1)), 1 < s && (n = e.getAttribute("data-multi-select-text").replace("{n}", s));
                  return n;
                }
                return t.options[t.selectedIndex].text;
              }
            })(t, n[0]))
          : 0 < (s = t.querySelectorAll('input[type="number"]')).length
          ? (o[0].textContent = (function (e, t) {
              for (var n = 0, s = 0; s < t.length; s++) t[s].value != t[s].min && (n += 1);
              return 1 < t.length ? (0 < n ? e.getAttribute("data-multi-select-text").replace("{n}", n) : e.getAttribute("data-default-text")) : t[0].value == t[0].min ? e.getAttribute("data-default-text") : e.getAttribute("data-number-format").replace("{n}", t[0].value);
            })(t, s))
          : 0 < (i = t.querySelectorAll('input[type="range"]')).length
          ? (o[0].textContent = (function (e, t) {
              for (var n = "", s = e.getAttribute("data-number-format"), i = 0; i < t.length; i++) 0 != i && (n += " - "), (n += s.replace("{n}", t[i].value));
              return n;
            })(t, i))
          : ((a = t.querySelectorAll('input[type="radio"]')), (l = t.querySelectorAll('input[type="checkbox"]')), 0 < a.length ? (o[0].textContent = r(t, a)) : 0 < l.length && (o[0].textContent = r(t, l))));
    }
    function r(e, t) {
      var n = 0;
      label = "";
      for (var s, i = 0; i < t.length; i++) {
        t[i].checked && (0 < (s = t[i].parentNode.getElementsByTagName("label")).length && (label = s[0].textContent), (n += 1));
      }
      return 1 < n ? e.getAttribute("data-multi-select-text").replace("{n}", n) : 0 == n ? e.getAttribute("data-default-text") : label;
    }
    var t = document.getElementsByClassName("js-adv-filter");
    if (0 < t.length) for (var n = 0; n < t.length; n++) new e(t[n]);
    var s = document.getElementById("adv-filter-gallery");
    s &&
      new Filter({
        element: s,
        priceRange: function (e) {
          for (var t = [], n = document.getElementById("slider-min-value").value, s = document.getElementById("slider-max-value").value, i = 0; i < e.length; i++) {
            var a = parseInt(e[i].getAttribute("data-price"));
            t[i] = n <= a && a <= s;
          }
          return t;
        },
        indexValue: function (e) {
          for (var t = [], n = document.getElementById("index-value").value, s = 0; s < e.length; s++) {
            var i = parseInt(e[s].getAttribute("data-sort-index"));
            t[s] = n <= i;
          }
          return t;
        },
      });
  })(),
  (function () {
    var e = document.getElementById("area-chart-1");
    e &&
      new Chart({
        element: e,
        type: "area",
        xAxis: { line: !0, labels: ["Jan", "Feb", "Mar", "Apr", "May", "Jun", "Jul", "Aug", "Sep", "Oct", "Nov", "Dec"], legend: "Months", ticks: !0 },
        yAxis: { legend: "Total", labels: !0 },
        datasets: [{ data: [1, 2, 3, 12, 8, 7, 10, 4, 9, 5, 16, 3] }],
        tooltip: {
          enabled: !0,
          customHTML: function (e, t, n) {
            return '<span class="color-contrast-medium">' + t.xAxis.labels[e] + ":</span> $" + t.datasets[n].data[e];
          },
        },
        animate: !0,
      });
    var t = document.getElementById("area-chart-2");
    t &&
      new Chart({
        element: t,
        type: "area",
        smooth: !0,
        xAxis: { line: !0, range: [0, 10], step: 2, labels: !0 },
        yAxis: { labels: !0 },
        datasets: [
          {
            data: [
              [0, 1],
              [1, 2],
              [2, -3],
              [3, 12],
              [4, 8],
              [5, 7],
              [6, 10],
              [7, 4],
              [8, 9],
              [9, 5],
              [10, 16],
            ],
          },
        ],
        tooltip: {
          enabled: !0,
          position: "top",
          customHTML: function (e, t, n) {
            return 'Value: <span class="color-primary">' + t.datasets[n].data[e][1] + "</span>";
          },
        },
        animate: !0,
      });
    var n = document.getElementById("area-chart-3");
    n &&
      new Chart({
        element: n,
        type: "area",
        fillOrigin: !0,
        xAxis: { line: !0, labels: ["Jan", "Feb", "Mar", "Apr", "May", "Jun", "Jul", "Aug", "Sep", "Oct", "Nov", "Dec"], legend: "Months", ticks: !0 },
        yAxis: { legend: "Total", labels: !0 },
        datasets: [{ data: [10, 7, 4, -1, -5, -7, -6, -4, -1, 3, 5, 2] }],
        tooltip: {
          enabled: !0,
          customHTML: function (e, t, n) {
            return '<span class="color-contrast-medium">' + t.xAxis.labels[e] + ":</span> " + t.datasets[n].data[e] + "$";
          },
        },
        animate: !0,
      });
    var s = document.getElementById("multi-set-chart");
    s &&
      new Chart({
        element: s,
        type: "area",
        xAxis: { line: !0, ticks: !0, labels: ["Jan", "Feb", "Mar", "Apr", "May", "Jun", "Jul", "Aug", "Sep", "Oct", "Nov", "Dec"], legend: "Months" },
        yAxis: { legend: "Total", labels: !0 },
        datasets: [{ data: [5, 7, 11, 13, 18, 16, 17, 13, 16, 8, 15, 8] }, { data: [1, 2, 3, 6, 4, 11, 9, 10, 9, 4, 7, 3] }],
        tooltip: {
          enabled: !0,
          position: "top",
          customHTML: function (e, t, n) {
            var s = '<p class="margin-bottom-xxs">Total ' + t.xAxis.labels[e] + "</p>";
            return (s = (s = s + '<p class="flex items-center"><span class="height-xxxs width-xxxs radius-50% bg-primary margin-right-xxs"></span>$' + t.datasets[0].data[e] + "</p>") + '<p class="flex items-center"><span class="height-xxxs width-xxxs radius-50% bg-accent margin-right-xxs"></span>$' + t.datasets[1].data[e] + "</p>");
          },
        },
        animate: !0,
      });
    var i = document.getElementById("ext-area-chart");
    i &&
      new Chart({
        element: i,
        type: "area",
        xAxis: { line: !0, ticks: !0, labels: ["Jan", "Feb", "Mar", "Apr", "May", "Jun", "Jul", "Aug", "Sep", "Oct", "Nov", "Dec"], legend: "Months" },
        yAxis: { legend: "Total", labels: !0 },
        datasets: [{ data: [1, 2, 3, 6, 4, 11, 9, 10, 9, 4, 7, 3] }],
        animate: !0,
        externalData: {
          customXHTML: function (e, t, n) {
            return " " + t.xAxis.labels[e];
          },
        },
      });
  })(),
  (function () {
    var e = document.getElementById("column-chart-1");
    e &&
      new Chart({
        element: e,
        type: "column",
        xAxis: { line: !0, labels: ["Jan", "Feb", "Mar", "Apr", "May", "Jun", "Jul", "Aug", "Sep", "Oct", "Nov", "Dec"], legend: "Months", ticks: !0 },
        yAxis: { legend: "Total", labels: !0 },
        datasets: [{ data: [1, 2, 3, 12, 8, 7, 10, 4, 9, 5, 16, 3] }],
        column: { width: "60%", gap: "2px", radius: "4px" },
        tooltip: {
          enabled: !0,
          customHTML: function (e, t, n) {
            return '<span class="color-contrast-medium">' + t.xAxis.labels[e] + ":</span> $" + t.datasets[n].data[e];
          },
        },
        animate: !0,
      });
    var t = document.getElementById("column-chart-2");
    t &&
      new Chart({
        element: t,
        type: "column",
        xAxis: { line: !0, labels: ["Jan", "Feb", "Mar", "Apr", "May", "Jun", "Jul", "Aug", "Sep", "Oct", "Nov", "Dec"], legend: "Months", ticks: !0 },
        yAxis: { legend: "Total", labels: !0 },
        datasets: [{ data: [1, 2, 3, 12, 8, 7, 10, 4, 9, 5, 16, 3] }, { data: [4, 8, 10, 12, 15, 11, 7, 3, 5, 2, 12, 6] }],
        column: { width: "60%", gap: "2px", radius: "4px" },
        tooltip: {
          enabled: !0,
          customHTML: function (e, t, n) {
            var s = '<p class="margin-bottom-xxs">Total ' + t.xAxis.labels[e] + "</p>";
            return (s = (s = s + '<p class="flex items-center"><span class="height-xxxs width-xxxs radius-50% bg-primary margin-right-xxs"></span>$' + t.datasets[0].data[e] + "</p>") + '<p class="flex items-center"><span class="height-xxxs width-xxxs radius-50% bg-contrast-higher margin-right-xxs"></span>$' + t.datasets[1].data[e] + "</p>");
          },
          position: "top",
        },
        animate: !0,
      });
    var n = document.getElementById("column-chart-3");
    n &&
      new Chart({
        element: n,
        type: "column",
        stacked: !0,
        xAxis: { line: !0, labels: ["Jan", "Feb", "Mar", "Apr", "May", "Jun", "Jul", "Aug", "Sep", "Oct", "Nov", "Dec"], legend: "Months", ticks: !0 },
        yAxis: { legend: "Total", labels: !0 },
        datasets: [{ data: [1, 2, 3, 12, 8, 7, 10, 4, 9, 5, 16, 3] }, { data: [4, 8, 10, 12, 15, 11, 7, 3, 5, 2, 12, 6] }],
        column: { width: "60%", gap: "2px", radius: "4px" },
        tooltip: {
          enabled: !0,
          customHTML: function (e, t, n) {
            var s = '<p class="margin-bottom-xxs">Total ' + t.xAxis.labels[e] + "</p>";
            return (s = (s = s + '<p class="flex items-center"><span class="height-xxxs width-xxxs radius-50% bg-primary margin-right-xxs"></span>$' + t.datasets[0].data[e] + "</p>") + '<p class="flex items-center"><span class="height-xxxs width-xxxs radius-50% bg-contrast-higher margin-right-xxs"></span>$' + t.datasets[1].data[e] + "</p>");
          },
          position: "top",
        },
        animate: !0,
      });
    var s = document.getElementById("column-chart-4");
    s &&
      new Chart({
        element: s,
        type: "column",
        xAxis: { line: !0, labels: ["Jan", "Feb", "Mar", "Apr", "May", "Jun", "Jul", "Aug", "Sep", "Oct", "Nov", "Dec"], legend: "Months", ticks: !0 },
        yAxis: { legend: "Total", labels: !0 },
        datasets: [{ data: [1, 4, 8, 5, 3, -2, -5, -7, 4, 9, 5, 10, 3] }],
        column: { width: "60%", gap: "2px", radius: "4px" },
        tooltip: {
          enabled: !0,
          customHTML: function (e, t, n) {
            return '<span class="color-contrast-medium">' + t.xAxis.labels[e] + ":</span> " + t.datasets[n].data[e] + "$";
          },
        },
        animate: !0,
      });
  })(),
  (function () {
    var i = document.getElementsByClassName("js-app-ui");
    if (0 < i.length) {
      var n = i[0].getElementsByClassName("js-app-ui__menu-btn");
      if (n.length < 1) return;
      var s = "app-ui--nav-expanded",
        a = !1,
        l = !1;
      n[0].addEventListener("click", function (e) {
        var t = !Util.hasClass(i[0], s);
        Util.toggleClass(i[0], s, t),
          n[0].setAttribute("aria-expanded", t),
          t
            ? (a = (function () {
                var e = i[0].getElementsByClassName("js-app-ui__nav");
                if (e.length < 1) return !1;
                for (var t = e[0].querySelectorAll('[href], input:not([disabled]), select:not([disabled]), textarea:not([disabled]), button:not([disabled]), [tabindex]:not([tabindex="-1"]), [controls], summary'), n = !1, s = 0; s < t.length; s++)
                  if (t[s].offsetWidth || t[s].offsetHeight || t[s].getClientRects().length) {
                    n = t[s];
                    break;
                  }
                return n;
              })()) && a.focus()
            : l && (l.focus(), (l = !1));
      }),
        window.addEventListener("keyup", function (e) {
          ((e.keyCode && 27 == e.keyCode) || (e.key && "escape" == e.key.toLowerCase())) && "true" == n[0].getAttribute("aria-expanded") && o(n[0]) && ((l = n[0]), n[0].click()), ((e.keyCode && 9 == e.keyCode) || (e.key && "tab" == e.key.toLowerCase())) && "true" == n[0].getAttribute("aria-expanded") && o(n[0]) && !document.activeElement.closest(".js-app-ui__nav") && n[0].click();
        });
      var e = !1;
      function t() {
        !o(n[0]) && Util.hasClass(i[0], s) && n[0].click();
      }
      function o(e) {
        return e.offsetWidth || e.offsetHeight || e.getClientRects().length;
      }
      window.addEventListener("resize", function () {
        clearTimeout(e), (e = setTimeout(t, 500));
      });
    }
  })(),
  (function () {
    function e(e) {
      var t, n;
      (this.element = e),
        (this.slideshow = this.element.getElementsByClassName("js-exp-lightbox__body")[0]),
        (this.slideshowList = this.element.getElementsByClassName("js-exp-lightbox__slideshow")[0]),
        (this.slideshowId = this.element.getAttribute("id")),
        (this.gallery = document.querySelector('[data-controls="' + this.slideshowId + '"]')),
        (this.galleryItems = this.gallery.getElementsByClassName("js-exp-gallery__item")),
        (this.lazyload = this.gallery.getAttribute("data-placeholder")),
        (this.animationRunning = !1),
        (this.menuBar = this.element.getElementsByClassName("js-menu-bar")),
        (function (e) {
          for (var t = "", n = 0; n < e.galleryItems.length; n++) {
            var s = e.galleryItems[n].getElementsByClassName("js-exp-gallery__caption"),
              i = e.galleryItems[n].getElementsByTagName("img")[0],
              s = e.galleryItems[n].getElementsByClassName("js-exp-gallery__caption"),
              a = i.getAttribute("data-modal-src");
            a = (a = a || i.getAttribute("data-src")) || i.getAttribute("src");
            var l = i.getAttribute("alt");
            l = l ? 'alt="' + l + '"' : "";
            var o = "on" == e.slideshow.getAttribute("data-swipe") ? 'draggable="false" ondragstart="return false;"' : "",
              r = e.lazyload ? '<img data-src="' + a + '" data-loading="lazy" src="' + e.lazyload + '" ' + l + " " + o + ">" : '<img src="' + a + '" data-loading="lazy" ' + o + ">",
              d = 0 < s.length ? '<figcaption class="exp-lightbox__caption">' + s[0].textContent + "</figcaption>" : "";
            t = t + '<li class="slideshow__item js-slideshow__item"><figure class="exp-lightbox__media"><div class="exp-lightbox__media-outer"><div class="exp-lightbox__media-inner">' + r + "</div></div>" + d + "</li>";
          }
          (e.slideshowList.innerHTML = t), (e.slides = e.slideshowList.getElementsByClassName("js-slideshow__item"));
          var c = document.createElement("div");
          {
            var u;
            Util.setAttributes(c, { "aria-hidden": "true", class: "exp-lightbox__clone-img-wrapper js-exp-lightbox__clone-img-wrapper", "data-exp-morph": e.slideshowId }),
              (c.innerHTML = '<svg><defs><clipPath id="' + e.slideshowId + '-clip"><rect/></clipPath></defs><image height="100%" width="100%" clip-path="url(#' + e.slideshowId + '-clip)"></image></svg>'),
              document.body.appendChild(c),
              (e.imgMorph = document.querySelector('.js-exp-lightbox__clone-img-wrapper[data-exp-morph="' + e.slideshowId + '"]')),
              (e.imgMorphSVG = e.imgMorph.getElementsByTagName("svg")[0]),
              (e.imgMorphRect = e.imgMorph.getElementsByTagName("rect")[0]),
              (e.imgMorphImg = e.imgMorph.getElementsByTagName("image")[0]),
              "on" == e.slideshow.getAttribute("data-zoom") && ((u = document.createElement("div")), Util.setAttributes(u, { "aria-hidden": "true", class: "exp-lightbox__zoom exp-lightbox__zoom--no-transition js-exp-lightbox__zoom" }), (u.innerHTML = "<img>"), e.element.appendChild(u), (e.zoomImg = e.element.getElementsByClassName("js-exp-lightbox__zoom")[0]));
          }
        })(this),
        (t = this).slideshow.addEventListener("newItemSelected", function (e) {
          (t.selectedSlide = e.detail), s(t), d(t);
        }),
        (function (e) {
          if (e.slides.length <= 1)
            return (function (e) {
              var t = e.element.getElementsByClassName("js-slideshow__control");
              if (0 < t.length) for (var n = 0; n < t.length; n++) Util.addClass(t[n], "is-hidden");
            })(e);
          var t = !(!e.slideshow.getAttribute("data-swipe") || "on" != e.slideshow.getAttribute("data-swipe"));
          e.slideshowObj = new Slideshow({ element: e.slideshow, navigation: !1, autoplay: !1, swipe: t });
        })(this),
        (n = this),
        Util.addClass(n.element, "exp-lightbox--no-transition"),
        n.element.addEventListener("modalIsClose", function (e) {
          Util.addClass(n.element, "exp-lightbox--no-transition"), (n.imgMorph.style = "");
        }),
        n.gallery.addEventListener("click", function (e) {
          !(function (e, t) {
            var n = t.target.closest(".js-exp-gallery__item");
            if (!n) return;
            (e.selectedSlide = Util.getIndexInArray(e.galleryItems, n)),
              (function (e) {
                var t = e.slideshow.getElementsByClassName("slideshow__item--selected");
                0 < t.length && Util.removeClass(t[0], "slideshow__item--selected");
                Util.addClass(e.slides[e.selectedSlide], "slideshow__item--selected"), e.slideshowObj && (e.slideshowObj.selectedSlide = e.selectedSlide);
              })(e),
              s(e),
              c
                ? window.requestAnimationFrame(function () {
                    o(e), i(e, n);
                  })
                : (i(e, n), Util.removeClass(e.element, "exp-lightbox--no-transition"));
            d(e);
          })(n, e);
        }),
        (function (t) {
          t.zoomImg &&
            (t.slideshow.addEventListener("click", function (e) {
              "img" == e.target.tagName.toLowerCase() && e.target.closest(".js-slideshow__item") && !t.modalSwiping && l(t, e.target);
            }),
            t.zoomImg.addEventListener("click", function (e) {
              l(t, !1);
            }),
            t.element.addEventListener("modalIsClose", function (e) {
              l(t, !1),
                (function (e) {
                  e.selectedSlide = e.slideshowObj ? e.slideshowObj.selectedSlide : 0;
                  var t = e.galleryItems[e.selectedSlide].getBoundingClientRect();
                  {
                    var n;
                    (t.top < 0 || t.top > window.innerHeight) && ((n = window.scrollY || document.documentElement.scrollTop), window.scrollTo(0, t.top + n));
                  }
                  o(e, !0);
                })(t);
            }));
          if (!t.slideshowObj) return;
          t.slideshowObj.options.swipe &&
            (t.slideshowObj.element.addEventListener("swipeUp", function (e) {
              a(t);
            }),
            t.slideshowObj.element.addEventListener("swipeDown", function (e) {
              a(t);
            }));
          t.zoomImg &&
            t.slideshowObj.options.swipe &&
            (t.slideshowObj.element.addEventListener("swipeLeft", function (e) {
              t.modalSwiping = !0;
            }),
            t.slideshowObj.element.addEventListener("swipeRight", function (e) {
              t.modalSwiping = !0;
            }),
            t.slideshowObj.element.addEventListener("newItemVisible", function (e) {
              t.modalSwiping = !1;
            }));
        })(this);
    }
    function s(e) {
      t(e, e.selectedSlide), t(e, e.selectedSlide + 1), t(e, e.selectedSlide - 1);
    }
    function t(e, t) {
      t < 0 && (t = e.slides.length - 1), t > e.slides.length - 1 && (t = 0);
      for (var n = e.slides[t].querySelectorAll("img[data-src]"), s = 0; s < n.length; s++) n[s].src = n[s].getAttribute("data-src");
    }
    function i(e, t) {
      e.element.dispatchEvent(new CustomEvent("openModal", { detail: t })), (e.modalSwiping = !1);
    }
    function a(e) {
      (e.modalSwiping = !0), l(e, !1), e.element.dispatchEvent(new CustomEvent("closeModal"));
    }
    function l(e, t) {
      var n;
      e.zoomImg &&
        ((n = !1),
        t && ((e.originImg = t), e.zoomImg.children[0].setAttribute("src", t.getAttribute("src")), (n = !0)),
        c
          ? requestAnimationFrame(function () {
              !(function (t, e) {
                if (!t.originImg) return;
                var n = t.originImg.getBoundingClientRect(),
                  s = "translateX(" + n.left + "px) translateY(" + (n.top + t.zoomImg.scrollTop) + "px) scale(" + n.width / t.zoomImg.scrollWidth + ")";
                e
                  ? (t.zoomImg.children[0].style.transform = s)
                  : t.zoomImg.addEventListener("transitionend", function e() {
                      Util.addClass(t.zoomImg, "exp-lightbox__zoom--no-transition"), (t.zoomImg.scrollTop = 0), t.zoomImg.removeEventListener("transitionend", e);
                    });
                setTimeout(function () {
                  Util.removeClass(t.zoomImg, "exp-lightbox__zoom--no-transition"), Util.toggleClass(t.zoomImg, "exp-lightbox__zoom--is-visible", e), (t.zoomImg.children[0].style.transform = e ? "scale(1)" : s);
                }, 50);
              })(e, n);
            })
          : Util.toggleClass(e.zoomImg, "exp-lightbox__zoom--is-visible", n));
    }
    function o(e, t) {
      var n,
        s = e.galleryItems[e.selectedSlide].getElementsByTagName("img")[0],
        i = s.getBoundingClientRect(),
        a = e.slides[e.selectedSlide].getElementsByTagName("img")[0],
        l = a.getBoundingClientRect();
      t
        ? r(e, s, i, a, l, t)
        : ((a.style.visibility = "hidden"),
          (e.animationRunning = !1),
          ((n = new Image()).onload = function () {
            e.animationRunning || ((l = a.getBoundingClientRect()), r(e, s, i, a, l, t));
          }),
          (n.src = a.getAttribute("data-src") ? a.getAttribute("data-src") : a.getAttribute("src")),
          n.complete && ((e.animationRunning = !0), (l = a.getBoundingClientRect()), r(e, s, i, a, l, t)));
    }
    function r(n, e, t, s, i, a) {
      var l,
        o,
        r,
        d,
        c,
        u,
        m,
        h,
        g,
        p,
        v = i.width > i.height ? i.height / t.height : i.width / t.width,
        f = i.width > i.height ? t.height : i.height / v,
        b = i.width > i.height ? i.width / v : t.width,
        y = (t.height - f) / 2,
        w = (t.width - b) / 2,
        C = t.top + y,
        _ = t.left + w,
        E = i.left - t.left - w,
        x = i.top - t.top - y,
        A = t.width / b,
        k = t.height / f,
        I = 1,
        L = 1;
      function B(e, t, n, s) {
        return -n * (e /= s) * (e - 2) + t;
      }
      a && ((v = 1 / v), (I = A), (L = k), (E *= -(k = A = 1)), (x *= -1), (C = i.top), (_ = i.left), (f = i.height), (b = i.width)),
        a || (s.style.visibility = ""),
        n.imgMorph.setAttribute("style", "height: " + f + "px; width: " + b + "px; top: " + C + "px; left: " + _ + "px;"),
        n.imgMorphSVG.setAttribute("viewbox", "0 0 " + b + " " + f),
        Util.setAttributes(n.imgMorphImg, { "xlink:href": e.getAttribute("src"), href: e.getAttribute("src") }),
        Util.setAttributes(n.imgMorphRect, { style: "height: " + f + "px; width: " + b + "px;", transform: "translate(" + (b / 2) * (1 - A) + " " + (f / 2) * (1 - k) + ") scale(" + A + "," + k + ")" }),
        Util.addClass(n.imgMorph, "exp-lightbox__clone-img-wrapper--is-visible"),
        Util.addClass(n.slideshowList, "slideshow__content--is-hidden"),
        Util.addClass(n.galleryItems[n.selectedSlide], "exp-gallery-item-hidden"),
        n.imgMorph.addEventListener("transitionend", function e(t) {
          t.propertyName.indexOf("transform") < 0 ||
            (Util.removeClass(n.element, "exp-lightbox--no-transition"),
            Util.removeClass(n.imgMorph, "exp-lightbox__clone-img-wrapper--is-visible"),
            Util.removeClass(n.slideshowList, "slideshow__content--is-hidden"),
            n.imgMorph.removeAttribute("style"),
            n.imgMorphRect.removeAttribute("style"),
            n.imgMorphRect.removeAttribute("transform"),
            n.imgMorphImg.removeAttribute("href"),
            n.imgMorphImg.removeAttribute("xlink:href"),
            Util.removeClass(n.galleryItems[n.selectedSlide], "exp-gallery-item-hidden"),
            n.imgMorph.removeEventListener("transitionend", e));
        }),
        (n.imgMorph.style.transform = "translateX(" + E + "px) translateY(" + x + "px) scale(" + v + ")"),
        (l = n.imgMorphRect),
        (o = A),
        (r = k),
        (d = I),
        (c = L),
        (u = b),
        (m = f),
        (h = null),
        (g = 1e3 * parseFloat(getComputedStyle(document.documentElement).getPropertyValue("--exp-gallery-animation-duration")) || 300),
        (p = function (e) {
          var t = e - (h = h || e);
          g < t && (t = g);
          var n = B(t, o, d - o, g),
            s = B(t, r, c - r, g);
          l.setAttribute("transform", "translate(" + (u / 2) * (1 - n) + " " + (m / 2) * (1 - s) + ") scale(" + n + "," + s + ")"), t < g && window.requestAnimationFrame(p);
        }),
        window.requestAnimationFrame(p);
    }
    function d(e) {
      var t;
      e.menuBar.length < 1 || ((t = new CustomEvent("update-menu", { detail: { index: e.selectedSlide, item: e.slides[e.selectedSlide] } })), e.menuBar[0].dispatchEvent(t));
    }
    window.ExpGallery = e;
    var n = document.getElementsByClassName("js-exp-lightbox"),
      c = window.requestAnimationFrame && !Util.osHasReducedMotion();
    if (0 < n.length)
      for (var u = [], m = 0; m < n.length; m++) {
        function h(e) {
          for (var t, n, s = 0; s < u.length; s++) (n = t = void 0), (t = u[s]), (n = e), Util.hasClass(t.element, "modal--is-visible") && ((!document.activeElement.closest(".js-exp-lightbox__body") && document.activeElement.closest(".js-modal")) || (t.slideshowObj && ("next" == n ? t.slideshowObj.showNext() : t.slideshowObj.showPrev())));
        }
        u.push(new e(n[m])),
          window.addEventListener("keydown", function (e) {
            (e.keyCode && 39 == e.keyCode) || (e.key && "arrowright" == e.key.toLowerCase()) ? h("next") : ((e.keyCode && 37 == e.keyCode) || (e.key && "arrowleft" == e.key.toLowerCase())) && h("prev");
          });
      }
  })(),
  (function () {
    var l = [
        { label: "New File", class: "js-explorer__command", icon: '<svg class="icon" viewBox="0 0 20 20"><g stroke-width="2" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" fill="none"><line x1="1" y1="19" x2="19" y2="19" /><polygon points="13 1 17 5 8 14 3 15 4 10 13 1" /></g></svg>', shortcut: '<i class="explorer__shortcut">N</i>', template: "button" },
        { label: "New Project", class: "js-explorer__command", icon: '<svg class="icon" viewBox="0 0 20 20"><g stroke-width="2" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" fill="none"><path d="M10,19H4a3,3,0,0,1-3-3V1H8l2,4h9v5" /><line x1="15" y1="11" x2="15" y2="19" /><line x1="11" y1="15" x2="19" y2="15" /></g></svg>', shortcut: '<i class="explorer__shortcut">P</i>', template: "button" },
        { label: "Move to Project", class: "js-explorer__command", icon: '<svg class="icon" viewBox="0 0 20 20"><g stroke-width="2" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" fill="none"><path d="M11,19H4a3,3,0,0,1-3-3V1H8l2,4h9V9" /><line x1="9" y1="14" x2="19" y2="14" /><polyline points="15 10 19 14 15 18" /></g></svg>', shortcut: '<i class="explorer__shortcut">M</i>', template: "button" },
        { label: "Delete File", class: "js-explorer__command", icon: '<svg class="icon" viewBox="0 0 20 20"><g stroke-width="2" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" fill="none"><circle cx="10" cy="10" r="9" /><line x1="6" y1="6" x2="14" y2="14" /><line x1="14" y1="6" x2="6" y2="14" /></g></svg>', shortcut: '<i class="explorer__shortcut">⌘</i> <i class="explorer__shortcut">D</i>', template: "button" },
      ],
      o = [{ label: "Remove from Project", class: "js-explorer__command", icon: '<svg class="icon" viewBox="0 0 20 20"><g stroke-width="2" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" fill="none"><path d="M10,19H4a3,3,0,0,1-3-3V1H8l2,4h9v5" /><line x1="11" y1="15" x2="19" y2="15" /></g></svg>', shortcut: '<i class="explorer__shortcut">R</i>', template: "button" }];
    document.getElementById("explorer-link-variation") &&
      ((l = [
        { label: "Link 1", class: "js-explorer__link", url: "#0", category: "Category", template: "link" },
        { label: "Project 1", class: "js-explorer__link", url: "#0", category: "Category", template: "link" },
        { label: "Link 2", class: "js-explorer__link", url: "#0", category: "Category", template: "link" },
      ]),
      (o = [{ label: "Project 2", class: "js-explorer__link", url: "#0", category: "Category", template: "link" }]));
    var e,
      t,
      n = document.getElementsByClassName("js-explorer");
    0 < n.length &&
      ((e = n[0].closest(".js-modal")),
      (t = n[0].getElementsByClassName("js-autocomplete__input")),
      new Autocomplete({
        element: n[0],
        characters: 0,
        searchData: function (e, t) {
          var n, s, i, a;
          (s = t),
            "" != (n = e)
              ? ((i = l.filter(function (e) {
                  return -1 < e.label.toLowerCase().indexOf(n.toLowerCase());
                })),
                (a = o.filter(function (e) {
                  return -1 < e.label.toLowerCase().indexOf(n.toLowerCase());
                })),
                0 == (a = i.concat(a)).length && (a = [{ label: "No results", template: "no-results" }]),
                s(a))
              : s(l);
        },
        onClick: function (e, t, n) {
          n.preventDefault();
        },
      }),
      e &&
        e.addEventListener("modalIsClose", function (e) {
          0 < t.length && (t[0].value = "");
        }));
  })(),
  (function () {
    var n = document.getElementsByClassName("js-hide-nav");
    if (0 < n.length && window.requestAnimationFrame) {
      var s = Array.prototype.filter.call(n, function (e) {
          return Util.hasClass(e, "js-hide-nav--main");
        }),
        t = Array.prototype.filter.call(n, function (e) {
          return Util.hasClass(e, "js-hide-nav--sub");
        }),
        i = !1,
        a = window.scrollY,
        l = window.scrollY,
        o = 150,
        r = 0,
        d = !1;
      0 < s.length && Util.hasClass(s[0], "hide-nav--fixed") && (d = !0);
      var c = (function () {
          var e = n[0].getAttribute("data-mobile-trigger");
          if (!e) return !1;
          if (0 == e.indexOf("#")) {
            if ((t = document.getElementById(e.replace("#", "")))) return t;
          } else {
            var t;
            if (0 < (t = n[0].getElementsByClassName(e)).length) return t[0];
          }
          return !1;
        })(),
        e = (function () {
          if (s.length < 1) return !1;
          var e = document.createElement("div");
          e.setAttribute("aria-hidden", "true"), s[0].parentElement.insertBefore(e, s[0]);
          var t = s[0].previousElementSibling;
          return (t.style.opacity = "0"), t;
        })(),
        u = 0,
        m = n[0].getAttribute("data-nav-target-class"),
        h = [];
      function g() {
        r = s[0].offsetHeight;
      }
      function p() {
        t.length < 1 || s.length < 1 || (t[0].style.top = r - 1 + "px");
      }
      function v() {
        !d || s.length < 1 || (s[0].style.marginBottom = "-" + r + "px");
      }
      function f() {
        var e;
        10 < (l = window.scrollY) - a && o < l
          ? (function () {
              if (0 < t.length && t[0].getBoundingClientRect().top > r) return;
              if (c && "true" == c.getAttribute("aria-expanded")) return;
              !(0 < s.length) ||
                (m &&
                  (function () {
                    for (var e = !1, t = 0; t < h.length; t++)
                      if (Util.hasClass(s[0], h[t].trim())) {
                        e = !0;
                        break;
                      }
                    return e;
                  })()) ||
                (w(s[0], "-100%"), s[0].addEventListener("transitionend", y));
              0 < t.length && w(t[0], "-" + r + "px");
            })()
          : 10 < a - l || (0 < a - l && l < o)
          ? b()
          : 0 < a - l && 0 < t.length && 0 < t[0].getBoundingClientRect().top && w(t[0], "0%"),
          d && ((e = window.scrollY || window.pageYOffset), Util.toggleClass(s[0], "hide-nav--has-bg", r + u < e)),
          (a = l),
          (i = !1);
      }
      function b() {
        0 < s.length && (w(s[0], "0%"), Util.removeClass(s[0], "hide-nav--off-canvas"), s[0].removeEventListener("transitionend", y)), 0 < t.length && w(t[0], "0%");
      }
      function y() {
        s[0].removeEventListener("transitionend", y), Util.addClass(s[0], "hide-nav--off-canvas");
      }
      function w(e, t) {
        e.style.transform = "translateY(" + t + ")";
      }
      function C() {
        e && (u = e.getBoundingClientRect().top + window.scrollY);
      }
      m && (h = m.split(" ")),
        C(),
        0 < u && (o += u),
        g(),
        p(),
        v(),
        f(),
        window.addEventListener("scroll", function (e) {
          i || ((i = !0), window.requestAnimationFrame(f));
        }),
        window.addEventListener("resize", function (e) {
          i ||
            ((i = !0),
            window.requestAnimationFrame(function () {
              0 < r && (C(), g(), p(), v()), b(), (i = !1);
            }));
        });
    } else {
      if ((s = document.getElementsByClassName("js-hide-nav--main")).length < 1) return;
      Util.hasClass(s[0], "hide-nav--fixed") && Util.addClass(s[0], "hide-nav--has-bg");
    }
  })(),
  (function () {
    function e(e) {
      (this.element = e),
        (this.header = this.element.getElementsByClassName("js-int-table__header")[0]),
        (this.headerCols = this.header.getElementsByTagName("tr")[0].children),
        (this.body = this.element.getElementsByClassName("js-int-table__body")[0]),
        (this.sortingRows = this.element.getElementsByClassName("js-int-table__sort-row")),
        (function (n) {
          !(function (e) {
            var t = e.element.getAttribute("id");
            if (!t) return;
            var n = document.querySelector('[data-table-controls="' + t + '"]');
            if (!n) return;
            (e.actionsSelection = n.getElementsByClassName("js-int-table-actions__items-selected")), (e.actionsNoSelection = n.getElementsByClassName("js-int-table-actions__no-items-selected"));
          })(n);
          var e = n.element.getElementsByClassName("js-int-table__select-all");
          0 < e.length &&
            (function (t, e) {
              (t.selectAll = e[0]),
                (t.selectRow = t.element.getElementsByClassName("js-int-table__select-row")),
                t.selectAll.addEventListener("click", function (e) {
                  !(function (e) {
                    for (var t = e.selectAll.checked, n = 0; n < e.selectRow.length; n++) (e.selectRow[n].checked = t), Util.toggleClass(e.selectRow[n].closest(".int-table__row"), "int-table__row--checked", t);
                    i(e, t);
                  })(t);
                }),
                t.body.addEventListener("change", function (e) {
                  e.target.closest(".js-int-table__select-row") &&
                    (function (e) {
                      for (var t = !0, n = !1, s = 0; s < e.selectRow.length; s++) e.selectRow[s].checked ? (n = !0) : (t = !1), Util.toggleClass(e.selectRow[s].closest(".int-table__row"), "int-table__row--checked", e.selectRow[s].checked);
                      (e.selectAll.checked = n), t || (e.selectAll.indeterminate = n);
                      i(e, n);
                    })(t);
                }),
                i(t, 0 < t.element.getElementsByClassName("int-table__row--checked").length);
            })(n, e);
          (n.sortableCols = n.element.getElementsByClassName("js-int-table__cell--sort")),
            0 < n.sortableCols.length &&
              ((function (e) {
                for (var t = e.body.getElementsByTagName("tr"), n = 0; n < t.length; n++) t[n].setAttribute("data-order", n);
              })(n),
              n.header.addEventListener("click", function (e) {
                var t = e.target.closest(".js-int-table__cell--sort");
                t && "input" != e.target.tagName.toLowerCase() && s(n, t);
              }),
              n.header.addEventListener("change", function (e) {
                var t = e.target.closest(".js-int-table__cell--sort");
                t && s(n, t, e.target.value);
              }),
              n.header.addEventListener("keydown", function (e) {
                if ((e.keyCode && 13 == e.keyCode) || (e.key && "enter" == e.key.toLowerCase())) {
                  var t = e.target.closest(".js-int-table__cell--sort");
                  if (!t) return;
                  s(n, t);
                }
              }),
              n.header.addEventListener("focusin", function (e) {
                var t = document.activeElement.closest(".js-int-table__cell--sort");
                t && Util.addClass(t, "int-table__cell--focus");
              }),
              n.header.addEventListener("focusout", function (e) {
                for (var t = 0; t < n.sortableCols.length; t++) Util.removeClass(n.sortableCols[t], "int-table__cell--focus");
              }));
        })(this);
    }
    function s(e, t, n) {
      var s,
        i = n || ((s = t), Util.hasClass(s, "int-table__cell--asc") ? "desc" : Util.hasClass(s, "int-table__cell--desc") ? "none" : "asc");
      !(function (e, t, n, s) {
        var i = e.body.getElementsByTagName("tr"),
          a = !0,
          l = 0;
        for (; a; )
          for (a = !1, l = 0; l < i.length - 1; l++) {
            var o = "none" == t ? i[l].getAttribute("data-order") : i[l].children[n].textContent.trim(),
              r = "none" == t ? i[l + 1].getAttribute("data-order") : i[l + 1].children[n].textContent.trim();
            if (
              (function (e, t, n, s) {
                var i,
                  a = s.getAttribute("data-date-format");
                i = a && "none" != n ? ("asc" == n || "none" == n ? d(e, a) > d(t, a) : d(t, a) > d(e, a)) : isNaN(e) || isNaN(t) ? ("asc" == n || "none" == n ? t.toString().localeCompare(e) < 0 : e.toString().localeCompare(t) < 0) : "asc" == n || "none" == n ? Number(e) > Number(t) : Number(t) > Number(e);
                return i;
              })(o, r, t, s)
            ) {
              e.body.insertBefore(i[l + 1], i[l]), (a = !0);
              break;
            }
          }
      })(e, i, Util.getIndexInArray(e.headerCols, t), t);
      for (var a = 0; a < e.headerCols.length; a++) Util.removeClass(e.headerCols[a], "int-table__cell--asc int-table__cell--desc");
      "asc" == i && Util.addClass(t, "int-table__cell--asc"), "desc" == i && Util.addClass(t, "int-table__cell--desc"), n || (t.querySelector('input[value="' + i + '"]').checked = !0);
    }
    function d(e, t) {
      var n = e.match(/(\d+)/g),
        s = 0,
        i = {};
      return (
        t.replace(/(yyyy|dd|mm)/g, function (e) {
          i[e] = s++;
        }),
        new Date(n[i.yyyy], n[i.mm] - 1, n[i.dd])
      );
    }
    function i(e, t) {
      e.actionsSelection && 0 < e.actionsSelection.length && Util.toggleClass(e.actionsSelection[0], "is-hidden", !t), e.actionsNoSelection && 0 < e.actionsNoSelection.length && Util.toggleClass(e.actionsNoSelection[0], "is-hidden", t);
    }
    var t = document.getElementsByClassName("js-int-table");
    if (0 < t.length) for (var n = 0; n < t.length; n++) new e(t[n]);
  })(),
  (function () {
    function e(e) {
      var n;
      (this.element = e),
        (this.slideshow = this.element.getElementsByClassName("js-lightbox__body")[0]),
        (this.slides = this.slideshow.getElementsByClassName("js-slideshow__item")),
        (this.thumbWrapper = this.element.getElementsByClassName("js-lightbox_thumb-list")),
        (n = this),
        Util.addClass(n.element, "lightbox--no-transition"),
        n.element.addEventListener("modalIsOpen", function (e) {
          !(function (e, t) {
            var n = !!t.detail && t.detail.getAttribute("data-lightbox-item");
            if (!n || !e.slideshowObj) return;
            var s = document.getElementById(n);
            if (!s) return;
            var i = e.slideshow.getElementsByClassName("slideshow__item--selected");
            0 < i.length && Util.removeClass(i[0], "slideshow__item--selected");
            Util.addClass(s, "slideshow__item--selected");
          })(n, e);
          var t = n.slideshow.getElementsByClassName("slideshow__item--selected");
          (n.selectedSlide = Util.getIndexInArray(n.slides, t[0])), 0 < t.length && (n.slideshowObj && (n.slideshowObj.selectedSlide = n.selectedSlide), s(n), i(n, !1), a(n, !1), o(n)), Util.removeClass(n.element, "lightbox--no-transition");
        }),
        n.element.addEventListener("modalIsClose", function (e) {
          Util.addClass(n.element, "lightbox--no-transition");
        }),
        n.slideshow.addEventListener("newItemSelected", function (e) {
          var t = n.selectedSlide;
          (n.selectedSlide = e.detail), s(n), i(n, t), a(n, t), o(n);
        }),
        (function (e) {
          if (e.slides.length <= 1)
            return (function (e) {
              var t = e.element.getElementsByClassName("js-slideshow__control");
              if (0 < t.length) for (var n = 0; n < t.length; n++) Util.addClass(t[n], "is-hidden");
              var s = e.element.getElementsByClassName("js-lightbox_footer");
              0 < s.length && Util.addClass(s[0], "is-hidden");
            })(e);
          var t = !(!e.slideshow.getAttribute("data-swipe") || "on" != e.slideshow.getAttribute("data-swipe"));
          e.slideshowObj = new Slideshow({ element: e.slideshow, navigation: !1, autoplay: !1, swipe: t });
        })(this),
        (function (e) {
          if (e.thumbWrapper.length < 1) return;
          for (var t = "", n = 0; n < e.slides.length; n++) {
            var s = Util.hasClass(e.slides[n], "slideshow__item--selected") ? " lightbox__thumb--active" : "";
            t = t + '<li class="lightbox__thumb js-lightbox__thumb' + s + '"><img src="' + e.slides[n].querySelector("[data-thumb]").getAttribute("data-thumb") + '"></li>';
          }
          e.thumbWrapper[0].innerHTML = t;
        })(this),
        (function (n) {
          if (n.thumbWrapper.length < 1) return;
          (n.thumbSlides = n.thumbWrapper[0].getElementsByClassName("js-lightbox__thumb")),
            n.thumbWrapper[0].addEventListener("click", function (e) {
              var t = e.target.closest(".js-lightbox__thumb");
              t && !Util.hasClass(t, "lightbox__thumb--active") && n.slideshowObj.showItem(Util.getIndexInArray(n.thumbSlides, t));
            });
        })(this);
    }
    function s(e) {
      t(e, e.selectedSlide), t(e, e.selectedSlide + 1), t(e, e.selectedSlide - 1);
    }
    function t(e, t) {
      t < 0 && (t = e.slides.length - 1),
        t > e.slides.length - 1 && (t = 0),
        (function (e, t) {
          for (var n = e.slides[t].querySelectorAll("img[data-src]"), s = 0; s < n.length; s++) n[s].src = n[s].getAttribute("data-src");
        })(e, t),
        n(e, t, "video"),
        n(e, t, "iframe");
    }
    function n(e, t, n) {
      for (var s = e.slides[t].querySelectorAll(n + "[data-src]"), i = 0; i < s.length; i++) (s[0].src = s[0].getAttribute("data-src")), s[0].removeAttribute("data-src");
    }
    function i(e, t) {
      var n;
      !t || (0 < (n = e.slides[t].getElementsByTagName("video")).length && n[0].pause());
      var s = e.slides[e.selectedSlide].getElementsByTagName("video");
      0 < s.length && (l(e, e.selectedSlide, s[0]), s[0].play());
    }
    function a(e, t) {
      var n;
      !t || (0 < (n = e.slides[t].getElementsByTagName("iframe")).length && (n[0].setAttribute("data-src", n[0].src), n[0].removeAttribute("src")));
      var s = e.slides[e.selectedSlide].getElementsByTagName("iframe");
      0 < s.length && l(e, e.selectedSlide, s[0]);
    }
    function l(e, t, n) {
      var s,
        i,
        a = e.slides[t].getElementsByClassName("js-lightbox__media-outer");
      0 != a.length && ((s = a[0].getElementsByClassName("js-lightbox__media-inner")), (i = (n.offsetWidth / n.offsetHeight) * a[0].offsetHeight) < e.slides[t].offsetWidth ? ((s[0].style.width = i + "px"), (s[0].style.paddingBottom = a[0].offsetHeight + "px")) : s[0].removeAttribute("style"));
    }
    function o(e) {
      var t, n, s;
      e.thumbWrapper.length < 1 ||
        (0 < (t = e.thumbWrapper[0].getElementsByClassName("lightbox__thumb--active")).length && Util.removeClass(t[0], "lightbox__thumb--active"),
        Util.addClass(e.thumbSlides[e.selectedSlide], "lightbox__thumb--active"),
        (n = e.thumbSlides[e.selectedSlide].getBoundingClientRect()),
        (s = e.thumbWrapper[0].getBoundingClientRect()),
        n.left < s.left ? e.thumbWrapper[0].scrollTo(e.thumbSlides[e.selectedSlide].offsetLeft - s.left, 0) : n.right > s.right && e.thumbWrapper[0].scrollTo(n.right - s.right + e.thumbWrapper[0].scrollLeft, 0));
    }
    window.Lightbox = e;
    var r = document.getElementsByClassName("js-lightbox");
    if (0 < r.length)
      for (var d = [], c = 0; c < r.length; c++) {
        d.push(new e(r[c]));
        var u = !1;
        function m() {
          for (var e, t, n, s = 0; s < d.length; s++) (n = t = e = void 0), (e = d[s]).selectedSlide && (0 < (t = e.slides[e.selectedSlide].getElementsByTagName("video")).length && l(e, e.selectedSlide, t[0]), 0 < (n = e.slides[e.selectedSlide].getElementsByTagName("iframe")).length && l(e, e.selectedSlide, n[0]));
        }
        function h(e) {
          for (var t, n, s = 0; s < d.length; s++) (n = t = void 0), (t = d[s]), (n = e), Util.hasClass(t.element, "modal--is-visible") && ((!document.activeElement.closest(".js-lightbox__body") && document.activeElement.closest(".js-modal")) || ("next" == n ? t.slideshowObj.showNext() : t.slideshowObj.showPrev()));
        }
        window.addEventListener("resize", function (e) {
          clearTimeout(u), (u = setTimeout(m, 300));
        }),
          window.addEventListener("keydown", function (e) {
            (e.keyCode && 39 == e.keyCode) || (e.key && "arrowright" == e.key.toLowerCase()) ? h("next") : ((e.keyCode && 37 == e.keyCode) || (e.key && "arrowleft" == e.key.toLowerCase())) && h("prev");
          });
      }
  })(),
  (function () {
    var e = document.getElementById("line-chart-1");
    e &&
      new Chart({
        element: e,
        type: "line",
        xAxis: { line: !0, labels: ["Jan", "Feb", "Mar", "Apr", "May", "Jun", "Jul", "Aug", "Sep", "Oct", "Nov", "Dec"], legend: "Months", ticks: !0 },
        yAxis: { legend: "Total", labels: !0 },
        datasets: [{ data: [1, 2, 3, 12, 8, 7, 10, 4, 9, 5, 16, 3] }],
        tooltip: {
          enabled: !0,
          customHTML: function (e, t, n) {
            return '<span class="color-contrast-medium">' + t.xAxis.labels[e] + ":</span> $" + t.datasets[n].data[e];
          },
        },
        animate: !0,
      });
    var t = document.getElementById("line-chart-2");
    t &&
      new Chart({
        element: t,
        type: "line",
        smooth: !0,
        xAxis: { line: !0, range: [0, 10], step: 2, labels: !0 },
        yAxis: { labels: !0 },
        datasets: [
          {
            data: [
              [0, 1],
              [1, 2],
              [2, -3],
              [3, 12],
              [4, 8],
              [5, 7],
              [6, 10],
              [7, 4],
              [8, 9],
              [9, 5],
              [10, 16],
            ],
          },
        ],
        tooltip: {
          enabled: !0,
          position: "top",
          customHTML: function (e, t, n) {
            return 'Value: <span class="color-primary">' + t.datasets[n].data[e][1] + "</span>";
          },
        },
        animate: !0,
      });
    var i,
      n = document.getElementById("timeline-chart");
    function s(e) {
      var t = new Date(e),
        n = t.getDate(),
        s = t.getMonth();
      return n + " " + i[s];
    }
    n &&
      ((i = ["Jan", "Feb", "Mar", "Apr", "May", "Jun", "Jul", "Aug", "Sep", "Oct", "Nov", "Dec"]),
      new Chart({
        element: n,
        type: "line",
        xAxis: { line: !0, ticks: !0, labels: !0, range: [new Date("2018-02-25").getTime(), new Date("2018-03-05").getTime()], step: 1728e5, labelModifier: s },
        yAxis: { legend: "Temp", labels: !0 },
        datasets: [
          {
            data: [
              [new Date("2018-02-25").getTime(), 1],
              [new Date("2018-02-26").getTime(), 10],
              [new Date("2018-02-27").getTime(), 7],
              [new Date("2018-02-28").getTime(), 12],
              [new Date("2018-03-01").getTime(), 8],
              [new Date("2018-03-02").getTime(), 10],
              [new Date("2018-03-03").getTime(), 4],
              [new Date("2018-03-04").getTime(), 8],
              [new Date("2018-03-05").getTime(), 10],
            ],
          },
        ],
        tooltip: {
          enabled: !0,
          customHTML: function (e, t, n) {
            return '<span class="color-contrast-medium">' + s(t.datasets[n].data[e][0]) + " - </span> " + t.datasets[n].data[e][1] + "°C";
          },
        },
        animate: !0,
      }));
    var a = document.getElementById("multi-line-chart");
    a &&
      new Chart({
        element: a,
        type: "line",
        xAxis: { line: !0, ticks: !0, labels: ["Jan", "Feb", "Mar", "Apr", "May", "Jun", "Jul", "Aug", "Sep", "Oct", "Nov", "Dec"], legend: "Months" },
        yAxis: { legend: "Total", labels: !0 },
        datasets: [{ data: [1, 2, 3, 6, 4, 11, 9, 10, 9, 4, 7, 3] }, { data: [5, 7, 11, 13, 18, 16, 17, 13, 16, 8, 15, 8] }],
        tooltip: {
          enabled: !0,
          position: "top",
          customHTML: function (e, t, n) {
            var s = '<p class="margin-bottom-xxs">Total ' + t.xAxis.labels[e] + "</p>";
            return (s = (s = s + '<p class="flex items-center"><span class="height-xxxs width-xxxs radius-50% bg-primary margin-right-xxs"></span>$' + t.datasets[0].data[e] + "</p>") + '<p class="flex items-center"><span class="height-xxxs width-xxxs radius-50% bg-accent margin-right-xxs"></span>$' + t.datasets[1].data[e] + "</p>");
          },
        },
        animate: !0,
      });
    var l = document.getElementById("ext-line-chart");
    l &&
      new Chart({
        element: l,
        type: "line",
        xAxis: { line: !0, ticks: !0, labels: ["Jan", "Feb", "Mar", "Apr", "May", "Jun", "Jul", "Aug", "Sep", "Oct", "Nov", "Dec"], legend: "Months" },
        yAxis: { legend: "Total", labels: !0 },
        datasets: [{ data: [1, 2, 3, 6, 4, 11, 9, 10, 9, 4, 7, 3] }],
        animate: !0,
        externalData: {
          customXHTML: function (e, t, n) {
            return " " + t.xAxis.labels[e];
          },
        },
      });
  })(),
  (function () {
    function i(e) {
      var t;
      (this.element = e),
        (this.trigger = this.element.getElementsByClassName("header-v2__nav-link")[0]),
        (this.dropdown = this.element.getElementsByClassName("header-v2__nav-dropdown")[0]),
        (this.triggerFocus = !1),
        (this.dropdownFocus = !1),
        (this.hideInterval = !1),
        (this.prevFocus = !1),
        n((t = this), t.trigger),
        n(t, t.dropdown),
        (function (o) {
          for (var e = o.element.getElementsByClassName("header-v2__nav-list"), t = 0; t < e.length; t++) {
            e[t].children;
            new menuAim({
              menu: e[t],
              activate: function (e) {
                var t = e.getElementsByClassName("header-v2__nav-dropdown")[0];
                t && (Util.addClass(e.querySelector("a.header-v2__nav-link"), "header-v2__nav-link--hover"), r(0, t));
              },
              deactivate: function (e) {
                var t = e.getElementsByClassName("header-v2__nav-dropdown")[0];
                t && (Util.removeClass(e.querySelector("a.header-v2__nav-link"), "header-v2__nav-link--hover"), d(0, t));
              },
              exitMenu: function () {
                return !0;
              },
              submenuSelector: ".header-v2__nav-item--has-children",
            });
          }
          o.element.addEventListener("keydown", function (e) {
            ((e.keyCode && 9 == e.keyCode) || (e.key && "Tab" == e.key)) && (o.prevFocus = document.activeElement);
          }),
            o.element.addEventListener("keyup", function (e) {
              if ((e.keyCode && 9 == e.keyCode) || (e.key && "Tab" == e.key)) {
                var t = document.activeElement,
                  n = t.closest(".header-v2__nav-dropdown"),
                  s = t.nextElementSibling;
                if ((n && !Util.hasClass(n, "header-v2__nav-list--is-visible") && r(0, n), s && !Util.hasClass(s, "header-v2__nav-list--is-visible") && r(0, s), !o.prevFocus)) return;
                var i = o.prevFocus.closest(".header-v2__nav-dropdown"),
                  a = o.prevFocus.nextElementSibling;
                if (!i) return;
                if (n && n == i) return void (a && d(0, a));
                if (a && n && n == a) return;
                if (s && i && s == i) return;
                var l = n.parentNode.closest(".header-v2__nav-dropdown");
                if (l && l == i) return void (a && d(0, a));
                i && Util.hasClass(i, "header-v2__nav-list--is-visible") && d(0, i);
              }
            });
        })(this);
    }
    function n(t, e) {
      e.addEventListener("focus", function () {
        (function (e) {
          e.hideInterval && clearInterval(e.hideInterval);
          Util.addClass(e.dropdown, "header-v2__nav-list--is-visible"), b(e.dropdown, !0);
        })(t);
      }),
        e.addEventListener("focusout", function (e) {
          (function (n) {
            n.hideInterval && clearInterval(this.hideInterval);
            n.hideInterval = setTimeout(function () {
              var e = document.activeElement.closest(".header-v2__nav-item--main"),
                t = e && e == n.element;
              n.triggerFocus ||
                n.dropdownFocus ||
                t ||
                (Util.removeClass(n.dropdown, "header-v2__nav-list--is-visible"),
                b(n.dropdown, !1),
                (function (e) {
                  var t = e.dropdown.getElementsByClassName("header-v2__nav-list--is-visible");
                  if (0 == t.length) return;
                  for (; t[0]; ) d(0, t[0]);
                  var n = e.dropdown.getElementsByClassName("header-v2__nav-link--hover");
                  for (; n[0]; ) Util.removeClass(n[0], "header-v2__nav-link--hover");
                })(n),
                (n.prevFocus = !1));
            }, 100);
          })(t);
        });
    }
    function r(e, t, n) {
      var s;
      null == n && (Util.removeClass(t, "header-v2__nav-dropdown--nested-left"), (s = t.getBoundingClientRect()), window.innerWidth - s.right < 5 && s.left + window.scrollX > 2 * s.width && Util.addClass(t, "header-v2__nav-dropdown--nested-left")), Util.addClass(t, "header-v2__nav-list--is-visible");
    }
    function d(e, t) {
      Util.hasClass(t, "header-v2__nav-list--is-visible") &&
        (Util.removeClass(t, "header-v2__nav-list--is-visible"),
        t.addEventListener("transition", function e() {
          t.removeEventListener("transition", e), Util.removeClass(t, "header-v2__nav-dropdown--nested-left");
        }));
    }
    var s = document.getElementsByClassName("js-header-v2");
    if (0 < s.length) {
      var t = s[0].getElementsByClassName("js-anim-menu-btn")[0],
        a = (function () {
          for (var e = s[0].getElementsByClassName("header-v2__nav")[0].querySelectorAll('[href], input:not([disabled]), select:not([disabled]), textarea:not([disabled]), button:not([disabled]), iframe, object, embed, [tabindex]:not([tabindex="-1"]), [contenteditable], audio[controls], video[controls], summary'), t = !1, n = 0; n < e.length; n++)
            if (e[n].offsetWidth || e[n].offsetHeight || e[n].getClientRects().length) {
              t = e[n];
              break;
            }
          return t;
        })(),
        l = !1;
      t.addEventListener("anim-menu-btn-clicked", function (e) {
        Util.toggleClass(document.getElementsByClassName("header-v2__nav")[0], "header-v2__nav--is-visible", e.detail), Util.toggleClass(s[0], "header-v2--expanded", e.detail), t.setAttribute("aria-expanded", e.detail), e.detail ? a.focus() : l && (l.focus(), (l = !1));
      });
      var o = s[0].getElementsByClassName("header-v2__nav-list--main");
      if (0 < o.length)
        for (var e = 0; e < o.length; e++)
          !(function (e) {
            new menuAim({
              menu: o[e],
              activate: function (e) {
                var t = e.getElementsByClassName("header-v2__nav-dropdown");
                0 != t.length && (Util.addClass(t[0], "header-v2__nav-list--is-visible"), b(t[0], !0));
              },
              deactivate: function (e) {
                var t = e.getElementsByClassName("header-v2__nav-dropdown");
                0 != t.length && (Util.removeClass(t[0], "header-v2__nav-list--is-visible"), b(t[0], !1));
              },
              exitMenu: function () {
                return !0;
              },
              submenuSelector: ".header-v2__nav-item--has-children",
              submenuDirection: "below",
            });
            for (var t, n = o[e].getElementsByClassName("header-v2__nav-item--main"), s = 0; s < n.length; s++) (t = s), Util.hasClass(n[t], "header-v2__nav-item--has-children") && new i(n[t]);
          })(e);
      var c,
        u,
        m,
        h,
        g = s[0].getAttribute("data-animation");
      function p() {
        var e = window.scrollY || document.documentElement.scrollTop;
        Util.toggleClass(h, "header-v2__wrapper--is-fixed", m <= e), Util.toggleClass(h, "header-v2__wrapper--slides-down", u <= e), (c = !1);
      }
      g &&
        "on" == g &&
        ((c = !1),
        (u = s[0].getAttribute("data-animation-offset") ? parseInt(s[0].getAttribute("data-animation-offset")) : 400),
        (m = s[0].offsetHeight),
        (h = s[0].getElementsByClassName("header-v2__wrapper")[0]),
        window.addEventListener("scroll", function (e) {
          c ||
            ((c = !0),
            window.requestAnimationFrame
              ? window.requestAnimationFrame(p)
              : setTimeout(function () {
                  p();
                }, 250));
        })),
        window.addEventListener("keyup", function (e) {
          ((e.keyCode && 27 == e.keyCode) || (e.key && "escape" == e.key.toLowerCase())) && "true" == t.getAttribute("aria-expanded") && y(t) && (l = t).click(), ((e.keyCode && 9 == e.keyCode) || (e.key && "tab" == e.key.toLowerCase())) && "true" == t.getAttribute("aria-expanded") && y(t) && !document.activeElement.closest(".js-header-v2") && t.click();
        });
      var v = !1;
      function f() {
        !y(t) && Util.hasClass(s[0], "header-v2--expanded") && t.click();
      }
      window.addEventListener("resize", function () {
        clearTimeout(v), (v = setTimeout(f, 500));
      });
    }
    function b(t, e) {
      var n, s;
      e
        ? ((n = t.getBoundingClientRect()), window.innerWidth - n.right < 5 && n.left + window.scrollX > 2 * n.width && ((s = parseFloat(window.getComputedStyle(t).getPropertyValue("left"))), (t.style.left = s + window.innerWidth - n.right - 5 + "px")))
        : t.addEventListener("transitionend", function e() {
            t.removeAttribute("style"), t.removeEventListener("transitionend", e);
          });
    }
    function y(e) {
      return e.offsetWidth || e.offsetHeight || e.getClientRects().length;
    }
  })(),
  (function () {
    function e(e) {
      var t;
      (this.element = e),
        (this.search = this.element.getElementsByClassName("js-mega-nav__search")),
        (this.searchActiveController = !1),
        (this.menu = this.element.getElementsByClassName("js-mega-nav__nav")),
        (this.menuItems = this.menu[0].getElementsByClassName("js-mega-nav__item")),
        (this.menuActiveController = !1),
        (this.itemExpClass = "mega-nav__item--expanded"),
        (this.classIconBtn = "mega-nav__icon-btn--state-b"),
        (this.classSearchVisible = "mega-nav__search--is-visible"),
        (this.classNavVisible = "mega-nav__nav--is-visible"),
        (this.classMobileLayout = "mega-nav--mobile"),
        (this.classDesktopLayout = "mega-nav--desktop"),
        (this.layout = "mobile"),
        (this.dropdown = this.element.getElementsByClassName("js-dropdown")),
        (this.expandedClass = "mega-nav--expanded"),
        n((t = this)),
        (function (n) {
          if (0 == n.search.length) return;
          n.searchToggles = document.querySelectorAll('[aria-controls="' + n.search[0].getAttribute("id") + '"]');
          for (var e = 0; e < n.searchToggles.length; e++)
            !(function (t) {
              n.searchToggles[t].addEventListener("click", function (e) {
                i(n, n.search[0], "searchActiveController", n.classSearchVisible, n.searchToggles[t], !0), Util.hasClass(n.menu[0], n.classNavVisible) && i(n, n.menu[0], "menuActiveController", n.classNavVisible, n.menuActiveController, !1), l(n, !1), r(n);
              });
            })(e);
        })(t),
        (function (n) {
          if (0 == n.menu.length) return;
          n.menuToggles = document.querySelectorAll('[aria-controls="' + n.menu[0].getAttribute("id") + '"]');
          for (var e = 0; e < n.menuToggles.length; e++)
            !(function (t) {
              n.menuToggles[t].addEventListener("click", function (e) {
                i(n, n.menu[0], "menuActiveController", n.classNavVisible, n.menuToggles[t], !0), Util.hasClass(n.search[0], n.classSearchVisible) && i(n, n.search[0], "searchActiveController", n.classSearchVisible, n.searchActiveController, !1), r(n);
              });
            })(e);
        })(t),
        (function (i) {
          i.element.addEventListener("click", function (e) {
            var t,
              n,
              s = e.target.closest(".js-mega-nav__control");
            !s || ((t = s.closest(".js-mega-nav__item")) && ((n = Util.hasClass(t, i.itemExpClass)), Util.toggleClass(t, i.itemExpClass, !n), n ? s.removeAttribute("aria-expanded") : s.setAttribute("aria-expanded", "true"), "desktop" != i.layout || n || l(i, t), a(i, !1), r(i)));
          });
        })(t),
        t.element.addEventListener("update-menu-layout", function (e) {
          n(t);
        });
    }
    function n(e) {
      var t,
        n = getComputedStyle(e.element, ":before").getPropertyValue("content").replace(/\'|"/g, "");
      n != e.layout &&
        ((e.layout = n),
        Util.toggleClass(e.element, e.classDesktopLayout, "desktop" == e.layout),
        Util.toggleClass(e.element, e.classMobileLayout, "desktop" != e.layout),
        "desktop" == e.layout &&
          (l(e, !1),
          (function (e) {
            if (0 == e.dropdown.length) return;
            for (var t = 0; t < e.dropdown.length; t++) e.dropdown[t].dispatchEvent(new CustomEvent("placeDropdown"));
          })(e)),
        a(e, !1),
        (t = e),
        document.documentElement.style.setProperty("--mega-nav-offset-y", t.element.getBoundingClientRect().top + "px"),
        r(e));
    }
    function s(e) {
      a(e), Util.hasClass(e.menu[0], e.classNavVisible) && i(e, e.menu[0], "menuActiveController", e.classNavVisible, e.menuActiveController, !0), l(e, !1), r(e);
    }
    function a(e, t) {
      e.search.length < 1 || (Util.hasClass(e.search[0], e.classSearchVisible) && i(e, e.search[0], "searchActiveController", e.classSearchVisible, e.searchActiveController, t));
    }
    function i(e, t, n, s, i, a) {
      var l = Util.hasClass(t, s);
      Util.toggleClass(t, s, !l),
        Util.toggleClass(i, e.classIconBtn, !l),
        l ? i.removeAttribute("aria-expanded") : i.setAttribute("aria-expanded", "true"),
        l
          ? (i && a && i.focus(), (e[n] = !1))
          : (i && (e[n] = i),
            (function (e) {
              for (var t = e.querySelectorAll('[href], input:not([disabled]), select:not([disabled]), textarea:not([disabled]), button:not([disabled]), iframe, object, embed, [tabindex]:not([tabindex="-1"]), [contenteditable], audio[controls], video[controls], summary'), n = !1, s = 0; s < t.length; s++)
                if (t[s].offsetWidth || t[s].offsetHeight || t[s].getClientRects().length) {
                  n = t[s];
                  break;
                }
              return n;
            })(t).focus());
    }
    function l(e, t) {
      if (0 != e.menuItems.length) for (var n = 0; n < e.menuItems.length; n++) e.menuItems[n] != t && o(e, n);
    }
    function o(e, t) {
      Util.removeClass(e.menuItems[t], e.itemExpClass);
      var n = e.menuItems[t].getElementsByClassName("js-mega-nav__control");
      0 < n.length && n[0].removeAttribute("aria-expanded");
    }
    function r(e) {
      (0 < e.element.getElementsByClassName(e.itemExpClass).length && "desktop" == e.layout) || 0 < e.element.getElementsByClassName(e.classSearchVisible).length || (0 < e.element.getElementsByClassName(e.classNavVisible).length && "mobile" == e.layout) ? Util.addClass(e.element, e.expandedClass) : Util.removeClass(e.element, e.expandedClass);
    }
    var t = document.getElementsByClassName("js-mega-nav");
    if (0 < t.length) {
      for (var d = [], c = 0; c < t.length; c++) d.push(new e(t[c]));
      window.addEventListener("keyup", function (e) {
        if ((e.keyCode && 27 == e.keyCode) || (e.key && "escape" == e.key.toLowerCase())) for (var t = 0; t < d.length; t++) s(d[t]);
        if ((e.keyCode && 9 == e.keyCode) || (e.key && "tab" == e.key.toLowerCase()))
          for (t = 0; t < d.length; t++)
            !(function (e) {
              Util.hasClass(e.search[0], e.classSearchVisible) && !document.activeElement.closest(".js-mega-nav__search") && i(e, e.search[0], "searchActiveController", e.classSearchVisible, e.searchActiveController, !0), Util.hasClass(e.menu[0], e.classNavVisible) && !document.activeElement.closest(".js-mega-nav__nav") && i(e, e.menu[0], "menuActiveController", e.classNavVisible, e.menuActiveController, !0);
              for (var t, n = 0; n < e.menuItems.length; n++) {
                Util.hasClass(e.menuItems[n], e.itemExpClass) && (((t = document.activeElement.closest(".js-mega-nav__item")) && t == e.menuItems[n]) || o(e, n));
              }
              r(e);
            })(d[t]);
      }),
        window.addEventListener("click", function (e) {
          e.target.closest(".js-mega-nav") || s(d[0]);
        });
      var u = !1,
        m = new CustomEvent("update-menu-layout");
      function h() {
        for (var e = 0; e < d.length; e++) d[e].element.dispatchEvent(m);
      }
      window.addEventListener("resize", function (e) {
        clearTimeout(u), (u = setTimeout(h, 200));
      });
    }
  })(),
  (function () {
    function e(e) {
      var t, n, s, i;
      (this.element = e),
        (this.slideshow = this.element.getElementsByClassName("slideshow")[0]),
        (this.slideshowItems = this.slideshow.getElementsByClassName("js-slideshow__item")),
        (this.carousel = this.element.getElementsByClassName("thumbslide__nav-wrapper")[0]),
        (this.carouselList = this.carousel.getElementsByClassName("thumbslide__nav-list")[0]),
        (this.carouselListWrapper = this.carousel.getElementsByClassName("thumbslide__nav")[0]),
        (this.carouselControls = this.element.getElementsByClassName("js-thumbslide__tb-control")),
        (this.slideshowObj = !1),
        (this.thumbItems = !1),
        (this.thumbOriginalWidth = !1),
        (this.thumbOriginalHeight = !1),
        (this.thumbVisibItemsNb = !1),
        (this.itemsWidth = !1),
        (this.itemsHeight = !1),
        (this.itemsMargin = !1),
        (this.thumbTranslateContainer = !1),
        (this.thumbTranslateVal = 0),
        (this.thumbVertical = Util.hasClass(this.element, "thumbslide--vertical")),
        (this.recursiveDirection = !1),
        (this.thumbDragging = !1),
        (this.dragStart = !1),
        (this.resize = !1),
        (this.loaded = !1),
        (function (e) {
          for (var t = "", n = 0; n < e.slideshowItems.length; n++) {
            var s = e.slideshowItems[n].getAttribute("data-thumb"),
              i = e.slideshowItems[n].getAttribute("data-alt");
            t = t + '<li class="thumbslide__nav-item"><img src="' + s + '" alt="' + (i = i || "Image Preview") + '"></li>';
          }
          (e.carouselList.innerHTML = t),
            (e.thumbVertical
              ? function e(t) {
                  t.loaded
                    ? (l(t), u(t, 0), m(t), o(t))
                    : setTimeout(function () {
                        e(t);
                      }, 100);
                }
              : a)(e);
        })(this),
        (n = !(!(t = this).slideshow.getAttribute("data-autoplay") || "on" != t.slideshow.getAttribute("data-autoplay"))),
        (s = t.slideshow.getAttribute("data-autoplay-interval") ? t.slideshow.getAttribute("data-autoplay-interval") : 5e3),
        (i = !(!t.slideshow.getAttribute("data-swipe") || "on" != t.slideshow.getAttribute("data-swipe"))),
        (t.slideshowObj = new Slideshow({ element: t.slideshow, navigation: !1, autoplay: n, autoplayInterval: s, swipe: i })),
        (function (e) {
          {
            var t;
            e.thumbVertical
              ? (((t = new Image()).onload = function () {
                  e.loaded = !0;
                }),
                (t.onerror = function () {
                  e.loaded = !0;
                }),
                (t.src = e.slideshowItems[0].getAttribute("data-thumb")))
              : (u(e, 0), m(e), o(e));
          }
        })(this);
    }
    function a(e) {
      e.thumbItems = e.carouselList.getElementsByClassName("thumbslide__nav-item");
      var t = window.getComputedStyle(e.thumbItems[0]),
        n = window.getComputedStyle(e.carouselListWrapper),
        s = parseFloat(t.getPropertyValue("width")),
        i = parseFloat(t.getPropertyValue("margin-right")),
        a = parseFloat(n.getPropertyValue("padding-left")),
        l = parseFloat(n.getPropertyValue("width"));
      e.thumbOriginalWidth ? (s = e.thumbOriginalWidth) : (e.thumbOriginalWidth = s), (e.thumbVisibItemsNb = parseInt((l - 2 * a + i) / (s + i))), (e.itemsWidth = (l - 2 * a + i) / e.thumbVisibItemsNb - i), (e.thumbTranslateContainer = (e.itemsWidth + i) * e.thumbVisibItemsNb), (e.itemsMargin = i), g || (e.carouselList.style.width = (e.itemsWidth + i) * e.slideshowItems.length + "px"), d(e);
    }
    function l(e) {
      e.thumbItems = e.carouselList.getElementsByClassName("thumbslide__nav-item");
      var t = window.getComputedStyle(e.thumbItems[0]),
        n = window.getComputedStyle(e.carouselListWrapper),
        s = parseFloat(t.getPropertyValue("width")),
        i = parseFloat(t.getPropertyValue("height")),
        a = s / i,
        l = parseFloat(t.getPropertyValue("margin-bottom")),
        o = parseFloat(n.getPropertyValue("padding-top")),
        r = (parseFloat(n.getPropertyValue("width")), parseFloat(n.getPropertyValue("height")));
      g || (r = parseFloat(window.getComputedStyle(e.element).getPropertyValue("height"))),
        e.thumbOriginalHeight
          ? ((function (e) {
              if (!Util.cssSupports("color", "var(--var-name)")) return;
              var t = parseInt(getComputedStyle(e.element).getPropertyValue("--thumbslide-thumbnail-auto-size"));
              if (t == e.thumbOriginalWidth) return;
              (e.thumbOriginalHeight = parseFloat(e.thumbOriginalHeight * (t / e.thumbOriginalWidth))), (e.thumbOriginalWidth = t);
            })(e),
            (i = e.thumbOriginalHeight))
          : ((e.thumbOriginalHeight = i), (e.thumbOriginalWidth = s)),
        (e.thumbVisibItemsNb = parseInt((r - 2 * o + l) / (i + l))),
        (e.itemsHeight = (r - 2 * o + l) / e.thumbVisibItemsNb - l),
        (e.itemsWidth = e.itemsHeight * a),
        (e.thumbTranslateContainer = (e.itemsHeight + l) * e.thumbVisibItemsNb),
        (e.itemsMargin = l),
        g || ((e.carousel.style.height = (e.itemsHeight + l) * e.slideshowItems.length + "px"), (e.carouselListWrapper.style.height = r + "px")),
        d(e);
    }
    function d(e) {
      for (var t, n = 0; n < e.thumbItems.length; n++) (e.thumbItems[n].style.width = e.itemsWidth + "px"), e.thumbVertical && (e.thumbItems[n].style.height = e.itemsHeight + "px");
      e.thumbVertical && ((t = parseFloat(window.getComputedStyle(e.carouselListWrapper).getPropertyValue("padding-left"))), (e.carousel.style.width = e.itemsWidth + 2 * t + "px"), g || (e.slideshow.style.width = parseFloat(window.getComputedStyle(e.element).getPropertyValue("width")) - (e.itemsWidth + 2 * t) - 10 + "px"));
    }
    function o(s) {
      s.slideshowObj.element.addEventListener("newItemSelected", function (e) {
        u(s, e.detail);
      }),
        s.carouselList.addEventListener("click", function (e) {
          var t;
          s.thumbDragging || ((t = e.target.closest(".thumbslide__nav-item")) && !Util.hasClass(t, "thumbslide__nav-item--active") && s.slideshowObj.showItem(Util.getIndexInArray(s.carouselList.getElementsByClassName("thumbslide__nav-item"), t)));
        }),
        window.addEventListener("resize", function (e) {
          s.resize ||
            ((s.resize = !0),
            window.requestAnimationFrame(
              function () {
                var e = this;
                (e.thumbVertical ? l : a)(e);
                d(e);
                var t = h(e);
                0 < (-1 * e.thumbTranslateVal) % (t + e.itemsMargin) && ((e.thumbTranslateVal = -1 * parseInt((-1 * e.thumbTranslateVal) / (t + e.itemsMargin)) * (t + e.itemsMargin)), c(e, !1));
                e.resize = !1;
              }.bind(s)
            ));
        }),
        new SwipeContent(s.carouselList),
        s.carouselList.addEventListener("dragStart", function (e) {
          var l,
            t = r(s, e);
          (s.dragStart = t),
            (l = s).carouselList.addEventListener("dragEnd", function e(t) {
              var n,
                s,
                i,
                a = r(l, t);
              (l.thumbTranslateVal = ((s = (n = l).thumbTranslateVal + a - l.dragStart), (i = h(n)), Math.round(s / (i + n.itemsMargin)) * (i + n.itemsMargin))),
                c(l, !1),
                (l.dragStart = !1),
                Util.removeClass(l.carouselList, "thumbslide__nav-list--no-transition"),
                l.carouselList.removeEventListener("dragEnd", e),
                setTimeout(function () {
                  l.thumbDragging = !1;
                }, 50),
                Util.removeClass(l.element, "thumbslide__nav-list--dragging");
            });
        }),
        s.carouselList.addEventListener("dragging", function (e) {
          var t, n;
          s.dragStart && ((t = r(s, e)), s.slideshowObj.animating || Math.abs(t - s.dragStart) < 20 || (Util.addClass(s.element, "thumbslide__nav-list--dragging"), (s.thumbDragging = !0), Util.addClass(s.carouselList, "thumbslide__nav-list--no-transition"), (n = s.thumbVertical ? "translateY" : "translateX"), i(s, n + "(" + (s.thumbTranslateVal + t - s.dragStart) + "px)")));
        });
    }
    function r(e, t) {
      return e.thumbVertical ? t.detail.y : t.detail.x;
    }
    function c(e, t) {
      var n = h(e);
      "next" == t ? (e.thumbTranslateVal = e.thumbTranslateVal - e.thumbTranslateContainer) : "prev" == t && (e.thumbTranslateVal = e.thumbTranslateVal + e.thumbTranslateContainer),
        -1 * e.thumbTranslateVal >= (e.thumbItems.length - e.thumbVisibItemsNb) * (n + e.itemsMargin) && (e.thumbTranslateVal = (e.thumbItems.length - e.thumbVisibItemsNb) * (n + e.itemsMargin) * -1),
        0 < e.thumbTranslateVal && (e.thumbTranslateVal = 0),
        i(e, (e.thumbVertical ? "translateY" : "translateX") + "(" + e.thumbTranslateVal + "px)"),
        m(e);
    }
    function u(e, t) {
      var n = e.carouselList.getElementsByClassName("thumbslide__nav-item--active");
      0 < n.length && Util.removeClass(n[0], "thumbslide__nav-item--active"),
        Util.addClass(e.thumbItems[t], "thumbslide__nav-item--active"),
        (function e(t, n) {
          var s = h(t);
          {
            var i;
            0 <= (n + 1 - t.thumbVisibItemsNb) * (s + t.itemsMargin) + t.thumbTranslateVal || (n * (s + t.itemsMargin) + t.thumbTranslateVal <= 0 && t.thumbTranslateVal < 0)
              ? ((i = 0 <= (n + 1 - t.thumbVisibItemsNb) * (s + t.itemsMargin) + t.thumbTranslateVal ? 1 : -1), t.recursiveDirection && t.recursiveDirection != i ? ((t.recursiveDirection = !1), c(t, !1)) : ((t.thumbTranslateVal = -1 * i * (s + t.itemsMargin) + t.thumbTranslateVal), (t.recursiveDirection = i), e(t, n)))
              : ((t.recursiveDirection = !1), c(t, !1));
          }
        })(e, t);
    }
    function m(e) {
      var t = h(e);
      Util.toggleClass(e.carouselListWrapper, "thumbslide__nav--scroll-start", 0 != e.thumbTranslateVal),
        Util.toggleClass(e.carouselListWrapper, "thumbslide__nav--scroll-end", e.thumbTranslateVal != (e.thumbItems.length - e.thumbVisibItemsNb) * (t + e.itemsMargin) * -1 && e.thumbItems.length > e.thumbVisibItemsNb),
        0 != e.carouselControls.length && (Util.toggleClass(e.carouselControls[0], "thumbslide__tb-control--disabled", 0 == e.thumbTranslateVal), Util.toggleClass(e.carouselControls[1], "thumbslide__tb-control--disabled", e.thumbTranslateVal == (e.thumbItems.length - e.thumbVisibItemsNb) * (t + e.itemsMargin) * -1));
    }
    function h(e) {
      return e.thumbVertical ? e.itemsHeight : e.itemsWidth;
    }
    function i(e, t) {
      (e.carouselList.style.transform = t), (e.carouselList.style.msTransform = t);
    }
    var t = document.getElementsByClassName("js-thumbslide"),
      g = Util.cssSupports("align-items", "stretch");
    if (0 < t.length) for (var n = 0; n < t.length; n++) new e(t[n]);
  })(),
  (function () {
    function e(e) {
      var t;
      (this.element = e),
        (this.steps = this.element.getElementsByClassName("js-wiz-form__step")),
        (this.currentIndex = 0),
        (this.stepPrevClass = "wiz-form__step--prev"),
        (this.stepNextClass = "wiz-form__step--next"),
        (this.currentClass = "js-wiz-form__step--current"),
        (this.navPrev = this.element.getElementsByClassName("js-wiz-form__prev")),
        (this.navNext = this.element.getElementsByClassName("js-wiz-form__next")),
        (this.formSubmit = this.element.getElementsByClassName("js-wiz-form__submit")),
        (this.stepsBar = this.element.getElementsByClassName("js-wiz-form__step-indicator")),
        0 < this.stepsBar.length && ((this.stepsBarCurrent = this.stepsBar[0].getElementsByClassName("js-steps-v2__current-step")), (this.stepsBarTot = this.stepsBar[0].getElementsByClassName("js-steps-v2__tot-steps"))),
        (function (e) {
          var t = e.element.getElementsByClassName(e.currentClass);
          (e.currentIndex = 0 < t.length ? Util.getIndexInArray(e.steps, t[0]) : 0), n(e);
        })((t = this)),
        s(t),
        (function (e) {
          e.stepsBarTot && 0 < e.stepsBarTot.length && ((e.stepsBarTot[0].textContent = e.steps.length), e.stepsBar[0].style.setProperty("--steps-v2-steps-nr", e.steps.length));
        })(t),
        i(t),
        t.element.addEventListener("click", function (e) {
          e.target.closest(".js-wiz-form__next") && a(t, "next"), e.target.closest(".js-wiz-form__prev") && a(t, "prev");
        });
    }
    function n(e) {
      for (var t = 0; t < e.steps.length; t++) t < e.currentIndex ? (Util.addClass(e.steps[t], e.stepPrevClass), Util.removeClass(e.steps[t], e.stepNextClass + " " + e.currentClass)) : t > e.currentIndex ? (Util.addClass(e.steps[t], e.stepNextClass), Util.removeClass(e.steps[t], e.stepPrevClass + " " + e.currentClass)) : (Util.addClass(e.steps[t], e.currentClass), Util.removeClass(e.steps[t], e.stepNextClass + " " + e.stepPrevClass));
    }
    function s(e) {
      0 < e.navPrev.length && (0 < e.currentIndex ? Util.removeClass(e.navPrev[0], "is-hidden") : Util.addClass(e.navPrev[0], "is-hidden")), 0 < e.navNext.length && 0 < e.formSubmit.length && (e.currentIndex == e.steps.length - 1 ? (Util.addClass(e.navNext[0], "is-hidden"), Util.removeClass(e.formSubmit[0], "is-hidden")) : (Util.removeClass(e.navNext[0], "is-hidden"), Util.addClass(e.formSubmit[0], "is-hidden")));
    }
    function i(e) {
      e.stepsBarCurrent && 0 < e.stepsBarCurrent.length && (e.stepsBar[0].style.setProperty("--step-v2-current-step", e.currentIndex + 1), (e.stepsBarCurrent[0].textContent = e.currentIndex + 1));
    }
    function a(e, t) {
      (e.currentIndex = "next" == t ? e.currentIndex + 1 : e.currentIndex - 1), l(e);
    }
    function l(e) {
      e.currentIndex < 0 && (e.currentIndex = 0), e.currentIndex > e.steps.length && (e.currentIndex = e.steps.length), e.currentIndex < e.steps.length ? (n(e), s(e), i(e)) : (e.currentIndex = e.steps.length - 1);
    }
    (e.prototype.showStep = function (e) {
      (this.currentIndex = e - 1), l(this);
    }),
      (window.WizardForm = e);
  })(),
  (function () {
    var e = document.getElementById("area-chart-card");
    e &&
      new Chart({
        element: e,
        type: "area",
        xAxis: { line: !0, labels: ["Jan", "Feb", "Mar", "Apr", "May", "Jun", "Jul", "Aug", "Sep", "Oct", "Nov", "Dec"], ticks: !0 },
        yAxis: { labels: !0 },
        datasets: [{ data: [1, 2, 3, 12, 8, 7, 10, 4, 9, 5, 16, 3] }],
        tooltip: {
          enabled: !0,
          customHTML: function (e, t, n) {
            return '<span class="color-contrast-medium">' + t.xAxis.labels[e] + ":</span> $" + t.datasets[n].data[e];
          },
        },
        animate: !0,
      });
  })(),
  (function () {
    var e = document.getElementById("column-chart-card");
    e &&
      new Chart({
        element: e,
        type: "column",
        xAxis: { line: !0, labels: ["Jan", "Feb", "Mar", "Apr", "May", "Jun", "Jul", "Aug", "Sep", "Oct", "Nov", "Dec"], ticks: !0 },
        yAxis: { labels: !0 },
        datasets: [{ data: [1, 2, 3, 12, 8, 7, 10, 4, 9, 5, 16, 3] }, { data: [4, 8, 10, 12, 15, 11, 7, 3, 5, 2, 12, 6] }],
        column: { width: "60%", gap: "2px", radius: "4px" },
        tooltip: {
          enabled: !0,
          customHTML: function (e, t, n) {
            var s = '<p class="margin-bottom-xxs">Total ' + t.xAxis.labels[e] + "</p>";
            return (s = (s = s + '<p class="flex items-center"><span class="height-xxxs width-xxxs radius-50% bg-primary margin-right-xxs"></span>$' + t.datasets[0].data[e] + "</p>") + '<p class="flex items-center"><span class="height-xxxs width-xxxs radius-50% bg-contrast-higher margin-right-xxs"></span>$' + t.datasets[1].data[e] + "</p>");
          },
          position: "top",
        },
        animate: !0,
      });
  })(),
  (function () {
    function e(e) {
      var t,
        n = e.getElementsByClassName("js-product-v2__slideshow"),
        s = e.getElementsByClassName("js-color-swatches__select");
      0 != n.length &&
        0 != s.length &&
        ((t = n[0].getElementsByClassName("js-slideshow__item")),
        s[0].addEventListener("change", function (e) {
          !(function (e, t, n) {
            var s = document.getElementById("item-" + e);
            if (!s) return;
            var i = new CustomEvent("selectNewItem", { detail: Util.getIndexInArray(n, s) + 1 });
            t.dispatchEvent(i);
          })(s[0].options[s[0].selectedIndex].value, n[0], t);
        }));
    }
    var t = document.getElementsByClassName("js-product-v2");
    if (0 < t.length) for (var n = 0; n < t.length; n++) e(t[n]);
  })(),
  (function () {
    var e = document.getElementById("stats-card-chart-1");
    e && new Chart({ element: e, type: "area", xAxis: { labels: !1, guides: !1 }, yAxis: { labels: !1, range: [0, 16], step: 1 }, datasets: [{ data: [1, 2, 3, 12, 8, 7, 10, 4, 9, 5, 16, 3] }], tooltip: { enabled: !0 }, padding: 6, animate: !0 });
  })();
